{"created": 1746634534.149324, "duration": 0.10871005058288574, "exitcode": 1, "root": "/Users/celine/Research/librarybench", "environment": {}, "summary": {"passed": 36, "failed": 5, "total": 41, "collected": 41}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py", "type": "Module"}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py", "type": "Module"}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py", "type": "Module"}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py", "type": "Module"}]}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py", "outcome": "passed", "result": [{"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0.0-1.0.0-True]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.2.5-1.2.3-True]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.3.0-1.2.9-True]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.3.0-1.3.0-True]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.3.1-1.3.2-False]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.2.0-1.3.0-False]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[2.0.0-1.5.9-False]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0-1.0.0-True]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0.1-1.0-True]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0-1.0.1-False]", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_parse_version_standard", "type": "Function", "lineno": 18}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_parse_version_shorthand", "type": "Function", "lineno": 21}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_parse_version_invalid", "type": "Function", "lineno": 25}]}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py", "outcome": "passed", "result": [{"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_all_pass", "type": "Function", "lineno": 3}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_all_fail_without_error", "type": "Function", "lineno": 16}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_raises_exception", "type": "Function", "lineno": 29}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_mixed_results", "type": "Function", "lineno": 38}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_empty_suite", "type": "Function", "lineno": 54}]}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py", "outcome": "passed", "result": [{"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_simple_types", "type": "Function", "lineno": 16}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_dict_schema_success", "type": "Function", "lineno": 25}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_dict_schema_missing_key", "type": "Function", "lineno": 31}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_list_schema_error", "type": "Function", "lineno": 38}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_invalid_schema", "type": "Function", "lineno": 45}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_encode_decode_flat_dict", "type": "Function", "lineno": 54}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_encode_decode_nested_dict_and_list", "type": "Function", "lineno": 66}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_encode_dictionary_type_error", "type": "Function", "lineno": 81}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_decode_dictionary_type_error", "type": "Function", "lineno": 85}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_decode_dictionary_invalid_entry", "type": "Function", "lineno": 89}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_compress_no_compression_for_short_string", "type": "Function", "lineno": 96}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_compress_and_decompress_simple", "type": "Function", "lineno": 101}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_compress_deeply_nested", "type": "Function", "lineno": 112}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_example_use_cases_full_cycle", "type": "Function", "lineno": 129}]}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py", "outcome": "passed", "result": [{"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_json_round_trip", "type": "Function", "lineno": 30}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_yaml_round_trip", "type": "Function", "lineno": 36}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_xml_round_trip_simple", "type": "Function", "lineno": 42}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_xml_round_trip_nested", "type": "Function", "lineno": 48}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_cross_language_support", "type": "Function", "lineno": 53}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_data_integrity_checks", "type": "Function", "lineno": 65}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_nested_structures", "type": "Function", "lineno": 78}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_unsupported_format", "type": "Function", "lineno": 83}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_unit_testing_hint", "type": "Function", "lineno": 89}]}], "tests": [{"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0.0-1.0.0-True]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.0.0-1.0.0-True]", "parametrize", "pytestmark", "1.0.0-1.0.0-True", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.0002911660121753812, "outcome": "passed"}, "call": {"duration": 9.812501957640052e-05, "outcome": "passed"}, "teardown": {"duration": 8.358398918062449e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.2.5-1.2.3-True]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.2.5-1.2.3-True]", "parametrize", "pytestmark", "1.2.5-1.2.3-True", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00011520800762809813, "outcome": "passed"}, "call": {"duration": 7.37910158932209e-05, "outcome": "passed"}, "teardown": {"duration": 7.237499812617898e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.3.0-1.2.9-True]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.3.0-1.2.9-True]", "parametrize", "pytestmark", "1.3.0-1.2.9-True", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.0001086670090444386, "outcome": "passed"}, "call": {"duration": 6.683400715701282e-05, "outcome": "passed"}, "teardown": {"duration": 6.545797805301845e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.3.0-1.3.0-True]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.3.0-1.3.0-True]", "parametrize", "pytestmark", "1.3.0-1.3.0-True", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010708300396800041, "outcome": "passed"}, "call": {"duration": 6.916598067618906e-05, "outcome": "passed"}, "teardown": {"duration": 0.0001313749817200005, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.3.1-1.3.2-False]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.3.1-1.3.2-False]", "parametrize", "pytestmark", "1.3.1-1.3.2-False", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010599999222904444, "outcome": "passed"}, "call": {"duration": 6.833299994468689e-05, "outcome": "passed"}, "teardown": {"duration": 6.970801041461527e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.2.0-1.3.0-False]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.2.0-1.3.0-False]", "parametrize", "pytestmark", "1.2.0-1.3.0-False", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.0001066249969881028, "outcome": "passed"}, "call": {"duration": 6.954200216569006e-05, "outcome": "passed"}, "teardown": {"duration": 6.883300375193357e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[2.0.0-1.5.9-False]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[2.0.0-1.5.9-False]", "parametrize", "pytestmark", "2.0.0-1.5.9-False", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010466598905622959, "outcome": "passed"}, "call": {"duration": 6.708299042657018e-05, "outcome": "passed"}, "teardown": {"duration": 6.554200081154704e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0-1.0.0-True]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.0-1.0.0-True]", "parametrize", "pytestmark", "1.0-1.0.0-True", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010008300887420774, "outcome": "passed"}, "call": {"duration": 6.445799954235554e-05, "outcome": "passed"}, "teardown": {"duration": 6.52089947834611e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0.1-1.0-True]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.0.1-1.0-True]", "parametrize", "pytestmark", "1.0.1-1.0-True", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010287499753758311, "outcome": "passed"}, "call": {"duration": 6.845800089649856e-05, "outcome": "passed"}, "teardown": {"duration": 8.512500789947808e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_ensure_backward_compatibility[1.0-1.0.1-False]", "lineno": 3, "outcome": "passed", "keywords": ["test_ensure_backward_compatibility[1.0-1.0.1-False]", "parametrize", "pytestmark", "1.0-1.0.1-False", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.0001060419890563935, "outcome": "passed"}, "call": {"duration": 6.79170188959688e-05, "outcome": "passed"}, "teardown": {"duration": 6.474999827332795e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_parse_version_standard", "lineno": 18, "outcome": "passed", "keywords": ["test_parse_version_standard", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 6.237498018890619e-05, "outcome": "passed"}, "call": {"duration": 6.633400334976614e-05, "outcome": "passed"}, "teardown": {"duration": 6.179101183079183e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_parse_version_shorthand", "lineno": 21, "outcome": "passed", "keywords": ["test_parse_version_shorthand", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 6.045898771844804e-05, "outcome": "passed"}, "call": {"duration": 6.824999582022429e-05, "outcome": "passed"}, "teardown": {"duration": 5.58749889023602e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_compatibility.py::test_parse_version_invalid", "lineno": 25, "outcome": "passed", "keywords": ["test_parse_version_invalid", "test_compatibility.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.637502181343734e-05, "outcome": "passed"}, "call": {"duration": 0.00012012501247227192, "outcome": "passed"}, "teardown": {"duration": 5.741699715144932e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_all_pass", "lineno": 3, "outcome": "passed", "keywords": ["test_run_integration_tests_all_pass", "test_integration.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 6.366698653437197e-05, "outcome": "passed"}, "call": {"duration": 0.0001943749957717955, "outcome": "passed"}, "teardown": {"duration": 5.2041985327377915e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_all_fail_without_error", "lineno": 16, "outcome": "passed", "keywords": ["test_run_integration_tests_all_fail_without_error", "test_integration.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.679202149622142e-05, "outcome": "passed"}, "call": {"duration": 6.037499406374991e-05, "outcome": "passed"}, "teardown": {"duration": 5.1291019190102816e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_raises_exception", "lineno": 29, "outcome": "passed", "keywords": ["test_run_integration_tests_raises_exception", "test_integration.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.5209005950018764e-05, "outcome": "passed"}, "call": {"duration": 6.150000263005495e-05, "outcome": "passed"}, "teardown": {"duration": 5.3082971135154366e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_mixed_results", "lineno": 38, "outcome": "passed", "keywords": ["test_run_integration_tests_mixed_results", "test_integration.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.245799547992647e-05, "outcome": "passed"}, "call": {"duration": 6.575000588782132e-05, "outcome": "passed"}, "teardown": {"duration": 7.73330102674663e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Software_Architect/test_integration.py::test_run_integration_tests_empty_suite", "lineno": 54, "outcome": "passed", "keywords": ["test_run_integration_tests_empty_suite", "test_integration.py", "Software_Architect", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.9792015235871077e-05, "outcome": "passed"}, "call": {"duration": 6.279200897552073e-05, "outcome": "passed"}, "teardown": {"duration": 5.604099715128541e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_simple_types", "lineno": 16, "outcome": "passed", "keywords": ["test_validate_data_simple_types", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00015312500181607902, "outcome": "passed"}, "call": {"duration": 7.520898361690342e-05, "outcome": "passed"}, "teardown": {"duration": 9.058401337824762e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_dict_schema_success", "lineno": 25, "outcome": "passed", "keywords": ["test_validate_data_dict_schema_success", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 7.01249809935689e-05, "outcome": "passed"}, "call": {"duration": 0.00015754200285300612, "outcome": "passed"}, "teardown": {"duration": 6.770799518562853e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_dict_schema_missing_key", "lineno": 31, "outcome": "passed", "keywords": ["test_validate_data_dict_schema_missing_key", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.7124998420476913e-05, "outcome": "passed"}, "call": {"duration": 8.429199806414545e-05, "outcome": "passed"}, "teardown": {"duration": 5.033399793319404e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_list_schema_error", "lineno": 38, "outcome": "passed", "keywords": ["test_validate_data_list_schema_error", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 6.408299668692052e-05, "outcome": "passed"}, "call": {"duration": 6.766599835827947e-05, "outcome": "passed"}, "teardown": {"duration": 5.458298255689442e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_validate_data_invalid_schema", "lineno": 45, "outcome": "passed", "keywords": ["test_validate_data_invalid_schema", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010304199531674385, "outcome": "passed"}, "call": {"duration": 9.675000910647213e-05, "outcome": "passed"}, "teardown": {"duration": 6.000002031214535e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_encode_decode_flat_dict", "lineno": 54, "outcome": "passed", "keywords": ["test_encode_decode_flat_dict", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 6.929200026206672e-05, "outcome": "passed"}, "call": {"duration": 7.000000914558768e-05, "outcome": "passed"}, "teardown": {"duration": 5.408399738371372e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_encode_decode_nested_dict_and_list", "lineno": 66, "outcome": "passed", "keywords": ["test_encode_decode_nested_dict_and_list", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.124998278915882e-05, "outcome": "passed"}, "call": {"duration": 6.641601794399321e-05, "outcome": "passed"}, "teardown": {"duration": 5.091700586490333e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_encode_dictionary_type_error", "lineno": 81, "outcome": "passed", "keywords": ["test_encode_dictionary_type_error", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.520798731595278e-05, "outcome": "passed"}, "call": {"duration": 6.366698653437197e-05, "outcome": "passed"}, "teardown": {"duration": 5.2749994210898876e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_decode_dictionary_type_error", "lineno": 85, "outcome": "passed", "keywords": ["test_decode_dictionary_type_error", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 6.166700040921569e-05, "outcome": "passed"}, "call": {"duration": 6.216697511263192e-05, "outcome": "passed"}, "teardown": {"duration": 5.9333979152143e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_decode_dictionary_invalid_entry", "lineno": 89, "outcome": "passed", "keywords": ["test_decode_dictionary_invalid_entry", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.729199619963765e-05, "outcome": "passed"}, "call": {"duration": 0.00022187500144355, "outcome": "passed"}, "teardown": {"duration": 5.400000372901559e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_compress_no_compression_for_short_string", "lineno": 96, "outcome": "passed", "keywords": ["test_compress_no_compression_for_short_string", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.683401832357049e-05, "outcome": "passed"}, "call": {"duration": 6.354201468639076e-05, "outcome": "passed"}, "teardown": {"duration": 5.512501229532063e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_compress_and_decompress_simple", "lineno": 101, "outcome": "passed", "keywords": ["test_compress_and_decompress_simple", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.800000508315861e-05, "outcome": "passed"}, "call": {"duration": 0.00011445902055129409, "outcome": "passed"}, "teardown": {"duration": 5.295799928717315e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_compress_deeply_nested", "lineno": 112, "outcome": "passed", "keywords": ["test_compress_deeply_nested", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.570802022702992e-05, "outcome": "passed"}, "call": {"duration": 7.683297735638916e-05, "outcome": "passed"}, "teardown": {"duration": 5.695901927538216e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/DataAnalyst/test_data_processor.py::test_example_use_cases_full_cycle", "lineno": 129, "outcome": "passed", "keywords": ["test_example_use_cases_full_cycle", "test_data_processor.py", "DataAnalyst", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 5.533298826776445e-05, "outcome": "passed"}, "call": {"duration": 9.891699301078916e-05, "outcome": "passed"}, "teardown": {"duration": 5.649999366141856e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_json_round_trip", "lineno": 30, "outcome": "passed", "keywords": ["test_json_round_trip", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00027837499510496855, "outcome": "passed"}, "call": {"duration": 9.4832998001948e-05, "outcome": "passed"}, "teardown": {"duration": 5.8958015870302916e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_yaml_round_trip", "lineno": 36, "outcome": "passed", "keywords": ["test_yaml_round_trip", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 7.491599535569549e-05, "outcome": "passed"}, "call": {"duration": 7.087501580826938e-05, "outcome": "passed"}, "teardown": {"duration": 9.420799324288964e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_xml_round_trip_simple", "lineno": 42, "outcome": "failed", "keywords": ["test_xml_round_trip_simple", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 9.937499999068677e-05, "outcome": "passed"}, "call": {"duration": 0.0003862919984385371, "outcome": "failed", "crash": {"path": "/Users/celine/Research/librarybench/data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 47, "message": "AssertionError: assert {'active': Tr...: 'None', ...} == {'active': Tr...s': None, ...}\n  \n  Omitting 4 identical items, use -vv to show\n  Differing items:\n  {'preferences': 'None'} != {'preferences': None}\n  Use -v to get more diff"}, "traceback": [{"path": "../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 47, "message": "AssertionError"}], "longrepr": "transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102636c10>\n\n    def test_xml_round_trip_simple(transformer):\n        s = transformer.serialize(simple_data, 'xml')\n        assert s.startswith('<root>')\n        d = transformer.deserialize(s, 'xml')\n>       assert d == simple_data\nE       AssertionError: assert {'active': Tr...: 'None', ...} == {'active': Tr...s': None, ...}\nE         \nE         Omitting 4 identical items, use -vv to show\nE         Differing items:\nE         {'preferences': 'None'} != {'preferences': None}\nE         Use -v to get more diff\n\n../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:47: AssertionError"}, "teardown": {"duration": 0.00035983300767838955, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_xml_round_trip_nested", "lineno": 48, "outcome": "failed", "keywords": ["test_xml_round_trip_nested", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00014733299030922353, "outcome": "passed"}, "call": {"duration": 0.0004907499824184924, "outcome": "failed", "crash": {"path": "/Users/celine/Research/librarybench/data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 52, "message": "AssertionError: assert {'stats': {'m... 'None', ...}} == {'stats': {'m...': None, ...}}\n  \n  Omitting 2 identical items, use -vv to show\n  Differing items:\n  {'user': {'active': True, 'age': 30, 'name': 'Alice', 'preferences': 'None', ...}} != {'user': {'active': True, 'age': 30, 'name': 'Alice', 'preferences': None, ...}}\n  Use -v to get more diff"}, "traceback": [{"path": "../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 52, "message": "AssertionError"}], "longrepr": "transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102751ba0>\n\n    def test_xml_round_trip_nested(transformer):\n        s = transformer.serialize(nested_data, 'xml')\n        d = transformer.deserialize(s, 'xml')\n>       assert d == nested_data\nE       AssertionError: assert {'stats': {'m... 'None', ...}} == {'stats': {'m...': None, ...}}\nE         \nE         Omitting 2 identical items, use -vv to show\nE         Differing items:\nE         {'user': {'active': True, 'age': 30, 'name': 'Alice', 'preferences': 'None', ...}} != {'user': {'active': True, 'age': 30, 'name': 'Alice', 'preferences': None, ...}}\nE         Use -v to get more diff\n\n../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:52: AssertionError"}, "teardown": {"duration": 0.00012074998812749982, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_cross_language_support", "lineno": 53, "outcome": "failed", "keywords": ["test_cross_language_support", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00010812500840984285, "outcome": "passed"}, "call": {"duration": 0.00012604199582710862, "outcome": "failed", "crash": {"path": "/Users/celine/Research/librarybench/data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 61, "message": "NameError: name 'yaml' is not defined"}, "traceback": [{"path": "../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 61, "message": "NameError"}], "longrepr": "transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102751a70>\n\n    def test_cross_language_support(transformer):\n        for fmt in transformer.SUPPORTED_FORMATS:\n            serialized, deserialized, ok = transformer.cross_language_support(nested_data, fmt)\n            assert ok\n            if fmt == 'json':\n                assert json.loads(serialized) == nested_data\n            elif fmt == 'yaml':\n>               assert yaml.safe_load(serialized) == nested_data\nE               NameError: name 'yaml' is not defined\n\n../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:61: NameError"}, "teardown": {"duration": 7.737500709481537e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_data_integrity_checks", "lineno": 65, "outcome": "failed", "keywords": ["test_data_integrity_checks", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 8.395800250582397e-05, "outcome": "passed"}, "call": {"duration": 0.000275415979558602, "outcome": "failed", "crash": {"path": "/Users/celine/Research/librarybench/data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 70, "message": "assert False is True"}, "traceback": [{"path": "../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 70, "message": "AssertionError"}], "longrepr": "transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x1027fbbf0>\n\n    def test_data_integrity_checks(transformer):\n        checks = transformer.data_integrity_checks(simple_data)\n        assert set(checks.keys()) == set(transformer.SUPPORTED_FORMATS)\n        for fmt, result in checks.items():\n>           assert result['round_trip'] is True\nE           assert False is True\n\n../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:70: AssertionError"}, "teardown": {"duration": 0.0005850000015925616, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_nested_structures", "lineno": 78, "outcome": "failed", "keywords": ["test_nested_structures", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 0.00015966701903380454, "outcome": "passed"}, "call": {"duration": 0.00038095799391157925, "outcome": "failed", "crash": {"path": "/Users/celine/Research/librarybench/data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 82, "message": "assert False is True"}, "traceback": [{"path": "../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py", "lineno": 82, "message": "AssertionError"}], "longrepr": "transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102cbd7b0>\n\n    def test_nested_structures(transformer):\n        results = transformer.nested_structures(nested_data)\n        for fmt, result in results.items():\n>           assert result['round_trip'] is True\nE           assert False is True\n\n../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:82: AssertionError"}, "teardown": {"duration": 8.354199235327542e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_unsupported_format", "lineno": 83, "outcome": "passed", "keywords": ["test_unsupported_format", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 8.866700227372348e-05, "outcome": "passed"}, "call": {"duration": 8.325002272613347e-05, "outcome": "passed"}, "teardown": {"duration": 5.67499955650419e-05, "outcome": "passed"}}, {"nodeid": "data_encoder_o4-mini_group1_0/Data_Scientist/tests/test_serializer.py::test_unit_testing_hint", "lineno": 89, "outcome": "passed", "keywords": ["test_unit_testing_hint", "test_serializer.py", "tests", "Data_Scientist", "data_encoder_o4-mini_group1_0", "librarybench", ""], "setup": {"duration": 8.22089787106961e-05, "outcome": "passed"}, "call": {"duration": 6.904100882820785e-05, "outcome": "passed"}, "teardown": {"duration": 5.987501936033368e-05, "outcome": "passed"}}]}