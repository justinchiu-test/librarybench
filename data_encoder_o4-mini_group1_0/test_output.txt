======================================== test session starts ========================================
platform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/celine/Research/librarybench
configfile: pyproject.toml
plugins: anyio-4.9.0, json-report-1.5.0, metadata-3.1.1
collected 41 items

Software_Architect/test_compatibility.py .............                                        [ 31%]
Software_Architect/test_integration.py .....                                                  [ 43%]
DataAnalyst/test_data_processor.py ..............                                             [ 78%]
Data_Scientist/tests/test_serializer.py ..FFFFF..                                             [100%]

============================================= FAILURES ==============================================
____________________________________ test_xml_round_trip_simple _____________________________________

transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102636c10>

    def test_xml_round_trip_simple(transformer):
        s = transformer.serialize(simple_data, 'xml')
        assert s.startswith('<root>')
        d = transformer.deserialize(s, 'xml')
>       assert d == simple_data
E       AssertionError: assert {'active': Tr...: 'None', ...} == {'active': Tr...s': None, ...}
E         
E         Omitting 4 identical items, use -vv to show
E         Differing items:
E         {'preferences': 'None'} != {'preferences': None}
E         Use -v to get more diff

../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:47: AssertionError
____________________________________ test_xml_round_trip_nested _____________________________________

transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102751ba0>

    def test_xml_round_trip_nested(transformer):
        s = transformer.serialize(nested_data, 'xml')
        d = transformer.deserialize(s, 'xml')
>       assert d == nested_data
E       AssertionError: assert {'stats': {'m... 'None', ...}} == {'stats': {'m...': None, ...}}
E         
E         Omitting 2 identical items, use -vv to show
E         Differing items:
E         {'user': {'active': True, 'age': 30, 'name': 'Alice', 'preferences': 'None', ...}} != {'user': {'active': True, 'age': 30, 'name': 'Alice', 'preferences': None, ...}}
E         Use -v to get more diff

../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:52: AssertionError
____________________________________ test_cross_language_support ____________________________________

transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102751a70>

    def test_cross_language_support(transformer):
        for fmt in transformer.SUPPORTED_FORMATS:
            serialized, deserialized, ok = transformer.cross_language_support(nested_data, fmt)
            assert ok
            if fmt == 'json':
                assert json.loads(serialized) == nested_data
            elif fmt == 'yaml':
>               assert yaml.safe_load(serialized) == nested_data
E               NameError: name 'yaml' is not defined

../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:61: NameError
____________________________________ test_data_integrity_checks _____________________________________

transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x1027fbbf0>

    def test_data_integrity_checks(transformer):
        checks = transformer.data_integrity_checks(simple_data)
        assert set(checks.keys()) == set(transformer.SUPPORTED_FORMATS)
        for fmt, result in checks.items():
>           assert result['round_trip'] is True
E           assert False is True

../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:70: AssertionError
______________________________________ test_nested_structures _______________________________________

transformer = <Data_Scientist.src.serializer.DataTransformer object at 0x102cbd7b0>

    def test_nested_structures(transformer):
        results = transformer.nested_structures(nested_data)
        for fmt, result in results.items():
>           assert result['round_trip'] is True
E           assert False is True

../data_encoder_o4-mini_group1_original/Data_Scientist/tests/test_serializer.py:82: AssertionError
-------------------------------------------- JSON report --------------------------------------------
report saved to: report.json
====================================== short test summary info ======================================
FAILED Data_Scientist/tests/test_serializer.py::test_xml_round_trip_simple - AssertionError: asser...
FAILED Data_Scientist/tests/test_serializer.py::test_xml_round_trip_nested - AssertionError: asser...
FAILED Data_Scientist/tests/test_serializer.py::test_cross_language_support - NameError: name 'yam...
FAILED Data_Scientist/tests/test_serializer.py::test_data_integrity_checks - assert False is True
FAILED Data_Scientist/tests/test_serializer.py::test_nested_structures - assert False is True
=================================== 5 failed, 36 passed in 0.11s ====================================
