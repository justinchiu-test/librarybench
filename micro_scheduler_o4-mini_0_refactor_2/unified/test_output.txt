============================= test session starts ==============================
platform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/celine/Research/librarybench
configfile: pyproject.toml
plugins: anyio-4.9.0, json-report-1.5.0, timeout-2.4.0, metadata-3.1.1
collected 114 items

tests/test_data_engineer_scheduler.py .s.......                          [  7%]
tests/test_data_scientist_scheduler.py ............                      [ 18%]
tests/test_devops_admin_scheduler.py ...........                         [ 28%]
tests/test_devops_admin_utils.py .                                       [ 28%]
tests/test_devops_engineer_persistence.py .....                          [ 33%]
tests/test_devops_engineer_scheduler.py ..........                       [ 42%]
tests/test_ecommerce_manager_scheduler.py .......                        [ 48%]
tests/test_finance_analyst_scheduler.py ...........                      [ 57%]
tests/test_iot_coordinator_scheduler.py ..........                       [ 66%]
tests/test_iot_developer_scheduler.py .........                          [ 74%]
tests/test_qa_engineer_scheduler.py ...........                          [ 84%]
tests/test_saas_platform_admin_scheduler.py ........                     [ 91%]
tests/test_web_scraper_scheduler.py .......s..                           [100%]

=============================== warnings summary ===============================
tests/test_data_engineer_scheduler.py:24
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_data_engineer_scheduler.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.asyncio

tests/test_web_scraper_scheduler.py:106
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_web_scraper_scheduler.py:106: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.asyncio

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_data_engineer_scheduler.py::test_async_job
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_web_scraper_scheduler.py::test_run_async_job
  /Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.
  You need to install a suitable plugin for your async framework, for example:
    - anyio
    - pytest-asyncio
    - pytest-tornasync
    - pytest-trio
    - pytest-twisted
    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_schedule_and_list_jobs
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_persist_and_load_jobs
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_adjust_interval
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_register_hooks_and_run_job
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_graceful_shutdown_waits_and_persists
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_expose_metrics
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_expose_metrics
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/devops_admin/scheduler.py:43: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    now = datetime.utcnow()

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_schedule_and_list_jobs
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py:28: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    diff = (nr - datetime.utcnow()).total_seconds()

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_adjust_interval
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/devops_admin/scheduler.py:182: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    job["next_run"] = datetime.utcnow() + timedelta(seconds=new_interval)

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_adjust_interval
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py:55: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    diff = (job["next_run"] - datetime.utcnow()).total_seconds()

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_register_hooks_and_run_job
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_expose_metrics
micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_expose_metrics
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/devops_admin/scheduler.py:118: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    job["next_run"] = datetime.utcnow() + timedelta(seconds=job["interval"])

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_devops_admin_scheduler.py::test_expose_metrics
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/devops_admin/scheduler.py:31: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    now = datetime.utcnow()

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py::test_manual_trigger_and_dependency
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py:14: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    id2 = scheduler.schedule_job('job2', job2, run_at=datetime.utcnow())

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py::test_priority_sorting
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py:73: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    id1 = scheduler.schedule_job('a', f, run_at=datetime.utcnow())

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py::test_priority_sorting
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py:74: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    id2 = scheduler.schedule_job('b', f, run_at=datetime.utcnow())

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py::test_namespace_and_tags_and_query
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_ecommerce_manager_scheduler.py:101: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    id1 = scheduler.schedule_job('job', f, run_at=datetime.utcnow(), tags=tags, tenant='store_north')

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_finance_analyst_scheduler.py::test_graceful_shutdown_persists_partial_data
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/finance_analyst/scheduler.py:28: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    _partial_data.append({'timestamp': datetime.datetime.utcnow().isoformat()})

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_qa_engineer_scheduler.py: 18 warnings
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/qa_engineer/scheduler.py:137: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    timestamp = datetime.utcnow().isoformat()

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_qa_engineer_scheduler.py::test_dependencies
  /Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:82: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-36 (run)
  
  Traceback (most recent call last):
    File "/Users/celine/miniconda3/envs/library/lib/python3.13/threading.py", line 1041, in _bootstrap_inner
      self.run()
      ~~~~~~~~^^
    File "/Users/celine/miniconda3/envs/library/lib/python3.13/threading.py", line 992, in run
      self._target(*self._args, **self._kwargs)
      ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/src/qa_engineer/scheduler.py", line 141, in run
      'status': status,
                ^^^^^^
  UnboundLocalError: cannot access local variable 'status' where it is not associated with a value
  
    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))

micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_web_scraper_scheduler.py::test_coordinate_leader_election
  /Users/celine/Research/librarybench/micro_scheduler_o4-mini_0_refactor_2/unified/tests/test_web_scraper_scheduler.py:137: DeprecationWarning: There is no current event loop
    acquired = asyncio.get_event_loop().run_until_complete(scheduler.coordinate_leader_election('lock', 5))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
--------------------------------- JSON report ----------------------------------
report saved to: report.json
================= 112 passed, 2 skipped, 43 warnings in 23.22s =================
