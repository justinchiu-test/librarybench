{"created": 1747279081.9438632, "duration": 3.0116922855377197, "exitcode": 1, "root": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher", "environment": {}, "summary": {"passed": 277, "failed": 48, "total": 325, "collected": 325}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_apa_formatting", "type": "Function", "lineno": 101}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_mla_formatting", "type": "Function", "lineno": 133}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_harvard_formatting", "type": "Function", "lineno": 156}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_ieee_formatting", "type": "Function", "lineno": 170}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_in_text_citations", "type": "Function", "lineno": 182}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_generate_bibliography", "type": "Function", "lineno": 209}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_author_formatting", "type": "Function", "lineno": 238}]}, {"nodeid": "tests/bibliography/test_formatter.py", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter", "type": "Class"}]}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_json_single_reference", "type": "Function", "lineno": 10}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_json_multiple_references", "type": "Function", "lineno": 71}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_json_string", "type": "Function", "lineno": 143}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_invalid_json", "type": "Function", "lineno": 165}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_handles_missing_fields", "type": "Function", "lineno": 170}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_export_to_json", "type": "Function", "lineno": 186}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_export_roundtrip", "type": "Function", "lineno": 262}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_bibtex_basic", "type": "Function", "lineno": 307}]}, {"nodeid": "tests/bibliography/test_importer.py", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter", "type": "Class"}]}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_create_person_author", "type": "Function", "lineno": 15}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_create_organization_author", "type": "Function", "lineno": 31}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_author_full_name_person", "type": "Function", "lineno": 45}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_author_full_name_organization", "type": "Function", "lineno": 76}]}, {"nodeid": "tests/bibliography/test_models.py::TestReference", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_models.py::TestReference::test_create_journal_article", "type": "Function", "lineno": 92}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_create_book", "type": "Function", "lineno": 137}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_create_website", "type": "Function", "lineno": 164}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_update_reference", "type": "Function", "lineno": 190}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_add_author", "type": "Function", "lineno": 215}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_remove_author", "type": "Function", "lineno": 245}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_keywords", "type": "Function", "lineno": 280}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_notes", "type": "Function", "lineno": 313}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_custom_fields", "type": "Function", "lineno": 331}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_author_names_formatted", "type": "Function", "lineno": 366}]}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink::test_create_task_reference_link", "type": "Function", "lineno": 416}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink::test_update_link", "type": "Function", "lineno": 435}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink::test_add_note", "type": "Function", "lineno": 453}]}, {"nodeid": "tests/bibliography/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_models.py::TestAuthor", "type": "Class"}, {"nodeid": "tests/bibliography/test_models.py::TestReference", "type": "Class"}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink", "type": "Class"}]}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_author_methods", "type": "Function", "lineno": 26}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_journal_article", "type": "Function", "lineno": 49}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_book", "type": "Function", "lineno": 82}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_website", "type": "Function", "lineno": 111}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_generic_reference", "type": "Function", "lineno": 139}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_update_reference", "type": "Function", "lineno": 166}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_update_nonexistent_reference", "type": "Function", "lineno": 193}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_delete_reference", "type": "Function", "lineno": 205}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_search_references", "type": "Function", "lineno": 224}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_reference_modification_methods", "type": "Function", "lineno": 289}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_link_task_to_reference", "type": "Function", "lineno": 326}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_link_to_nonexistent_reference", "type": "Function", "lineno": 352}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_update_task_reference_link", "type": "Function", "lineno": 360}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_add_note_to_link", "type": "Function", "lineno": 388}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_get_references_by_task", "type": "Function", "lineno": 412}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_get_tasks_by_reference", "type": "Function", "lineno": 448}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_delete_task_reference_link", "type": "Function", "lineno": 468}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_citation_formatting", "type": "Function", "lineno": 490}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_in_text_citation_formatting", "type": "Function", "lineno": 524}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_generate_task_bibliography", "type": "Function", "lineno": 548}]}, {"nodeid": "tests/bibliography/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_service.py::TestBibliographyService", "type": "Class"}]}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_create_and_get_reference", "type": "Function", "lineno": 53}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_update_reference", "type": "Function", "lineno": 64}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_update_nonexistent_reference", "type": "Function", "lineno": 79}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_delete_reference", "type": "Function", "lineno": 91}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_delete_nonexistent_reference", "type": "Function", "lineno": 111}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_list_references_empty", "type": "Function", "lineno": 116}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_list_references_with_filters", "type": "Function", "lineno": 121}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_task_reference_link_operations", "type": "Function", "lineno": 165}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_get_references_by_task", "type": "Function", "lineno": 217}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_get_links_by_task", "type": "Function", "lineno": 252}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_get_tasks_by_reference", "type": "Function", "lineno": 282}]}, {"nodeid": "tests/bibliography/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage", "type": "Class"}]}, {"nodeid": "tests/bibliography", "outcome": "passed", "result": [{"nodeid": "tests/bibliography/test_formatter.py", "type": "Module"}, {"nodeid": "tests/bibliography/test_importer.py", "type": "Module"}, {"nodeid": "tests/bibliography/test_models.py", "type": "Module"}, {"nodeid": "tests/bibliography/test_service.py", "type": "Module"}, {"nodeid": "tests/bibliography/test_storage.py", "type": "Module"}]}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_create_dataset", "type": "Function", "lineno": 17}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_update_dataset", "type": "Function", "lineno": 61}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_dataset_tags", "type": "Function", "lineno": 88}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_dataset_custom_metadata", "type": "Function", "lineno": 121}]}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion::test_create_dataset_version", "type": "Function", "lineno": 167}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion::test_update_version", "type": "Function", "lineno": 212}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion::test_version_custom_metadata", "type": "Function", "lineno": 234}]}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_create_data_transformation", "type": "Function", "lineno": 267}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_update_transformation", "type": "Function", "lineno": 302}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_transformation_tags", "type": "Function", "lineno": 327}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_transformation_notes", "type": "Function", "lineno": 357}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_transformation_parameters", "type": "Function", "lineno": 376}]}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink::test_create_task_dataset_link", "type": "Function", "lineno": 411}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink::test_update_link", "type": "Function", "lineno": 432}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink::test_link_notes", "type": "Function", "lineno": 455}]}, {"nodeid": "tests/dataset_versioning/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_models.py::TestDataset", "type": "Class"}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion", "type": "Class"}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation", "type": "Class"}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink", "type": "Class"}]}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_dataset", "type": "Function", "lineno": 23}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_update_dataset", "type": "Function", "lineno": 58}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_update_nonexistent_dataset", "type": "Function", "lineno": 86}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_delete_dataset", "type": "Function", "lineno": 94}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_list_datasets", "type": "Function", "lineno": 112}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_dataset_tags", "type": "Function", "lineno": 167}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_dataset_custom_metadata", "type": "Function", "lineno": 189}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_dataset_version", "type": "Function", "lineno": 214}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_dataset_version_with_parent", "type": "Function", "lineno": 253}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_version_nonexistent_dataset", "type": "Function", "lineno": 284}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_version_nonexistent_parent", "type": "Function", "lineno": 293}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_update_dataset_version", "type": "Function", "lineno": 310}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_version_operations", "type": "Function", "lineno": 348}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_data_transformation", "type": "Function", "lineno": 402}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_transformation_nonexistent_version", "type": "Function", "lineno": 455}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_transformation_operations", "type": "Function", "lineno": 465}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_link_task_to_dataset_version", "type": "Function", "lineno": 551}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_link_to_nonexistent_version", "type": "Function", "lineno": 582}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_task_dataset_link_operations", "type": "Function", "lineno": 590}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_dataset_lineage", "type": "Function", "lineno": 661}]}, {"nodeid": "tests/dataset_versioning/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService", "type": "Class"}]}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_create_and_get_dataset", "type": "Function", "lineno": 43}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_update_dataset", "type": "Function", "lineno": 55}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_update_nonexistent_dataset", "type": "Function", "lineno": 70}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_delete_dataset", "type": "Function", "lineno": 83}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_delete_nonexistent_dataset", "type": "Function", "lineno": 114}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_list_datasets_empty", "type": "Function", "lineno": 119}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_list_datasets_with_filters", "type": "Function", "lineno": 124}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_dataset_version_operations", "type": "Function", "lineno": 160}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_version_lineage_operations", "type": "Function", "lineno": 223}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_data_transformation_operations", "type": "Function", "lineno": 266}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_task_dataset_link_operations", "type": "Function", "lineno": 344}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_get_lineage", "type": "Function", "lineno": 415}]}, {"nodeid": "tests/dataset_versioning/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage", "type": "Class"}]}, {"nodeid": "tests/dataset_versioning", "outcome": "passed", "result": [{"nodeid": "tests/dataset_versioning/test_models.py", "type": "Module"}, {"nodeid": "tests/dataset_versioning/test_service.py", "type": "Module"}, {"nodeid": "tests/dataset_versioning/test_storage.py", "type": "Module"}]}, {"nodeid": "tests/environment/test_models.py::TestPackageInfo", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_models.py::TestPackageInfo::test_create_package_info", "type": "Function", "lineno": 18}]}, {"nodeid": "tests/environment/test_models.py::TestComputeResource", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_models.py::TestComputeResource::test_create_compute_resource", "type": "Function", "lineno": 52}]}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_create_environment_snapshot", "type": "Function", "lineno": 82}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_update_environment_snapshot", "type": "Function", "lineno": 181}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_package_management", "type": "Function", "lineno": 206}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_compute_resource_management", "type": "Function", "lineno": 253}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_environment_variable_management", "type": "Function", "lineno": 293}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_config_file_management", "type": "Function", "lineno": 327}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_tag_management", "type": "Function", "lineno": 370}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_custom_metadata_management", "type": "Function", "lineno": 403}]}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink::test_create_task_environment_link", "type": "Function", "lineno": 447}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink::test_update_link", "type": "Function", "lineno": 468}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink::test_add_note", "type": "Function", "lineno": 491}]}, {"nodeid": "tests/environment/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_models.py::TestPackageInfo", "type": "Class"}, {"nodeid": "tests/environment/test_models.py::TestComputeResource", "type": "Class"}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot", "type": "Class"}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink", "type": "Class"}]}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_create_environment_snapshot", "type": "Function", "lineno": 26}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_create_environment_with_packages_and_resources", "type": "Function", "lineno": 55}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_capture_current_environment", "type": "Function", "lineno": 140}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_update_environment", "type": "Function", "lineno": 169}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_update_nonexistent_environment", "type": "Function", "lineno": 206}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_delete_environment", "type": "Function", "lineno": 214}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_list_environments", "type": "Function", "lineno": 230}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_environment_tag_operations", "type": "Function", "lineno": 284}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_package_operations", "type": "Function", "lineno": 313}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_compute_resource_operations", "type": "Function", "lineno": 362}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_environment_variable_operations", "type": "Function", "lineno": 407}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_config_file_operations", "type": "Function", "lineno": 448}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_custom_metadata_operations", "type": "Function", "lineno": 501}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_compare_environments", "type": "Function", "lineno": 550}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_link_task_to_environment", "type": "Function", "lineno": 658}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_link_to_nonexistent_environment", "type": "Function", "lineno": 681}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_task_environment_link_operations", "type": "Function", "lineno": 689}]}, {"nodeid": "tests/environment/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_service.py::TestEnvironmentService", "type": "Class"}]}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_create_and_get_environment", "type": "Function", "lineno": 63}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_update_environment", "type": "Function", "lineno": 76}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_update_nonexistent_environment", "type": "Function", "lineno": 91}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_delete_environment", "type": "Function", "lineno": 102}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_delete_nonexistent_environment", "type": "Function", "lineno": 122}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_list_environments_empty", "type": "Function", "lineno": 127}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_list_environments_with_filters", "type": "Function", "lineno": 132}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_task_environment_link_operations", "type": "Function", "lineno": 163}]}, {"nodeid": "tests/environment/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage", "type": "Class"}]}, {"nodeid": "tests/environment", "outcome": "passed", "result": [{"nodeid": "tests/environment/test_models.py", "type": "Module"}, {"nodeid": "tests/environment/test_service.py", "type": "Module"}, {"nodeid": "tests/environment/test_storage.py", "type": "Module"}]}, {"nodeid": "tests/experiment", "outcome": "passed", "result": []}, {"nodeid": "tests/experiment_tracking/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/experiment_tracking/test_models.py::test_parameter_creation", "type": "Function", "lineno": 10}, {"nodeid": "tests/experiment_tracking/test_models.py::test_metric_creation", "type": "Function", "lineno": 26}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_run_creation", "type": "Function", "lineno": 43}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_run_duration", "type": "Function", "lineno": 68}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_creation", "type": "Function", "lineno": 91}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_add_run", "type": "Function", "lineno": 111}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_get_run", "type": "Function", "lineno": 132}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_get_best_run", "type": "Function", "lineno": 152}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_comparison_creation", "type": "Function", "lineno": 191}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_comparison_add_methods", "type": "Function", "lineno": 210}]}, {"nodeid": "tests/experiment_tracking/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/experiment_tracking/test_service.py::test_create_experiment", "type": "Function", "lineno": 21}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_experiment", "type": "Function", "lineno": 36}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_experiment_by_name", "type": "Function", "lineno": 46}, {"nodeid": "tests/experiment_tracking/test_service.py::test_update_experiment", "type": "Function", "lineno": 58}, {"nodeid": "tests/experiment_tracking/test_service.py::test_delete_experiment", "type": "Function", "lineno": 71}, {"nodeid": "tests/experiment_tracking/test_service.py::test_list_experiments", "type": "Function", "lineno": 80}, {"nodeid": "tests/experiment_tracking/test_service.py::test_list_experiments_by_task", "type": "Function", "lineno": 92}, {"nodeid": "tests/experiment_tracking/test_service.py::test_add_parameter", "type": "Function", "lineno": 104}, {"nodeid": "tests/experiment_tracking/test_service.py::test_add_metric", "type": "Function", "lineno": 120}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_experiment_run", "type": "Function", "lineno": 136}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_experiment_run_nonexistent_experiment", "type": "Function", "lineno": 155}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_experiment_run", "type": "Function", "lineno": 163}, {"nodeid": "tests/experiment_tracking/test_service.py::test_run_lifecycle", "type": "Function", "lineno": 175}, {"nodeid": "tests/experiment_tracking/test_service.py::test_failed_and_aborted_runs", "type": "Function", "lineno": 212}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_best_run", "type": "Function", "lineno": 233}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_comparison", "type": "Function", "lineno": 261}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_comparison", "type": "Function", "lineno": 282}, {"nodeid": "tests/experiment_tracking/test_service.py::test_update_comparison", "type": "Function", "lineno": 292}, {"nodeid": "tests/experiment_tracking/test_service.py::test_delete_comparison", "type": "Function", "lineno": 305}, {"nodeid": "tests/experiment_tracking/test_service.py::test_list_comparisons", "type": "Function", "lineno": 314}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_comparison_data", "type": "Function", "lineno": 326}]}, {"nodeid": "tests/experiment_tracking/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/experiment_tracking/test_storage.py::test_create_experiment", "type": "Function", "lineno": 48}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_experiment", "type": "Function", "lineno": 58}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_nonexistent_experiment", "type": "Function", "lineno": 68}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_experiment", "type": "Function", "lineno": 76}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_nonexistent_experiment", "type": "Function", "lineno": 89}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_experiment", "type": "Function", "lineno": 97}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_nonexistent_experiment", "type": "Function", "lineno": 106}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_list_experiments", "type": "Function", "lineno": 114}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_list_experiments_by_task", "type": "Function", "lineno": 127}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_experiment_by_name", "type": "Function", "lineno": 148}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_run", "type": "Function", "lineno": 160}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_run_nonexistent_experiment", "type": "Function", "lineno": 175}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_run", "type": "Function", "lineno": 183}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_run", "type": "Function", "lineno": 194}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_nonexistent_run", "type": "Function", "lineno": 214}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_run", "type": "Function", "lineno": 222}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_nonexistent_run", "type": "Function", "lineno": 236}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_comparison", "type": "Function", "lineno": 244}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_comparison", "type": "Function", "lineno": 254}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_comparison", "type": "Function", "lineno": 264}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_nonexistent_comparison", "type": "Function", "lineno": 279}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_comparison", "type": "Function", "lineno": 287}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_nonexistent_comparison", "type": "Function", "lineno": 296}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_list_comparisons", "type": "Function", "lineno": 304}]}, {"nodeid": "tests/experiment_tracking/test_visualizer.py", "outcome": "passed", "result": [{"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_parameter_table", "type": "Function", "lineno": 130}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_parameter_table", "type": "Function", "lineno": 140}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_metric_table", "type": "Function", "lineno": 148}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_metric_table", "type": "Function", "lineno": 160}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_artifact_table", "type": "Function", "lineno": 168}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_artifact_table", "type": "Function", "lineno": 177}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_run_summary", "type": "Function", "lineno": 185}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_experiment_summary", "type": "Function", "lineno": 210}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_comparison_table", "type": "Function", "lineno": 229}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_comparison_table", "type": "Function", "lineno": 284}]}, {"nodeid": "tests/experiment_tracking", "outcome": "passed", "result": [{"nodeid": "tests/experiment_tracking/test_models.py", "type": "Module"}, {"nodeid": "tests/experiment_tracking/test_service.py", "type": "Module"}, {"nodeid": "tests/experiment_tracking/test_storage.py", "type": "Module"}, {"nodeid": "tests/experiment_tracking/test_visualizer.py", "type": "Module"}]}, {"nodeid": "tests/export/test_formatter.py", "outcome": "passed", "result": [{"nodeid": "tests/export/test_formatter.py::test_format_document_default", "type": "Function", "lineno": 51}, {"nodeid": "tests/export/test_formatter.py::test_format_document_nature", "type": "Function", "lineno": 89}, {"nodeid": "tests/export/test_formatter.py::test_format_document_science", "type": "Function", "lineno": 100}, {"nodeid": "tests/export/test_formatter.py::test_format_document_plos", "type": "Function", "lineno": 109}, {"nodeid": "tests/export/test_formatter.py::test_format_section", "type": "Function", "lineno": 118}, {"nodeid": "tests/export/test_formatter.py::test_format_text_block", "type": "Function", "lineno": 133}, {"nodeid": "tests/export/test_formatter.py::test_format_image_block", "type": "Function", "lineno": 141}, {"nodeid": "tests/export/test_formatter.py::test_format_table_block", "type": "Function", "lineno": 153}, {"nodeid": "tests/export/test_formatter.py::test_format_code_block", "type": "Function", "lineno": 171}, {"nodeid": "tests/export/test_formatter.py::test_format_equation_block", "type": "Function", "lineno": 186}, {"nodeid": "tests/export/test_formatter.py::test_format_citation_block", "type": "Function", "lineno": 194}]}, {"nodeid": "tests/export/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/export/test_models.py::test_document_creation", "type": "Function", "lineno": 10}, {"nodeid": "tests/export/test_models.py::test_section_creation", "type": "Function", "lineno": 32}, {"nodeid": "tests/export/test_models.py::test_text_block", "type": "Function", "lineno": 49}, {"nodeid": "tests/export/test_models.py::test_image_block", "type": "Function", "lineno": 58}, {"nodeid": "tests/export/test_models.py::test_table_block", "type": "Function", "lineno": 73}, {"nodeid": "tests/export/test_models.py::test_code_block", "type": "Function", "lineno": 93}, {"nodeid": "tests/export/test_models.py::test_equation_block", "type": "Function", "lineno": 107}, {"nodeid": "tests/export/test_models.py::test_citation_block", "type": "Function", "lineno": 117}, {"nodeid": "tests/export/test_models.py::test_document_with_sections_and_blocks", "type": "Function", "lineno": 129}]}, {"nodeid": "tests/export/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/export/test_service.py::test_create_document", "type": "Function", "lineno": 22}, {"nodeid": "tests/export/test_service.py::test_get_document", "type": "Function", "lineno": 42}, {"nodeid": "tests/export/test_service.py::test_update_document", "type": "Function", "lineno": 52}, {"nodeid": "tests/export/test_service.py::test_delete_document", "type": "Function", "lineno": 65}, {"nodeid": "tests/export/test_service.py::test_add_section", "type": "Function", "lineno": 74}, {"nodeid": "tests/export/test_service.py::test_add_section_with_order", "type": "Function", "lineno": 88}, {"nodeid": "tests/export/test_service.py::test_add_content_block", "type": "Function", "lineno": 105}, {"nodeid": "tests/export/test_service.py::test_create_content_blocks", "type": "Function", "lineno": 122}, {"nodeid": "tests/export/test_service.py::test_generate_markdown", "type": "Function", "lineno": 163}, {"nodeid": "tests/export/test_service.py::test_export_to_file", "type": "Function", "lineno": 183}]}, {"nodeid": "tests/export/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/export/test_storage.py::test_create_document", "type": "Function", "lineno": 30}, {"nodeid": "tests/export/test_storage.py::test_get_document", "type": "Function", "lineno": 40}, {"nodeid": "tests/export/test_storage.py::test_get_nonexistent_document", "type": "Function", "lineno": 50}, {"nodeid": "tests/export/test_storage.py::test_update_document", "type": "Function", "lineno": 59}, {"nodeid": "tests/export/test_storage.py::test_update_nonexistent_document", "type": "Function", "lineno": 72}, {"nodeid": "tests/export/test_storage.py::test_delete_document", "type": "Function", "lineno": 80}, {"nodeid": "tests/export/test_storage.py::test_delete_nonexistent_document", "type": "Function", "lineno": 89}, {"nodeid": "tests/export/test_storage.py::test_list_documents", "type": "Function", "lineno": 98}]}, {"nodeid": "tests/export", "outcome": "passed", "result": [{"nodeid": "tests/export/test_formatter.py", "type": "Module"}, {"nodeid": "tests/export/test_models.py", "type": "Module"}, {"nodeid": "tests/export/test_service.py", "type": "Module"}, {"nodeid": "tests/export/test_storage.py", "type": "Module"}]}, {"nodeid": "tests/integration/test_multitask_workflow.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_multitask_workflow.py::test_multitask_research_project", "type": "Function", "lineno": 39}]}, {"nodeid": "tests/integration/test_research_workflow.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_research_workflow.py::test_complete_research_workflow", "type": "Function", "lineno": 39}]}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_multitask_workflow.py", "type": "Module"}, {"nodeid": "tests/integration/test_research_workflow.py", "type": "Module"}]}, {"nodeid": "tests/performance/test_bibliography_performance.py::TestBibliographyPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_bibliography_performance.py::TestBibliographyPerformance::test_large_bibliography_operations", "type": "Function", "lineno": 23}, {"nodeid": "tests/performance/test_bibliography_performance.py::TestBibliographyPerformance::test_task_reference_link_performance", "type": "Function", "lineno": 160}]}, {"nodeid": "tests/performance/test_bibliography_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_bibliography_performance.py::TestBibliographyPerformance", "type": "Class"}]}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_dataset_operations_performance", "type": "Function", "lineno": 20}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_handle_large_dataset_catalog", "type": "Function", "lineno": 57}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_handle_100gb_dataset_metadata", "type": "Function", "lineno": 110}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_complex_transformation_chain_performance", "type": "Function", "lineno": 166}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_task_dataset_link_performance", "type": "Function", "lineno": 237}]}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance", "type": "Class"}]}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_environment_operations_performance", "type": "Function", "lineno": 21}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_environment_snapshot_generation_time", "type": "Function", "lineno": 57}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_large_environment_catalog_performance", "type": "Function", "lineno": 82}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_complex_environment_performance", "type": "Function", "lineno": 161}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_task_environment_link_performance", "type": "Function", "lineno": 211}]}, {"nodeid": "tests/performance/test_environment_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance", "type": "Class"}]}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_experiment_creation_performance", "type": "Function", "lineno": 114}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_best_run_query_performance", "type": "Function", "lineno": 138}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_comparison_performance", "type": "Function", "lineno": 174}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_large_experiment_performance", "type": "Function", "lineno": 228}]}, {"nodeid": "tests/performance/test_export_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_export_performance.py::test_document_creation_performance", "type": "Function", "lineno": 94}, {"nodeid": "tests/performance/test_export_performance.py::test_markdown_generation_performance", "type": "Function", "lineno": 116}, {"nodeid": "tests/performance/test_export_performance.py::test_file_export_performance", "type": "Function", "lineno": 142}, {"nodeid": "tests/performance/test_export_performance.py::test_large_document_performance", "type": "Function", "lineno": 173}]}, {"nodeid": "tests/performance/test_integration_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_integration_performance.py::test_large_research_project_performance", "type": "Function", "lineno": 46}]}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_task_operation_speed", "type": "Function", "lineno": 16}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_large_task_list_performance", "type": "Function", "lineno": 51}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_research_question_hierarchy_performance", "type": "Function", "lineno": 135}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_task_question_association_performance", "type": "Function", "lineno": 202}]}, {"nodeid": "tests/performance/test_task_management_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance", "type": "Class"}]}, {"nodeid": "tests/performance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_bibliography_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_environment_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_export_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_integration_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_task_management_performance.py", "type": "Module"}]}, {"nodeid": "tests/task_management/test_models.py::TestResearchQuestion", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_models.py::TestResearchQuestion::test_create_research_question", "type": "Function", "lineno": 14}, {"nodeid": "tests/task_management/test_models.py::TestResearchQuestion::test_create_with_parent", "type": "Function", "lineno": 28}, {"nodeid": "tests/task_management/test_models.py::TestResearchQuestion::test_update_question", "type": "Function", "lineno": 39}]}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_create_research_task", "type": "Function", "lineno": 60}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_task_with_due_date", "type": "Function", "lineno": 88}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_create_subtask", "type": "Function", "lineno": 99}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_update_task", "type": "Function", "lineno": 110}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_complete_task", "type": "Function", "lineno": 140}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_add_note", "type": "Function", "lineno": 155}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_manage_tags", "type": "Function", "lineno": 172}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_research_question_association", "type": "Function", "lineno": 199}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_subtask_management", "type": "Function", "lineno": 222}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_custom_metadata", "type": "Function", "lineno": 245}]}, {"nodeid": "tests/task_management/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_models.py::TestResearchQuestion", "type": "Class"}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask", "type": "Class"}]}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task", "type": "Function", "lineno": 16}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_with_parent", "type": "Function", "lineno": 35}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_invalid_parent", "type": "Function", "lineno": 54}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_with_research_questions", "type": "Function", "lineno": 63}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_invalid_question", "type": "Function", "lineno": 83}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_update_task", "type": "Function", "lineno": 92}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_update_nonexistent_task", "type": "Function", "lineno": 121}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_delete_task", "type": "Function", "lineno": 129}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_add_task_note", "type": "Function", "lineno": 143}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_add_note_to_nonexistent_task", "type": "Function", "lineno": 159}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_tag_management", "type": "Function", "lineno": 164}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_custom_metadata", "type": "Function", "lineno": 189}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_filter_tasks", "type": "Function", "lineno": 206}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_research_question_operations", "type": "Function", "lineno": 264}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_research_question_hierarchy", "type": "Function", "lineno": 293}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_task_question_association", "type": "Function", "lineno": 325}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_associate_with_nonexistent_task", "type": "Function", "lineno": 359}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_associate_with_nonexistent_question", "type": "Function", "lineno": 368}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_get_subtasks", "type": "Function", "lineno": 378}]}, {"nodeid": "tests/task_management/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_service.py::TestTaskManagementService", "type": "Class"}]}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_create_and_get_task", "type": "Function", "lineno": 13}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_update_task", "type": "Function", "lineno": 30}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_update_nonexistent_task", "type": "Function", "lineno": 54}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_task", "type": "Function", "lineno": 66}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_nonexistent_task", "type": "Function", "lineno": 82}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_list_tasks_empty", "type": "Function", "lineno": 89}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_list_tasks_with_filters", "type": "Function", "lineno": 96}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_research_question_operations", "type": "Function", "lineno": 170}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_update_nonexistent_question", "type": "Function", "lineno": 204}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_nonexistent_question", "type": "Function", "lineno": 216}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_list_research_questions", "type": "Function", "lineno": 223}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_task_question_associations", "type": "Function", "lineno": 270}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_subtask_relationships", "type": "Function", "lineno": 316}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_task_subtask_cleanup", "type": "Function", "lineno": 359}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_question_cleanup", "type": "Function", "lineno": 386}]}, {"nodeid": "tests/task_management/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage", "type": "Class"}]}, {"nodeid": "tests/task_management", "outcome": "passed", "result": [{"nodeid": "tests/task_management/test_models.py", "type": "Module"}, {"nodeid": "tests/task_management/test_service.py", "type": "Module"}, {"nodeid": "tests/task_management/test_storage.py", "type": "Module"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/bibliography", "type": "Package"}, {"nodeid": "tests/dataset_versioning", "type": "Package"}, {"nodeid": "tests/environment", "type": "Package"}, {"nodeid": "tests/experiment", "type": "Package"}, {"nodeid": "tests/experiment_tracking", "type": "Package"}, {"nodeid": "tests/export", "type": "Package"}, {"nodeid": "tests/integration", "type": "Package"}, {"nodeid": "tests/performance", "type": "Package"}, {"nodeid": "tests/task_management", "type": "Package"}]}], "tests": [{"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_apa_formatting", "lineno": 101, "outcome": "passed", "keywords": ["test_apa_formatting", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0006484159966930747, "outcome": "passed"}, "call": {"duration": 0.00019023905042558908, "outcome": "passed"}, "teardown": {"duration": 0.00015074200928211212, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_mla_formatting", "lineno": 133, "outcome": "passed", "keywords": ["test_mla_formatting", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00027319195214658976, "outcome": "passed"}, "call": {"duration": 0.0001454079756513238, "outcome": "passed"}, "teardown": {"duration": 0.00012707500718533993, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_harvard_formatting", "lineno": 156, "outcome": "passed", "keywords": ["test_harvard_formatting", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002569759963080287, "outcome": "passed"}, "call": {"duration": 0.00013277691323310137, "outcome": "passed"}, "teardown": {"duration": 0.00011823000386357307, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_ieee_formatting", "lineno": 170, "outcome": "passed", "keywords": ["test_ieee_formatting", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00025639100931584835, "outcome": "passed"}, "call": {"duration": 0.00013148202560842037, "outcome": "passed"}, "teardown": {"duration": 0.0001195479417219758, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_in_text_citations", "lineno": 182, "outcome": "passed", "keywords": ["test_in_text_citations", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00026093702763319016, "outcome": "passed"}, "call": {"duration": 0.00013709894847124815, "outcome": "passed"}, "teardown": {"duration": 0.00011827098205685616, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_generate_bibliography", "lineno": 209, "outcome": "passed", "keywords": ["test_generate_bibliography", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00024491094518452883, "outcome": "passed"}, "call": {"duration": 0.00016071402933448553, "outcome": "passed"}, "teardown": {"duration": 0.00011646701022982597, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_formatter.py::TestReferenceFormatter::test_author_formatting", "lineno": 238, "outcome": "passed", "keywords": ["test_author_formatting", "TestReferenceFormatter", "test_formatter.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00038400606717914343, "outcome": "passed"}, "call": {"duration": 0.0002167889615520835, "outcome": "passed"}, "teardown": {"duration": 0.0001313269603997469, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_json_single_reference", "lineno": 10, "outcome": "passed", "keywords": ["test_import_from_json_single_reference", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00012201303616166115, "outcome": "passed"}, "call": {"duration": 0.0001921399962157011, "outcome": "passed"}, "teardown": {"duration": 0.00010649696923792362, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_json_multiple_references", "lineno": 71, "outcome": "passed", "keywords": ["test_import_from_json_multiple_references", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010468403343111277, "outcome": "passed"}, "call": {"duration": 0.0002455699723213911, "outcome": "passed"}, "teardown": {"duration": 0.00010838196612894535, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_json_string", "lineno": 143, "outcome": "passed", "keywords": ["test_import_from_json_string", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010365503840148449, "outcome": "passed"}, "call": {"duration": 0.0002009921008720994, "outcome": "passed"}, "teardown": {"duration": 0.00010659999679774046, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_invalid_json", "lineno": 165, "outcome": "passed", "keywords": ["test_import_from_invalid_json", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010071101132780313, "outcome": "passed"}, "call": {"duration": 0.0003072170075029135, "outcome": "passed"}, "teardown": {"duration": 0.00011164403986185789, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_handles_missing_fields", "lineno": 170, "outcome": "passed", "keywords": ["test_import_handles_missing_fields", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010327005293220282, "outcome": "passed"}, "call": {"duration": 0.00016028701793402433, "outcome": "passed"}, "teardown": {"duration": 0.00010618800297379494, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_export_to_json", "lineno": 186, "outcome": "passed", "keywords": ["test_export_to_json", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011059397365897894, "outcome": "passed"}, "call": {"duration": 0.00027630594559013844, "outcome": "passed"}, "teardown": {"duration": 0.00010588893201202154, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_export_roundtrip", "lineno": 262, "outcome": "passed", "keywords": ["test_import_export_roundtrip", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010061694774776697, "outcome": "passed"}, "call": {"duration": 0.0002545409370213747, "outcome": "passed"}, "teardown": {"duration": 0.00010477704927325249, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_importer.py::TestBibliographyImporter::test_import_from_bibtex_basic", "lineno": 307, "outcome": "passed", "keywords": ["test_import_from_bibtex_basic", "TestBibliographyImporter", "test_importer.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010471593122929335, "outcome": "passed"}, "call": {"duration": 0.0008152669761329889, "outcome": "passed"}, "teardown": {"duration": 0.00013307202607393265, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_create_person_author", "lineno": 15, "outcome": "passed", "keywords": ["test_create_person_author", "TestAuthor", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00012872496154159307, "outcome": "passed"}, "call": {"duration": 0.00014302297495305538, "outcome": "passed"}, "teardown": {"duration": 0.0001058490015566349, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_create_organization_author", "lineno": 31, "outcome": "passed", "keywords": ["test_create_organization_author", "TestAuthor", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011222297325730324, "outcome": "passed"}, "call": {"duration": 0.00013697706162929535, "outcome": "passed"}, "teardown": {"duration": 0.00010575703345239162, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_author_full_name_person", "lineno": 45, "outcome": "passed", "keywords": ["test_author_full_name_person", "TestAuthor", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010132510215044022, "outcome": "passed"}, "call": {"duration": 0.0001467340625822544, "outcome": "passed"}, "teardown": {"duration": 0.00010225409641861916, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestAuthor::test_author_full_name_organization", "lineno": 76, "outcome": "passed", "keywords": ["test_author_full_name_organization", "TestAuthor", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010035093873739243, "outcome": "passed"}, "call": {"duration": 0.00013328599743545055, "outcome": "passed"}, "teardown": {"duration": 0.00010276306420564651, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_create_journal_article", "lineno": 92, "outcome": "passed", "keywords": ["test_create_journal_article", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011072005145251751, "outcome": "passed"}, "call": {"duration": 0.0001551720779389143, "outcome": "passed"}, "teardown": {"duration": 0.00010542909149080515, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_create_book", "lineno": 137, "outcome": "passed", "keywords": ["test_create_book", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011901406105607748, "outcome": "passed"}, "call": {"duration": 0.0001589569728821516, "outcome": "passed"}, "teardown": {"duration": 0.00010417611338198185, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_create_website", "lineno": 164, "outcome": "passed", "keywords": ["test_create_website", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010023405775427818, "outcome": "passed"}, "call": {"duration": 0.00014751206617802382, "outcome": "passed"}, "teardown": {"duration": 0.00010937603656202555, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_update_reference", "lineno": 190, "outcome": "passed", "keywords": ["test_update_reference", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001021890202537179, "outcome": "passed"}, "call": {"duration": 0.000170433078892529, "outcome": "passed"}, "teardown": {"duration": 0.00010353000834584236, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_add_author", "lineno": 215, "outcome": "passed", "keywords": ["test_add_author", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011112494394183159, "outcome": "passed"}, "call": {"duration": 0.0001565529964864254, "outcome": "passed"}, "teardown": {"duration": 0.00010429800022393465, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_remove_author", "lineno": 245, "outcome": "passed", "keywords": ["test_remove_author", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010567298159003258, "outcome": "passed"}, "call": {"duration": 0.00016999896615743637, "outcome": "passed"}, "teardown": {"duration": 0.00010364409536123276, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_keywords", "lineno": 280, "outcome": "passed", "keywords": ["test_keywords", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001004999503493309, "outcome": "passed"}, "call": {"duration": 0.00023783906362950802, "outcome": "passed"}, "teardown": {"duration": 0.0001226520398631692, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_notes", "lineno": 313, "outcome": "passed", "keywords": ["test_notes", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010697601828724146, "outcome": "passed"}, "call": {"duration": 0.0001421209890395403, "outcome": "passed"}, "teardown": {"duration": 0.00010176305659115314, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_custom_fields", "lineno": 331, "outcome": "passed", "keywords": ["test_custom_fields", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010962504893541336, "outcome": "passed"}, "call": {"duration": 0.00014796596951782703, "outcome": "passed"}, "teardown": {"duration": 0.00010209705214947462, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestReference::test_author_names_formatted", "lineno": 366, "outcome": "passed", "keywords": ["test_author_names_formatted", "TestReference", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010608893353492022, "outcome": "passed"}, "call": {"duration": 0.00019376201089471579, "outcome": "passed"}, "teardown": {"duration": 0.00010550697334110737, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink::test_create_task_reference_link", "lineno": 416, "outcome": "passed", "keywords": ["test_create_task_reference_link", "TestTaskReferenceLink", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010291393846273422, "outcome": "passed"}, "call": {"duration": 0.00015241000801324844, "outcome": "passed"}, "teardown": {"duration": 0.00010789197403937578, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink::test_update_link", "lineno": 435, "outcome": "passed", "keywords": ["test_update_link", "TestTaskReferenceLink", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010464992374181747, "outcome": "passed"}, "call": {"duration": 0.00016124197281897068, "outcome": "passed"}, "teardown": {"duration": 0.00010225595906376839, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_models.py::TestTaskReferenceLink::test_add_note", "lineno": 453, "outcome": "passed", "keywords": ["test_add_note", "TestTaskReferenceLink", "test_models.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010450603440403938, "outcome": "passed"}, "call": {"duration": 0.00014569703489542007, "outcome": "passed"}, "teardown": {"duration": 0.00010310905054211617, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_author_methods", "lineno": 26, "outcome": "passed", "keywords": ["test_create_author_methods", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002069129841402173, "outcome": "passed"}, "call": {"duration": 0.00016416399739682674, "outcome": "passed"}, "teardown": {"duration": 0.00012214295566082, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_journal_article", "lineno": 49, "outcome": "passed", "keywords": ["test_create_journal_article", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000176324974745512, "outcome": "passed"}, "call": {"duration": 0.00016192300245165825, "outcome": "passed"}, "teardown": {"duration": 0.00012153701391071081, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_book", "lineno": 82, "outcome": "passed", "keywords": ["test_create_book", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016994099132716656, "outcome": "passed"}, "call": {"duration": 0.0001665150048211217, "outcome": "passed"}, "teardown": {"duration": 0.00012669002171605825, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_website", "lineno": 111, "outcome": "passed", "keywords": ["test_create_website", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017489190213382244, "outcome": "passed"}, "call": {"duration": 0.00016691302880644798, "outcome": "passed"}, "teardown": {"duration": 0.0001336660934612155, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_create_generic_reference", "lineno": 139, "outcome": "passed", "keywords": ["test_create_generic_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017949903849512339, "outcome": "passed"}, "call": {"duration": 0.00018994894344359636, "outcome": "passed"}, "teardown": {"duration": 0.00011881091631948948, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_update_reference", "lineno": 166, "outcome": "passed", "keywords": ["test_update_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000182802090421319, "outcome": "passed"}, "call": {"duration": 0.00017291703261435032, "outcome": "passed"}, "teardown": {"duration": 0.00011595094110816717, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_update_nonexistent_reference", "lineno": 193, "outcome": "passed", "keywords": ["test_update_nonexistent_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016747706104069948, "outcome": "passed"}, "call": {"duration": 0.0002958200639113784, "outcome": "passed"}, "teardown": {"duration": 0.00012961402535438538, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_delete_reference", "lineno": 205, "outcome": "passed", "keywords": ["test_delete_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018026202451437712, "outcome": "passed"}, "call": {"duration": 0.00016728299669921398, "outcome": "passed"}, "teardown": {"duration": 0.00012035109102725983, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_search_references", "lineno": 224, "outcome": "passed", "keywords": ["test_search_references", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017236708663403988, "outcome": "passed"}, "call": {"duration": 0.00024337007198482752, "outcome": "passed"}, "teardown": {"duration": 0.0001206500455737114, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_reference_modification_methods", "lineno": 289, "outcome": "passed", "keywords": ["test_reference_modification_methods", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001785430358722806, "outcome": "passed"}, "call": {"duration": 0.0001793180126696825, "outcome": "passed"}, "teardown": {"duration": 0.00012959004379808903, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_link_task_to_reference", "lineno": 326, "outcome": "passed", "keywords": ["test_link_task_to_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002386389533057809, "outcome": "passed"}, "call": {"duration": 0.00017456989735364914, "outcome": "passed"}, "teardown": {"duration": 0.00012677907943725586, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_link_to_nonexistent_reference", "lineno": 352, "outcome": "passed", "keywords": ["test_link_to_nonexistent_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017499702516943216, "outcome": "passed"}, "call": {"duration": 0.00014939508400857449, "outcome": "passed"}, "teardown": {"duration": 0.00011491996701806784, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_update_task_reference_link", "lineno": 360, "outcome": "passed", "keywords": ["test_update_task_reference_link", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018057203851640224, "outcome": "passed"}, "call": {"duration": 0.00017161306459456682, "outcome": "passed"}, "teardown": {"duration": 0.00012156798038631678, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_add_note_to_link", "lineno": 388, "outcome": "passed", "keywords": ["test_add_note_to_link", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018669094424694777, "outcome": "passed"}, "call": {"duration": 0.00017202296294271946, "outcome": "passed"}, "teardown": {"duration": 0.00011862290557473898, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_get_references_by_task", "lineno": 412, "outcome": "passed", "keywords": ["test_get_references_by_task", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017460796516388655, "outcome": "passed"}, "call": {"duration": 0.00021624902728945017, "outcome": "passed"}, "teardown": {"duration": 0.00011799496132880449, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_get_tasks_by_reference", "lineno": 448, "outcome": "passed", "keywords": ["test_get_tasks_by_reference", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018153793644160032, "outcome": "passed"}, "call": {"duration": 0.00017812999431043863, "outcome": "passed"}, "teardown": {"duration": 0.00012420094572007656, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_delete_task_reference_link", "lineno": 468, "outcome": "passed", "keywords": ["test_delete_task_reference_link", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017136207316070795, "outcome": "passed"}, "call": {"duration": 0.00016483606304973364, "outcome": "passed"}, "teardown": {"duration": 0.00012459896970540285, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_citation_formatting", "lineno": 490, "outcome": "passed", "keywords": ["test_citation_formatting", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001721610315144062, "outcome": "passed"}, "call": {"duration": 0.0001852000132203102, "outcome": "passed"}, "teardown": {"duration": 0.00012335297651588917, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_in_text_citation_formatting", "lineno": 524, "outcome": "passed", "keywords": ["test_in_text_citation_formatting", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017248594667762518, "outcome": "passed"}, "call": {"duration": 0.000162609969265759, "outcome": "passed"}, "teardown": {"duration": 0.00011606398038566113, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_service.py::TestBibliographyService::test_generate_task_bibliography", "lineno": 548, "outcome": "passed", "keywords": ["test_generate_task_bibliography", "TestBibliographyService", "test_service.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001746510388329625, "outcome": "passed"}, "call": {"duration": 0.0002582519082352519, "outcome": "passed"}, "teardown": {"duration": 0.00012533098924905062, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_create_and_get_reference", "lineno": 53, "outcome": "passed", "keywords": ["test_create_and_get_reference", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002546010073274374, "outcome": "passed"}, "call": {"duration": 0.00012710003647953272, "outcome": "passed"}, "teardown": {"duration": 0.00011937099043279886, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_update_reference", "lineno": 64, "outcome": "passed", "keywords": ["test_update_reference", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002363089006394148, "outcome": "passed"}, "call": {"duration": 0.00012394599616527557, "outcome": "passed"}, "teardown": {"duration": 0.00011665595229715109, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_update_nonexistent_reference", "lineno": 79, "outcome": "passed", "keywords": ["test_update_nonexistent_reference", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0003157099708914757, "outcome": "passed"}, "call": {"duration": 0.0001471230061724782, "outcome": "passed"}, "teardown": {"duration": 0.0001211799681186676, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_delete_reference", "lineno": 91, "outcome": "passed", "keywords": ["test_delete_reference", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002153100213035941, "outcome": "passed"}, "call": {"duration": 0.0001609809696674347, "outcome": "passed"}, "teardown": {"duration": 0.00011957797687500715, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_delete_nonexistent_reference", "lineno": 111, "outcome": "passed", "keywords": ["test_delete_nonexistent_reference", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021414202637970448, "outcome": "passed"}, "call": {"duration": 0.00012088997755199671, "outcome": "passed"}, "teardown": {"duration": 0.00012266694102436304, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_list_references_empty", "lineno": 116, "outcome": "passed", "keywords": ["test_list_references_empty", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020689191296696663, "outcome": "passed"}, "call": {"duration": 0.00011542602442204952, "outcome": "passed"}, "teardown": {"duration": 0.00011403404641896486, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_list_references_with_filters", "lineno": 121, "outcome": "passed", "keywords": ["test_list_references_with_filters", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000224372954107821, "outcome": "passed"}, "call": {"duration": 0.00015532795805484056, "outcome": "passed"}, "teardown": {"duration": 0.00013222999405115843, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_task_reference_link_operations", "lineno": 165, "outcome": "passed", "keywords": ["test_task_reference_link_operations", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002214439446106553, "outcome": "passed"}, "call": {"duration": 0.00016061903443187475, "outcome": "passed"}, "teardown": {"duration": 0.00011695397552102804, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_get_references_by_task", "lineno": 217, "outcome": "passed", "keywords": ["test_get_references_by_task", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002143949968740344, "outcome": "passed"}, "call": {"duration": 0.0001600310206413269, "outcome": "passed"}, "teardown": {"duration": 0.00011834094766527414, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_get_links_by_task", "lineno": 252, "outcome": "passed", "keywords": ["test_get_links_by_task", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021725299302488565, "outcome": "passed"}, "call": {"duration": 0.000163101009093225, "outcome": "passed"}, "teardown": {"duration": 0.00011674698907881975, "outcome": "passed"}}, {"nodeid": "tests/bibliography/test_storage.py::TestInMemoryBibliographyStorage::test_get_tasks_by_reference", "lineno": 282, "outcome": "passed", "keywords": ["test_get_tasks_by_reference", "TestInMemoryBibliographyStorage", "test_storage.py", "bibliography", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021241104695945978, "outcome": "passed"}, "call": {"duration": 0.00014757004100829363, "outcome": "passed"}, "teardown": {"duration": 0.0001217020908370614, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_create_dataset", "lineno": 17, "outcome": "passed", "keywords": ["test_create_dataset", "TestDataset", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00029240502044558525, "outcome": "passed"}, "call": {"duration": 0.00017644092440605164, "outcome": "passed"}, "teardown": {"duration": 0.00010797195136547089, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_update_dataset", "lineno": 61, "outcome": "passed", "keywords": ["test_update_dataset", "TestDataset", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010521907825022936, "outcome": "passed"}, "call": {"duration": 0.000180736999027431, "outcome": "passed"}, "teardown": {"duration": 0.00010767497587949038, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_dataset_tags", "lineno": 88, "outcome": "passed", "keywords": ["test_dataset_tags", "TestDataset", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010420207399874926, "outcome": "passed"}, "call": {"duration": 0.00015149801038205624, "outcome": "passed"}, "teardown": {"duration": 0.00010153301991522312, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataset::test_dataset_custom_metadata", "lineno": 121, "outcome": "passed", "keywords": ["test_dataset_custom_metadata", "TestDataset", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010152696631848812, "outcome": "passed"}, "call": {"duration": 0.00015294598415493965, "outcome": "passed"}, "teardown": {"duration": 0.00010529602877795696, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion::test_create_dataset_version", "lineno": 167, "outcome": "passed", "keywords": ["test_create_dataset_version", "TestDatasetVersion", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010120798833668232, "outcome": "passed"}, "call": {"duration": 0.0001567630097270012, "outcome": "passed"}, "teardown": {"duration": 0.0001011500135064125, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion::test_update_version", "lineno": 212, "outcome": "passed", "keywords": ["test_update_version", "TestDatasetVersion", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010261009447276592, "outcome": "passed"}, "call": {"duration": 0.00023319898173213005, "outcome": "passed"}, "teardown": {"duration": 0.00011550402268767357, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDatasetVersion::test_version_custom_metadata", "lineno": 234, "outcome": "passed", "keywords": ["test_version_custom_metadata", "TestDatasetVersion", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010803004261106253, "outcome": "passed"}, "call": {"duration": 0.0001453850418329239, "outcome": "passed"}, "teardown": {"duration": 0.0001059890491887927, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_create_data_transformation", "lineno": 267, "outcome": "passed", "keywords": ["test_create_data_transformation", "TestDataTransformation", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010398891754448414, "outcome": "passed"}, "call": {"duration": 0.00017028592992573977, "outcome": "passed"}, "teardown": {"duration": 0.00010425399523228407, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_update_transformation", "lineno": 302, "outcome": "passed", "keywords": ["test_update_transformation", "TestDataTransformation", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010162603575736284, "outcome": "passed"}, "call": {"duration": 0.00016397691797465086, "outcome": "passed"}, "teardown": {"duration": 0.00010176899377256632, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_transformation_tags", "lineno": 327, "outcome": "passed", "keywords": ["test_transformation_tags", "TestDataTransformation", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010046199895441532, "outcome": "passed"}, "call": {"duration": 0.0001448530238121748, "outcome": "passed"}, "teardown": {"duration": 0.00010527600534260273, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_transformation_notes", "lineno": 357, "outcome": "passed", "keywords": ["test_transformation_notes", "TestDataTransformation", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010775693226605654, "outcome": "passed"}, "call": {"duration": 0.00013907405082136393, "outcome": "passed"}, "teardown": {"duration": 0.00010006094817072153, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestDataTransformation::test_transformation_parameters", "lineno": 376, "outcome": "passed", "keywords": ["test_transformation_parameters", "TestDataTransformation", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011468108277767897, "outcome": "passed"}, "call": {"duration": 0.0001506000990048051, "outcome": "passed"}, "teardown": {"duration": 0.0001052789157256484, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink::test_create_task_dataset_link", "lineno": 411, "outcome": "passed", "keywords": ["test_create_task_dataset_link", "TestTaskDatasetLink", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010236992966383696, "outcome": "passed"}, "call": {"duration": 0.00014334300067275763, "outcome": "passed"}, "teardown": {"duration": 0.00010033906437456608, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink::test_update_link", "lineno": 432, "outcome": "passed", "keywords": ["test_update_link", "TestTaskDatasetLink", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.993708226829767e-05, "outcome": "passed"}, "call": {"duration": 0.00016723398584872484, "outcome": "passed"}, "teardown": {"duration": 0.00010248902253806591, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_models.py::TestTaskDatasetLink::test_link_notes", "lineno": 455, "outcome": "passed", "keywords": ["test_link_notes", "TestTaskDatasetLink", "test_models.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.83410282060504e-05, "outcome": "passed"}, "call": {"duration": 0.00013925193343311548, "outcome": "passed"}, "teardown": {"duration": 0.00010126503184437752, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_dataset", "lineno": 23, "outcome": "passed", "keywords": ["test_create_dataset", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020994595251977444, "outcome": "passed"}, "call": {"duration": 0.00017134903464466333, "outcome": "passed"}, "teardown": {"duration": 0.00012307800352573395, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_update_dataset", "lineno": 58, "outcome": "passed", "keywords": ["test_update_dataset", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017550098709762096, "outcome": "passed"}, "call": {"duration": 0.00015970703680068254, "outcome": "passed"}, "teardown": {"duration": 0.0001218810211867094, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_update_nonexistent_dataset", "lineno": 86, "outcome": "passed", "keywords": ["test_update_nonexistent_dataset", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017639598809182644, "outcome": "passed"}, "call": {"duration": 0.00023762695491313934, "outcome": "passed"}, "teardown": {"duration": 0.0001226459862664342, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_delete_dataset", "lineno": 94, "outcome": "passed", "keywords": ["test_delete_dataset", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017585605382919312, "outcome": "passed"}, "call": {"duration": 0.0001524400431662798, "outcome": "passed"}, "teardown": {"duration": 0.00011796492617577314, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_list_datasets", "lineno": 112, "outcome": "passed", "keywords": ["test_list_datasets", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017715804278850555, "outcome": "passed"}, "call": {"duration": 0.00019599893130362034, "outcome": "passed"}, "teardown": {"duration": 0.00011974701192229986, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_dataset_tags", "lineno": 167, "outcome": "passed", "keywords": ["test_dataset_tags", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000181661918759346, "outcome": "passed"}, "call": {"duration": 0.0001539899967610836, "outcome": "passed"}, "teardown": {"duration": 0.0001165859866887331, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_dataset_custom_metadata", "lineno": 189, "outcome": "passed", "keywords": ["test_dataset_custom_metadata", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018028495833277702, "outcome": "passed"}, "call": {"duration": 0.00016516598407179117, "outcome": "passed"}, "teardown": {"duration": 0.00012044201139360666, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_dataset_version", "lineno": 214, "outcome": "passed", "keywords": ["test_create_dataset_version", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017464999109506607, "outcome": "passed"}, "call": {"duration": 0.00017468701116740704, "outcome": "passed"}, "teardown": {"duration": 0.00011780194472521544, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_dataset_version_with_parent", "lineno": 253, "outcome": "passed", "keywords": ["test_create_dataset_version_with_parent", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016829499509185553, "outcome": "passed"}, "call": {"duration": 0.0002399900695309043, "outcome": "passed"}, "teardown": {"duration": 0.0001332459505647421, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_version_nonexistent_dataset", "lineno": 284, "outcome": "passed", "keywords": ["test_create_version_nonexistent_dataset", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001850599655881524, "outcome": "passed"}, "call": {"duration": 0.00015758804511278868, "outcome": "passed"}, "teardown": {"duration": 0.00012812193017452955, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_version_nonexistent_parent", "lineno": 293, "outcome": "passed", "keywords": ["test_create_version_nonexistent_parent", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017446198035031557, "outcome": "passed"}, "call": {"duration": 0.00029833195731043816, "outcome": "passed"}, "teardown": {"duration": 0.00013378995936363935, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_update_dataset_version", "lineno": 310, "outcome": "passed", "keywords": ["test_update_dataset_version", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017996004316955805, "outcome": "passed"}, "call": {"duration": 0.00019904703367501497, "outcome": "passed"}, "teardown": {"duration": 0.00012050801888108253, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_version_operations", "lineno": 348, "outcome": "passed", "keywords": ["test_version_operations", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017704593483358622, "outcome": "passed"}, "call": {"duration": 0.00020003202371299267, "outcome": "passed"}, "teardown": {"duration": 0.00012091104872524738, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_data_transformation", "lineno": 402, "outcome": "passed", "keywords": ["test_create_data_transformation", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018256600014865398, "outcome": "passed"}, "call": {"duration": 0.00018480501603335142, "outcome": "passed"}, "teardown": {"duration": 0.0001192060299217701, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_create_transformation_nonexistent_version", "lineno": 455, "outcome": "passed", "keywords": ["test_create_transformation_nonexistent_version", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017282506451010704, "outcome": "passed"}, "call": {"duration": 0.0002663230989128351, "outcome": "passed"}, "teardown": {"duration": 0.00012104411143809557, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_transformation_operations", "lineno": 465, "outcome": "passed", "keywords": ["test_transformation_operations", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000191429047845304, "outcome": "passed"}, "call": {"duration": 0.0002258900785818696, "outcome": "passed"}, "teardown": {"duration": 0.00011739192996174097, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_link_task_to_dataset_version", "lineno": 551, "outcome": "passed", "keywords": ["test_link_task_to_dataset_version", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016792397946119308, "outcome": "passed"}, "call": {"duration": 0.00018468196503818035, "outcome": "passed"}, "teardown": {"duration": 0.00012018007691949606, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_link_to_nonexistent_version", "lineno": 582, "outcome": "passed", "keywords": ["test_link_to_nonexistent_version", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000174539047293365, "outcome": "passed"}, "call": {"duration": 0.0002459550742059946, "outcome": "passed"}, "teardown": {"duration": 0.00012085295747965574, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_task_dataset_link_operations", "lineno": 590, "outcome": "passed", "keywords": ["test_task_dataset_link_operations", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016894505824893713, "outcome": "passed"}, "call": {"duration": 0.0002064029686152935, "outcome": "passed"}, "teardown": {"duration": 0.00012753496412187815, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_service.py::TestDatasetVersioningService::test_dataset_lineage", "lineno": 661, "outcome": "passed", "keywords": ["test_dataset_lineage", "TestDatasetVersioningService", "test_service.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017742998898029327, "outcome": "passed"}, "call": {"duration": 0.00026476604398339987, "outcome": "passed"}, "teardown": {"duration": 0.00013449706602841616, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_create_and_get_dataset", "lineno": 43, "outcome": "passed", "keywords": ["test_create_and_get_dataset", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0008383509702980518, "outcome": "passed"}, "call": {"duration": 0.0001424909569323063, "outcome": "passed"}, "teardown": {"duration": 0.00012589897960424423, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_update_dataset", "lineno": 55, "outcome": "passed", "keywords": ["test_update_dataset", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002242010086774826, "outcome": "passed"}, "call": {"duration": 0.00012740702368319035, "outcome": "passed"}, "teardown": {"duration": 0.00012360198888927698, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_update_nonexistent_dataset", "lineno": 70, "outcome": "passed", "keywords": ["test_update_nonexistent_dataset", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021274597384035587, "outcome": "passed"}, "call": {"duration": 0.00014697504229843616, "outcome": "passed"}, "teardown": {"duration": 0.00012054492253810167, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_delete_dataset", "lineno": 83, "outcome": "passed", "keywords": ["test_delete_dataset", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001978680957108736, "outcome": "passed"}, "call": {"duration": 0.00015885895118117332, "outcome": "passed"}, "teardown": {"duration": 0.0001227000029757619, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_delete_nonexistent_dataset", "lineno": 114, "outcome": "passed", "keywords": ["test_delete_nonexistent_dataset", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021129508968442678, "outcome": "passed"}, "call": {"duration": 0.0001228500623255968, "outcome": "passed"}, "teardown": {"duration": 0.0001332070678472519, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_list_datasets_empty", "lineno": 119, "outcome": "passed", "keywords": ["test_list_datasets_empty", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019824202172458172, "outcome": "passed"}, "call": {"duration": 0.00011898810043931007, "outcome": "passed"}, "teardown": {"duration": 0.00011479808017611504, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_list_datasets_with_filters", "lineno": 124, "outcome": "failed", "keywords": ["test_list_datasets_with_filters", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021144701167941093, "outcome": "passed"}, "call": {"duration": 0.00014189898502081633, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/dataset_versioning/test_storage.py", "lineno": 140, "message": "TypeError: InMemoryDatasetStorage.list_datasets() got an unexpected keyword argument 'storage_type'"}, "traceback": [{"path": "tests/dataset_versioning/test_storage.py", "lineno": 140, "message": "TypeError"}], "longrepr": "self = <tests.dataset_versioning.test_storage.TestInMemoryDatasetStorage object at 0x7fec11f0f520>\n\n    def test_list_datasets_with_filters(self):\n        # Test listing datasets with various filters\n        self.storage.create_dataset(self.dataset1)\n        self.storage.create_dataset(self.dataset2)\n    \n        # Filter by format\n        csv_datasets = self.storage.list_datasets(format=DatasetFormat.CSV)\n        assert len(csv_datasets) == 1\n        assert csv_datasets[0].name == \"Climate Data 2010-2020\"\n    \n        parquet_datasets = self.storage.list_datasets(format=DatasetFormat.PARQUET)\n        assert len(parquet_datasets) == 1\n        assert parquet_datasets[0].name == \"Census Data 2020\"\n    \n        # Filter by storage type\n>       s3_datasets = self.storage.list_datasets(storage_type=DatasetStorageType.S3)\nE       TypeError: InMemoryDatasetStorage.list_datasets() got an unexpected keyword argument 'storage_type'\n\ntests/dataset_versioning/test_storage.py:140: TypeError"}, "teardown": {"duration": 0.0001671330537647009, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_dataset_version_operations", "lineno": 160, "outcome": "failed", "keywords": ["test_dataset_version_operations", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023915304336696863, "outcome": "passed"}, "call": {"duration": 0.0001763270702213049, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/dataset_versioning/test_storage.py", "lineno": 207, "message": "AttributeError: 'InMemoryDatasetStorage' object has no attribute 'get_latest_dataset_version'. Did you mean: 'delete_dataset_version'?"}, "traceback": [{"path": "tests/dataset_versioning/test_storage.py", "lineno": 207, "message": "AttributeError"}], "longrepr": "self = <tests.dataset_versioning.test_storage.TestInMemoryDatasetStorage object at 0x7fec11f0f6d0>\n\n    def test_dataset_version_operations(self):\n        # Test dataset version CRUD operations\n        dataset_id = self.storage.create_dataset(self.dataset1)\n    \n        # Create versions\n        version1 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.0.0\",\n            location=\"s3://test-bucket/climate-2010-2020/v1.0.0.csv\",\n            creator=\"Researcher A\",\n        )\n    \n        version2 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"2.0.0\",\n            location=\"s3://test-bucket/climate-2010-2020/v2.0.0.csv\",\n            creator=\"Researcher B\",\n        )\n    \n        version_id1 = self.storage.create_dataset_version(version1)\n        version_id2 = self.storage.create_dataset_version(version2)\n    \n        # Test retrieving versions\n        retrieved_version1 = self.storage.get_dataset_version(version_id1)\n    \n        assert retrieved_version1 is not None\n        assert retrieved_version1.id == version_id1\n        assert retrieved_version1.dataset_id == dataset_id\n        assert retrieved_version1.version_number == \"1.0.0\"\n        assert retrieved_version1.creator == \"Researcher A\"\n    \n        # Test updating a version\n        version1.description = \"Initial version\"\n        update_result = self.storage.update_dataset_version(version1)\n        updated_version1 = self.storage.get_dataset_version(version_id1)\n    \n        assert update_result is True\n        assert updated_version1.description == \"Initial version\"\n    \n        # Test listing versions\n        versions = self.storage.list_dataset_versions(dataset_id)\n    \n        assert len(versions) == 2\n        assert {v.version_number for v in versions} == {\"1.0.0\", \"2.0.0\"}\n    \n        # Test get latest version\n>       latest_version = self.storage.get_latest_dataset_version(dataset_id)\nE       AttributeError: 'InMemoryDatasetStorage' object has no attribute 'get_latest_dataset_version'. Did you mean: 'delete_dataset_version'?\n\ntests/dataset_versioning/test_storage.py:207: AttributeError"}, "teardown": {"duration": 0.0001650770427659154, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_version_lineage_operations", "lineno": 223, "outcome": "failed", "keywords": ["test_version_lineage_operations", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002380840014666319, "outcome": "passed"}, "call": {"duration": 0.00031576305627822876, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/dataset_versioning/test_storage.py", "lineno": 265, "message": "AssertionError: assert UUID('43b7d3f0-edf0-4eb9-81da-1e02423cd8de') is None\n +  where UUID('43b7d3f0-edf0-4eb9-81da-1e02423cd8de') = DatasetVersion(id=UUID('927437a9-b9c1-417c-b398-1416e8caa198'), dataset_id=UUID('292a217e-acf1-4d8b-9bb5-b6dc7cdfcfb8'...on_id=UUID('43b7d3f0-edf0-4eb9-81da-1e02423cd8de'), row_count=None, column_count=None, schema=None, custom_metadata={}).parent_version_id"}, "traceback": [{"path": "tests/dataset_versioning/test_storage.py", "lineno": 265, "message": "AssertionError"}], "longrepr": "self = <tests.dataset_versioning.test_storage.TestInMemoryDatasetStorage object at 0x7fec11f0f880>\n\n    def test_version_lineage_operations(self):\n        # Test version lineage with parent references\n        dataset_id = self.storage.create_dataset(self.dataset1)\n    \n        # Create a sequence of versions with parent relationships\n        version1 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.0.0\",\n            location=\"s3://test-bucket/climate-2010-2020/v1.0.0.csv\",\n        )\n        version_id1 = self.storage.create_dataset_version(version1)\n    \n        version2 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.1.0\",\n            location=\"s3://test-bucket/climate-2010-2020/v1.1.0.csv\",\n            parent_version_id=version_id1,\n        )\n        version_id2 = self.storage.create_dataset_version(version2)\n    \n        version3 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"2.0.0\",\n            location=\"s3://test-bucket/climate-2010-2020/v2.0.0.csv\",\n            parent_version_id=version_id2,\n        )\n        version_id3 = self.storage.create_dataset_version(version3)\n    \n        # Verify parent references\n        v2 = self.storage.get_dataset_version(version_id2)\n        v3 = self.storage.get_dataset_version(version_id3)\n    \n        assert v2.parent_version_id == version_id1\n        assert v3.parent_version_id == version_id2\n    \n        # Test deleting a version in the middle of the lineage\n        # Parent references should be updated to maintain chain integrity\n        self.storage.delete_dataset_version(version_id2)\n    \n        # Verify the updated parent references\n        v3_updated = self.storage.get_dataset_version(version_id3)\n>       assert v3_updated.parent_version_id is None\nE       AssertionError: assert UUID('43b7d3f0-edf0-4eb9-81da-1e02423cd8de') is None\nE        +  where UUID('43b7d3f0-edf0-4eb9-81da-1e02423cd8de') = DatasetVersion(id=UUID('927437a9-b9c1-417c-b398-1416e8caa198'), dataset_id=UUID('292a217e-acf1-4d8b-9bb5-b6dc7cdfcfb8'...on_id=UUID('43b7d3f0-edf0-4eb9-81da-1e02423cd8de'), row_count=None, column_count=None, schema=None, custom_metadata={}).parent_version_id\n\ntests/dataset_versioning/test_storage.py:265: AssertionError"}, "teardown": {"duration": 0.00016731698997318745, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_data_transformation_operations", "lineno": 266, "outcome": "failed", "keywords": ["test_data_transformation_operations", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023214903194457293, "outcome": "passed"}, "call": {"duration": 0.0001855089794844389, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/dataset_versioning/test_storage.py", "lineno": 321, "message": "AttributeError: 'InMemoryDatasetStorage' object has no attribute 'list_data_transformations'. Did you mean: 'get_data_transformation'?"}, "traceback": [{"path": "tests/dataset_versioning/test_storage.py", "lineno": 321, "message": "AttributeError"}], "longrepr": "self = <tests.dataset_versioning.test_storage.TestInMemoryDatasetStorage object at 0x7fec11f0fa30>\n\n    def test_data_transformation_operations(self):\n        # Test data transformation CRUD operations\n        dataset_id = self.storage.create_dataset(self.dataset1)\n    \n        # Create versions for input/output\n        input_version = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.0.0\",\n            location=\"s3://test-bucket/input-version.csv\",\n        )\n        input_version_id = self.storage.create_dataset_version(input_version)\n    \n        output_version = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.1.0\",\n            location=\"s3://test-bucket/output-version.csv\",\n        )\n        output_version_id = self.storage.create_dataset_version(output_version)\n    \n        # Create transformation\n        transformation = DataTransformation(\n            type=DataTransformationType.CLEANING,\n            name=\"Data Cleaning Step\",\n            description=\"Remove outliers and normalize data\",\n            input_dataset_version_id=input_version_id,\n            output_dataset_version_id=output_version_id,\n            parameters={\"outlier_threshold\": 3.0},\n            code_reference=\"https://github.com/repo/cleaning.py\",\n        )\n    \n        transformation_id = self.storage.create_data_transformation(transformation)\n    \n        # Test retrieving transformation\n        retrieved_transformation = self.storage.get_data_transformation(transformation_id)\n    \n        assert retrieved_transformation is not None\n        assert retrieved_transformation.id == transformation_id\n        assert retrieved_transformation.type == DataTransformationType.CLEANING\n        assert retrieved_transformation.name == \"Data Cleaning Step\"\n        assert retrieved_transformation.input_dataset_version_id == input_version_id\n        assert retrieved_transformation.output_dataset_version_id == output_version_id\n    \n        # Test updating transformation\n        transformation.description = \"Updated description\"\n        transformation.execution_time_seconds = 45.2\n    \n        update_result = self.storage.update_data_transformation(transformation)\n        updated_transformation = self.storage.get_data_transformation(transformation_id)\n    \n        assert update_result is True\n        assert updated_transformation.description == \"Updated description\"\n        assert updated_transformation.execution_time_seconds == 45.2\n    \n        # Test listing transformations\n>       transformations_by_input = self.storage.list_data_transformations(\n            input_dataset_version_id=input_version_id\n        )\nE       AttributeError: 'InMemoryDatasetStorage' object has no attribute 'list_data_transformations'. Did you mean: 'get_data_transformation'?\n\ntests/dataset_versioning/test_storage.py:321: AttributeError"}, "teardown": {"duration": 0.00016682804562151432, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_task_dataset_link_operations", "lineno": 344, "outcome": "failed", "keywords": ["test_task_dataset_link_operations", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023605604656040668, "outcome": "passed"}, "call": {"duration": 0.00017648597713559866, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/dataset_versioning/test_storage.py", "lineno": 393, "message": "AttributeError: 'InMemoryDatasetStorage' object has no attribute 'get_dataset_versions_by_task'. Did you mean: 'get_dataset_versions_for_task'?"}, "traceback": [{"path": "tests/dataset_versioning/test_storage.py", "lineno": 393, "message": "AttributeError"}], "longrepr": "self = <tests.dataset_versioning.test_storage.TestInMemoryDatasetStorage object at 0x7fec11f0fbe0>\n\n    def test_task_dataset_link_operations(self):\n        # Test task-dataset link CRUD operations\n        dataset_id = self.storage.create_dataset(self.dataset1)\n    \n        # Create a version\n        version = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.0.0\",\n            location=\"s3://test-bucket/v1.0.0.csv\",\n        )\n        version_id = self.storage.create_dataset_version(version)\n    \n        # Create links between tasks and the dataset version\n        link1 = TaskDatasetLink(\n            task_id=self.task_id1,\n            dataset_version_id=version_id,\n            usage_type=\"input\",\n            description=\"Primary input dataset\",\n        )\n    \n        link2 = TaskDatasetLink(\n            task_id=self.task_id2,\n            dataset_version_id=version_id,\n            usage_type=\"reference\",\n            description=\"Reference dataset\",\n        )\n    \n        link_id1 = self.storage.create_task_dataset_link(link1)\n        link_id2 = self.storage.create_task_dataset_link(link2)\n    \n        # Test retrieving link\n        retrieved_link = self.storage.get_task_dataset_link(link_id1)\n    \n        assert retrieved_link is not None\n        assert retrieved_link.id == link_id1\n        assert retrieved_link.task_id == self.task_id1\n        assert retrieved_link.dataset_version_id == version_id\n        assert retrieved_link.usage_type == \"input\"\n    \n        # Test updating link\n        link1.description = \"Updated description\"\n        update_result = self.storage.update_task_dataset_link(link1)\n        updated_link = self.storage.get_task_dataset_link(link_id1)\n    \n        assert update_result is True\n        assert updated_link.description == \"Updated description\"\n    \n        # Test querying links\n>       task1_versions = self.storage.get_dataset_versions_by_task(self.task_id1)\nE       AttributeError: 'InMemoryDatasetStorage' object has no attribute 'get_dataset_versions_by_task'. Did you mean: 'get_dataset_versions_for_task'?\n\ntests/dataset_versioning/test_storage.py:393: AttributeError"}, "teardown": {"duration": 0.00017027498688548803, "outcome": "passed"}}, {"nodeid": "tests/dataset_versioning/test_storage.py::TestInMemoryDatasetStorage::test_get_lineage", "lineno": 415, "outcome": "failed", "keywords": ["test_get_lineage", "TestInMemoryDatasetStorage", "test_storage.py", "dataset_versioning", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022409402299672365, "outcome": "passed"}, "call": {"duration": 0.00021116493735462427, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/dataset_versioning/test_storage.py", "lineno": 462, "message": "AttributeError: 'InMemoryDatasetStorage' object has no attribute 'get_lineage'"}, "traceback": [{"path": "tests/dataset_versioning/test_storage.py", "lineno": 462, "message": "AttributeError"}], "longrepr": "self = <tests.dataset_versioning.test_storage.TestInMemoryDatasetStorage object at 0x7fec11f0fd90>\n\n    def test_get_lineage(self):\n        # Test lineage tracking\n        dataset_id = self.storage.create_dataset(self.dataset1)\n    \n        # Create a sequence of versions and transformations\n        v1 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.0.0\",\n            location=\"/path/to/v1.csv\",\n        )\n        v1_id = self.storage.create_dataset_version(v1)\n    \n        v2 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"1.1.0\",\n            location=\"/path/to/v2.csv\",\n            parent_version_id=v1_id,\n        )\n        v2_id = self.storage.create_dataset_version(v2)\n    \n        v3 = DatasetVersion(\n            dataset_id=dataset_id,\n            version_number=\"2.0.0\",\n            location=\"/path/to/v3.csv\",\n            parent_version_id=v2_id,\n        )\n        v3_id = self.storage.create_dataset_version(v3)\n    \n        # Create transformations between versions\n        t1 = DataTransformation(\n            type=DataTransformationType.CLEANING,\n            name=\"Initial cleaning\",\n            input_dataset_version_id=v1_id,\n            output_dataset_version_id=v2_id,\n        )\n        t1_id = self.storage.create_data_transformation(t1)\n    \n        t2 = DataTransformation(\n            type=DataTransformationType.FEATURE_ENGINEERING,\n            name=\"Feature engineering\",\n            input_dataset_version_id=v2_id,\n            output_dataset_version_id=v3_id,\n        )\n        t2_id = self.storage.create_data_transformation(t2)\n    \n        # Get lineage starting from v3\n>       lineage = self.storage.get_lineage(v3_id)\nE       AttributeError: 'InMemoryDatasetStorage' object has no attribute 'get_lineage'\n\ntests/dataset_versioning/test_storage.py:462: AttributeError"}, "teardown": {"duration": 0.00017178000416606665, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestPackageInfo::test_create_package_info", "lineno": 18, "outcome": "passed", "keywords": ["test_create_package_info", "TestPackageInfo", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002908750902861357, "outcome": "passed"}, "call": {"duration": 0.00015188800171017647, "outcome": "passed"}, "teardown": {"duration": 0.00010716600809246302, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestComputeResource::test_create_compute_resource", "lineno": 52, "outcome": "passed", "keywords": ["test_create_compute_resource", "TestComputeResource", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010892900172621012, "outcome": "passed"}, "call": {"duration": 0.00013298005796968937, "outcome": "passed"}, "teardown": {"duration": 0.0001044080127030611, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_create_environment_snapshot", "lineno": 82, "outcome": "passed", "keywords": ["test_create_environment_snapshot", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010198808740824461, "outcome": "passed"}, "call": {"duration": 0.00017810205463320017, "outcome": "passed"}, "teardown": {"duration": 0.00010291801299899817, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_update_environment_snapshot", "lineno": 181, "outcome": "passed", "keywords": ["test_update_environment_snapshot", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010281300637871027, "outcome": "passed"}, "call": {"duration": 0.00017486605793237686, "outcome": "passed"}, "teardown": {"duration": 0.00010065804235637188, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_package_management", "lineno": 206, "outcome": "passed", "keywords": ["test_package_management", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010361499153077602, "outcome": "passed"}, "call": {"duration": 0.00016562698874622583, "outcome": "passed"}, "teardown": {"duration": 0.00010216096416115761, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_compute_resource_management", "lineno": 253, "outcome": "passed", "keywords": ["test_compute_resource_management", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010064395610243082, "outcome": "passed"}, "call": {"duration": 0.0001480249920859933, "outcome": "passed"}, "teardown": {"duration": 0.00011001806706190109, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_environment_variable_management", "lineno": 293, "outcome": "passed", "keywords": ["test_environment_variable_management", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010078097693622112, "outcome": "passed"}, "call": {"duration": 0.00013999000657349825, "outcome": "passed"}, "teardown": {"duration": 9.841809514909983e-05, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_config_file_management", "lineno": 327, "outcome": "passed", "keywords": ["test_config_file_management", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010536599438637495, "outcome": "passed"}, "call": {"duration": 0.0001394810387864709, "outcome": "passed"}, "teardown": {"duration": 9.673601016402245e-05, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_tag_management", "lineno": 370, "outcome": "passed", "keywords": ["test_tag_management", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.766803123056889e-05, "outcome": "passed"}, "call": {"duration": 0.00013828498777002096, "outcome": "passed"}, "teardown": {"duration": 9.844801388680935e-05, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestEnvironmentSnapshot::test_custom_metadata_management", "lineno": 403, "outcome": "passed", "keywords": ["test_custom_metadata_management", "TestEnvironmentSnapshot", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010013009887188673, "outcome": "passed"}, "call": {"duration": 0.00014537503011524677, "outcome": "passed"}, "teardown": {"duration": 0.00011592998635023832, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink::test_create_task_environment_link", "lineno": 447, "outcome": "passed", "keywords": ["test_create_task_environment_link", "TestTaskEnvironmentLink", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001053160522133112, "outcome": "passed"}, "call": {"duration": 0.00013938103802502155, "outcome": "passed"}, "teardown": {"duration": 9.68429958447814e-05, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink::test_update_link", "lineno": 468, "outcome": "passed", "keywords": ["test_update_link", "TestTaskEnvironmentLink", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.717198554426432e-05, "outcome": "passed"}, "call": {"duration": 0.00015656603500247002, "outcome": "passed"}, "teardown": {"duration": 0.00010002392809838057, "outcome": "passed"}}, {"nodeid": "tests/environment/test_models.py::TestTaskEnvironmentLink::test_add_note", "lineno": 491, "outcome": "passed", "keywords": ["test_add_note", "TestTaskEnvironmentLink", "test_models.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.958900045603514e-05, "outcome": "passed"}, "call": {"duration": 0.0001371930120512843, "outcome": "passed"}, "teardown": {"duration": 0.00010104395914822817, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_create_environment_snapshot", "lineno": 26, "outcome": "passed", "keywords": ["test_create_environment_snapshot", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020383496303111315, "outcome": "passed"}, "call": {"duration": 0.0001609879545867443, "outcome": "passed"}, "teardown": {"duration": 0.00012040603905916214, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_create_environment_with_packages_and_resources", "lineno": 55, "outcome": "passed", "keywords": ["test_create_environment_with_packages_and_resources", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001829800894483924, "outcome": "passed"}, "call": {"duration": 0.00017117697279900312, "outcome": "passed"}, "teardown": {"duration": 0.00011794001329690218, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_capture_current_environment", "lineno": 140, "outcome": "passed", "keywords": ["test_capture_current_environment", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018278404604643583, "outcome": "passed"}, "call": {"duration": 0.08433328103274107, "outcome": "passed"}, "teardown": {"duration": 0.00015019800048321486, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_update_environment", "lineno": 169, "outcome": "passed", "keywords": ["test_update_environment", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022521999198943377, "outcome": "passed"}, "call": {"duration": 0.00021501700393855572, "outcome": "passed"}, "teardown": {"duration": 0.00013455108273774385, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_update_nonexistent_environment", "lineno": 206, "outcome": "passed", "keywords": ["test_update_nonexistent_environment", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019553699530661106, "outcome": "passed"}, "call": {"duration": 0.00028560496866703033, "outcome": "passed"}, "teardown": {"duration": 0.00012667197734117508, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_delete_environment", "lineno": 214, "outcome": "passed", "keywords": ["test_delete_environment", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021625705994665623, "outcome": "passed"}, "call": {"duration": 0.0001662229187786579, "outcome": "passed"}, "teardown": {"duration": 0.00012352305930107832, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_list_environments", "lineno": 230, "outcome": "passed", "keywords": ["test_list_environments", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001865960657596588, "outcome": "passed"}, "call": {"duration": 0.00022447493392974138, "outcome": "passed"}, "teardown": {"duration": 0.00012819399125874043, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_environment_tag_operations", "lineno": 284, "outcome": "passed", "keywords": ["test_environment_tag_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018478708807379007, "outcome": "passed"}, "call": {"duration": 0.00018405704759061337, "outcome": "passed"}, "teardown": {"duration": 0.00012135598808526993, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_package_operations", "lineno": 313, "outcome": "passed", "keywords": ["test_package_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017782894428819418, "outcome": "passed"}, "call": {"duration": 0.00019462802447378635, "outcome": "passed"}, "teardown": {"duration": 0.00012309197336435318, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_compute_resource_operations", "lineno": 362, "outcome": "passed", "keywords": ["test_compute_resource_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001750109950080514, "outcome": "passed"}, "call": {"duration": 0.00017610506620258093, "outcome": "passed"}, "teardown": {"duration": 0.00013860291801393032, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_environment_variable_operations", "lineno": 407, "outcome": "passed", "keywords": ["test_environment_variable_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00025303091388195753, "outcome": "passed"}, "call": {"duration": 0.00020924408454447985, "outcome": "passed"}, "teardown": {"duration": 0.0001309410436078906, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_config_file_operations", "lineno": 448, "outcome": "passed", "keywords": ["test_config_file_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001778999576345086, "outcome": "passed"}, "call": {"duration": 0.0001673089573159814, "outcome": "passed"}, "teardown": {"duration": 0.00011921802069991827, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_custom_metadata_operations", "lineno": 501, "outcome": "passed", "keywords": ["test_custom_metadata_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018024095334112644, "outcome": "passed"}, "call": {"duration": 0.00018062896560877562, "outcome": "passed"}, "teardown": {"duration": 0.00012200698256492615, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_compare_environments", "lineno": 550, "outcome": "passed", "keywords": ["test_compare_environments", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018577196169644594, "outcome": "passed"}, "call": {"duration": 0.0002217240398749709, "outcome": "passed"}, "teardown": {"duration": 0.00012187205720692873, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_link_task_to_environment", "lineno": 658, "outcome": "passed", "keywords": ["test_link_task_to_environment", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018339697271585464, "outcome": "passed"}, "call": {"duration": 0.00016502896323800087, "outcome": "passed"}, "teardown": {"duration": 0.0001206219894811511, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_link_to_nonexistent_environment", "lineno": 681, "outcome": "passed", "keywords": ["test_link_to_nonexistent_environment", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020032294560223818, "outcome": "passed"}, "call": {"duration": 0.00016549997963011265, "outcome": "passed"}, "teardown": {"duration": 0.00011874700430780649, "outcome": "passed"}}, {"nodeid": "tests/environment/test_service.py::TestEnvironmentService::test_task_environment_link_operations", "lineno": 689, "outcome": "passed", "keywords": ["test_task_environment_link_operations", "TestEnvironmentService", "test_service.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017284497153013945, "outcome": "passed"}, "call": {"duration": 0.00025329599156975746, "outcome": "passed"}, "teardown": {"duration": 0.00012479000724852085, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_create_and_get_environment", "lineno": 63, "outcome": "failed", "keywords": ["test_create_and_get_environment", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002462350530549884, "outcome": "passed"}, "call": {"duration": 0.0001493289601057768, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 66, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 66, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11da24d0>\n\n    def test_create_and_get_environment(self):\n        # Test creating and retrieving an environment\n>       env_id = self.storage.create_environment(self.environment1)\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'\n\ntests/environment/test_storage.py:66: AttributeError"}, "teardown": {"duration": 0.00017018395010381937, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_update_environment", "lineno": 76, "outcome": "failed", "keywords": ["test_update_environment", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00024368194863200188, "outcome": "passed"}, "call": {"duration": 0.00013714004307985306, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 79, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 79, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11d57520>\n\n    def test_update_environment(self):\n        # Test updating an environment\n>       env_id = self.storage.create_environment(self.environment1)\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'\n\ntests/environment/test_storage.py:79: AttributeError"}, "teardown": {"duration": 0.00016890501137822866, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_update_nonexistent_environment", "lineno": 91, "outcome": "failed", "keywords": ["test_update_nonexistent_environment", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002511129714548588, "outcome": "passed"}, "call": {"duration": 0.00015525193884968758, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 100, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'update_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 100, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11e527d0>\n\n    def test_update_nonexistent_environment(self):\n        # Test updating an environment that doesn't exist\n        nonexistent_env = EnvironmentSnapshot(\n            id=uuid4(),\n            name=\"Nonexistent Environment\",\n            type=EnvironmentType.LOCAL,\n        )\n    \n>       update_result = self.storage.update_environment(nonexistent_env)\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'update_environment'\n\ntests/environment/test_storage.py:100: AttributeError"}, "teardown": {"duration": 0.00017700891476124525, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_delete_environment", "lineno": 102, "outcome": "failed", "keywords": ["test_delete_environment", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00024166994262486696, "outcome": "passed"}, "call": {"duration": 0.00013904599472880363, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 105, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 105, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11da22f0>\n\n    def test_delete_environment(self):\n        # Test deleting an environment\n>       env_id = self.storage.create_environment(self.environment1)\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'\n\ntests/environment/test_storage.py:105: AttributeError"}, "teardown": {"duration": 0.00016987102571874857, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_delete_nonexistent_environment", "lineno": 122, "outcome": "failed", "keywords": ["test_delete_nonexistent_environment", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002664090134203434, "outcome": "passed"}, "call": {"duration": 0.00014115392696112394, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 125, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'delete_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 125, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11da19f0>\n\n    def test_delete_nonexistent_environment(self):\n        # Test deleting an environment that doesn't exist\n>       delete_result = self.storage.delete_environment(uuid4())\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'delete_environment'\n\ntests/environment/test_storage.py:125: AttributeError"}, "teardown": {"duration": 0.00016960501670837402, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_list_environments_empty", "lineno": 127, "outcome": "failed", "keywords": ["test_list_environments_empty", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002474409993737936, "outcome": "passed"}, "call": {"duration": 0.00013850897084921598, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 130, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'list_environments'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 130, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11da14e0>\n\n    def test_list_environments_empty(self):\n        # Test listing environments when storage is empty\n>       environments = self.storage.list_environments()\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'list_environments'\n\ntests/environment/test_storage.py:130: AttributeError"}, "teardown": {"duration": 0.00016885704826563597, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_list_environments_with_filters", "lineno": 132, "outcome": "failed", "keywords": ["test_list_environments_with_filters", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00025730300694704056, "outcome": "passed"}, "call": {"duration": 0.00013917009346187115, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 135, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 135, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11da0fd0>\n\n    def test_list_environments_with_filters(self):\n        # Test listing environments with various filters\n>       self.storage.create_environment(self.environment1)\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'\n\ntests/environment/test_storage.py:135: AttributeError"}, "teardown": {"duration": 0.0001759190345183015, "outcome": "passed"}}, {"nodeid": "tests/environment/test_storage.py::TestInMemoryEnvironmentStorage::test_task_environment_link_operations", "lineno": 163, "outcome": "failed", "keywords": ["test_task_environment_link_operations", "TestInMemoryEnvironmentStorage", "test_storage.py", "environment", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002440200187265873, "outcome": "passed"}, "call": {"duration": 0.00013632001355290413, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/environment/test_storage.py", "lineno": 166, "message": "AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'"}, "traceback": [{"path": "tests/environment/test_storage.py", "lineno": 166, "message": "AttributeError"}], "longrepr": "self = <tests.environment.test_storage.TestInMemoryEnvironmentStorage object at 0x7fec11da0ac0>\n\n    def test_task_environment_link_operations(self):\n        # Test task-environment link CRUD operations\n>       env_id1 = self.storage.create_environment(self.environment1)\nE       AttributeError: 'InMemoryEnvironmentStorage' object has no attribute 'create_environment'\n\ntests/environment/test_storage.py:166: AttributeError"}, "teardown": {"duration": 0.00017367000691592693, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_parameter_creation", "lineno": 10, "outcome": "passed", "keywords": ["test_parameter_creation", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00029486604034900665, "outcome": "passed"}, "call": {"duration": 0.00016119098290801048, "outcome": "passed"}, "teardown": {"duration": 0.00010805204510688782, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_metric_creation", "lineno": 26, "outcome": "passed", "keywords": ["test_metric_creation", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001042420044541359, "outcome": "passed"}, "call": {"duration": 0.00013711501378566027, "outcome": "passed"}, "teardown": {"duration": 0.00010989594738930464, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_run_creation", "lineno": 43, "outcome": "passed", "keywords": ["test_experiment_run_creation", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010328390635550022, "outcome": "passed"}, "call": {"duration": 0.00015152792911976576, "outcome": "passed"}, "teardown": {"duration": 0.00010532897431403399, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_run_duration", "lineno": 68, "outcome": "passed", "keywords": ["test_experiment_run_duration", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011089304462075233, "outcome": "passed"}, "call": {"duration": 0.00016267294995486736, "outcome": "passed"}, "teardown": {"duration": 0.00010303105227649212, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_creation", "lineno": 91, "outcome": "passed", "keywords": ["test_experiment_creation", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011102308053523302, "outcome": "passed"}, "call": {"duration": 0.00013935798779129982, "outcome": "passed"}, "teardown": {"duration": 9.954499546438456e-05, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_add_run", "lineno": 111, "outcome": "passed", "keywords": ["test_experiment_add_run", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.766791481524706e-05, "outcome": "passed"}, "call": {"duration": 0.00017175497487187386, "outcome": "passed"}, "teardown": {"duration": 0.00010113802272826433, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_get_run", "lineno": 132, "outcome": "passed", "keywords": ["test_experiment_get_run", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010139890946447849, "outcome": "passed"}, "call": {"duration": 0.00014512799680233002, "outcome": "passed"}, "teardown": {"duration": 9.957992006093264e-05, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_get_best_run", "lineno": 152, "outcome": "passed", "keywords": ["test_experiment_get_best_run", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010621501132845879, "outcome": "passed"}, "call": {"duration": 0.00022367306519299746, "outcome": "passed"}, "teardown": {"duration": 0.00010495795868337154, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_comparison_creation", "lineno": 191, "outcome": "passed", "keywords": ["test_experiment_comparison_creation", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.966397192329168e-05, "outcome": "passed"}, "call": {"duration": 0.00014408596325665712, "outcome": "passed"}, "teardown": {"duration": 0.0001084241084754467, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_models.py::test_experiment_comparison_add_methods", "lineno": 210, "outcome": "passed", "keywords": ["test_experiment_comparison_add_methods", "test_models.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.858398698270321e-05, "outcome": "passed"}, "call": {"duration": 0.00014252099208533764, "outcome": "passed"}, "teardown": {"duration": 0.00011539703700691462, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_experiment", "lineno": 21, "outcome": "passed", "keywords": ["test_create_experiment", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022897589951753616, "outcome": "passed"}, "call": {"duration": 0.00014556292444467545, "outcome": "passed"}, "teardown": {"duration": 0.00013460090849548578, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_experiment", "lineno": 36, "outcome": "passed", "keywords": ["test_get_experiment", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020390399731695652, "outcome": "passed"}, "call": {"duration": 0.00014024402480572462, "outcome": "passed"}, "teardown": {"duration": 0.00013131496962159872, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_experiment_by_name", "lineno": 46, "outcome": "failed", "keywords": ["test_get_experiment_by_name", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017979799304157495, "outcome": "passed"}, "call": {"duration": 0.00014796294271945953, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 50, "message": "AttributeError: 'ExperimentService' object has no attribute 'get_experiment_by_name'"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 50, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11a8c8b0>\n\n    def test_get_experiment_by_name(service):\n        \"\"\"Test retrieving an experiment by name through the service.\"\"\"\n        service.create_experiment(name=\"Test Experiment\")\n>       retrieved = service.get_experiment_by_name(\"Test Experiment\")\nE       AttributeError: 'ExperimentService' object has no attribute 'get_experiment_by_name'\n\ntests/experiment_tracking/test_service.py:50: AttributeError"}, "teardown": {"duration": 0.0001848270185291767, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_update_experiment", "lineno": 58, "outcome": "failed", "keywords": ["test_update_experiment", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020697596482932568, "outcome": "passed"}, "call": {"duration": 0.00017222005408257246, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/researchtrack/experiment_tracking/storage.py", "lineno": 231, "message": "TypeError: unhashable type: 'Experiment'"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 63, "message": ""}, {"path": "researchtrack/experiment_tracking/service.py", "lineno": 108, "message": "in update_experiment"}, {"path": "researchtrack/experiment_tracking/storage.py", "lineno": 231, "message": "TypeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11b3c8b0>\n\n    def test_update_experiment(service):\n        \"\"\"Test updating an experiment through the service.\"\"\"\n        experiment = service.create_experiment(name=\"Original Name\")\n        experiment.name = \"Updated Name\"\n>       updated = service.update_experiment(experiment)\n\ntests/experiment_tracking/test_service.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nresearchtrack/experiment_tracking/service.py:108: in update_experiment\n    experiment = self._storage.get_experiment(experiment_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11b3c8e0>\nexperiment_id = Experiment(id=UUID('3bc62fc7-3b02-4db3-a2d7-d99c2fd7971e'), name='Updated Name', description=None, task_id=None, datas...tetime(2025, 5, 15, 3, 17, 59, 637716), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 637718), runs=[], tags=[])\n\n    def get_experiment(self, experiment_id: UUID) -> Optional[Experiment]:\n>       return self._experiments.get(experiment_id)\nE       TypeError: unhashable type: 'Experiment'\n\nresearchtrack/experiment_tracking/storage.py:231: TypeError"}, "teardown": {"duration": 0.00018023501615971327, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_delete_experiment", "lineno": 71, "outcome": "passed", "keywords": ["test_delete_experiment", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002121699508279562, "outcome": "passed"}, "call": {"duration": 0.0001509550493210554, "outcome": "passed"}, "teardown": {"duration": 0.00013843202032148838, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_list_experiments", "lineno": 80, "outcome": "passed", "keywords": ["test_list_experiments", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019540393259376287, "outcome": "passed"}, "call": {"duration": 0.00015344307757914066, "outcome": "passed"}, "teardown": {"duration": 0.00013142707757651806, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_list_experiments_by_task", "lineno": 92, "outcome": "passed", "keywords": ["test_list_experiments_by_task", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017962208949029446, "outcome": "passed"}, "call": {"duration": 0.00015451095532625914, "outcome": "passed"}, "teardown": {"duration": 0.00012889306526631117, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_add_parameter", "lineno": 104, "outcome": "passed", "keywords": ["test_add_parameter", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001752699026837945, "outcome": "passed"}, "call": {"duration": 0.00013309100177139044, "outcome": "passed"}, "teardown": {"duration": 0.00013524596579372883, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_add_metric", "lineno": 120, "outcome": "failed", "keywords": ["test_add_metric", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001793119590729475, "outcome": "passed"}, "call": {"duration": 0.00012127100490033627, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 123, "message": "AttributeError: 'ExperimentService' object has no attribute 'add_metric'. Did you mean: 'add_run_metric'?"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 123, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11dd27d0>\n\n    def test_add_metric(service):\n        \"\"\"Test creating a metric through the service.\"\"\"\n>       metric = service.add_metric(\n            name=\"accuracy\",\n            type=MetricType.ACCURACY,\n            value=0.95,\n            description=\"Validation accuracy\"\n        )\nE       AttributeError: 'ExperimentService' object has no attribute 'add_metric'. Did you mean: 'add_run_metric'?\n\ntests/experiment_tracking/test_service.py:123: AttributeError"}, "teardown": {"duration": 0.0001763530308380723, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_experiment_run", "lineno": 136, "outcome": "passed", "keywords": ["test_create_experiment_run", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019965192768722773, "outcome": "passed"}, "call": {"duration": 0.00017186999320983887, "outcome": "passed"}, "teardown": {"duration": 0.0001570319291204214, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_experiment_run_nonexistent_experiment", "lineno": 155, "outcome": "failed", "keywords": ["test_create_experiment_run_nonexistent_experiment", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001922190422192216, "outcome": "passed"}, "call": {"duration": 0.0001587109873071313, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/researchtrack/experiment_tracking/service.py", "lineno": 310, "message": "ValueError: Experiment with ID c25c4047-0c01-46f3-8b18-c6ba840e77f7 does not exist"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 159, "message": ""}, {"path": "researchtrack/experiment_tracking/service.py", "lineno": 310, "message": "ValueError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11965660>\n\n    def test_create_experiment_run_nonexistent_experiment(service):\n        \"\"\"Test creating a run for a non-existent experiment.\"\"\"\n        param = service.add_parameter(name=\"p1\", type=ParameterType.FLOAT, value=0.1)\n>       run = service.create_experiment_run(uuid4(), [param])\n\ntests/experiment_tracking/test_service.py:159: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11965660>\nexperiment_id = UUID('c25c4047-0c01-46f3-8b18-c6ba840e77f7')\nparameters = [Parameter(id=UUID('fe4e49b0-df06-4539-bb50-d9faf44a4503'), name='p1', type=<ParameterType.FLOAT: 'float'>, value=0.1, description=None)]\n\n    def create_experiment_run(\n        self, experiment_id: UUID, parameters: List[Parameter]\n    ) -> ExperimentRun:\n        \"\"\"\n        Create a new run for an experiment.\n    \n        Args:\n            experiment_id: The ID of the experiment\n            parameters: List of parameters for this run\n    \n        Returns:\n            ExperimentRun: The created run\n    \n        Raises:\n            ValueError: If experiment doesn't exist\n        \"\"\"\n        experiment = self._storage.get_experiment(experiment_id)\n        if not experiment:\n>           raise ValueError(f\"Experiment with ID {experiment_id} does not exist\")\nE           ValueError: Experiment with ID c25c4047-0c01-46f3-8b18-c6ba840e77f7 does not exist\n\nresearchtrack/experiment_tracking/service.py:310: ValueError"}, "teardown": {"duration": 0.00018562795594334602, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_experiment_run", "lineno": 163, "outcome": "failed", "keywords": ["test_get_experiment_run", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020444090478122234, "outcome": "passed"}, "call": {"duration": 0.000186340999789536, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 169, "message": "AttributeError: 'ExperimentService' object has no attribute 'get_experiment_run'. Did you mean: 'create_experiment_run'?"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 169, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11ad0250>\n\n    def test_get_experiment_run(service):\n        \"\"\"Test retrieving an experiment run through the service.\"\"\"\n        experiment = service.create_experiment(name=\"Test Experiment\")\n        run = service.create_experiment_run(experiment.id, [])\n    \n>       retrieved = service.get_experiment_run(run.id)\nE       AttributeError: 'ExperimentService' object has no attribute 'get_experiment_run'. Did you mean: 'create_experiment_run'?\n\ntests/experiment_tracking/test_service.py:169: AttributeError"}, "teardown": {"duration": 0.0001803310588002205, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_run_lifecycle", "lineno": 175, "outcome": "failed", "keywords": ["test_run_lifecycle", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020403496455401182, "outcome": "passed"}, "call": {"duration": 0.0002019149251282215, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 187, "message": "AttributeError: 'bool' object has no attribute 'status'"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 187, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11c39a20>\n\n    def test_run_lifecycle(service):\n        \"\"\"Test the complete lifecycle of an experiment run.\"\"\"\n        experiment = service.create_experiment(name=\"Test Experiment\")\n        param = service.add_parameter(name=\"p1\", type=ParameterType.FLOAT, value=0.1)\n    \n        # Create a run\n        run = service.create_experiment_run(experiment.id, [param])\n        assert run.status == ExperimentStatus.PLANNED\n    \n        # Start the run\n        run = service.start_run(run.id)\n>       assert run.status == ExperimentStatus.RUNNING\nE       AttributeError: 'bool' object has no attribute 'status'\n\ntests/experiment_tracking/test_service.py:187: AttributeError"}, "teardown": {"duration": 0.00018282001838088036, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_failed_and_aborted_runs", "lineno": 212, "outcome": "failed", "keywords": ["test_failed_and_aborted_runs", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020520505495369434, "outcome": "passed"}, "call": {"duration": 0.00020000606309622526, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 222, "message": "AttributeError: 'bool' object has no attribute 'status'"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 222, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11a8a680>\n\n    def test_failed_and_aborted_runs(service):\n        \"\"\"Test marking runs as failed or aborted.\"\"\"\n        experiment = service.create_experiment(name=\"Test Experiment\")\n    \n        # Create and start a run that will fail\n        failed_run = service.create_experiment_run(experiment.id, [])\n        service.start_run(failed_run.id)\n        failed_run = service.fail_run(failed_run.id)\n    \n>       assert failed_run.status == ExperimentStatus.FAILED\nE       AttributeError: 'bool' object has no attribute 'status'\n\ntests/experiment_tracking/test_service.py:222: AttributeError"}, "teardown": {"duration": 0.00018138601444661617, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_best_run", "lineno": 233, "outcome": "passed", "keywords": ["test_get_best_run", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020364404190331697, "outcome": "passed"}, "call": {"duration": 0.00025779998395591974, "outcome": "passed"}, "teardown": {"duration": 0.0001377470325678587, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_create_comparison", "lineno": 261, "outcome": "passed", "keywords": ["test_create_comparison", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019019993487745523, "outcome": "passed"}, "call": {"duration": 0.00015687709674239159, "outcome": "passed"}, "teardown": {"duration": 0.0001325099729001522, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_comparison", "lineno": 282, "outcome": "passed", "keywords": ["test_get_comparison", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001999820815399289, "outcome": "passed"}, "call": {"duration": 0.00013826298527419567, "outcome": "passed"}, "teardown": {"duration": 0.00012951192911714315, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_update_comparison", "lineno": 292, "outcome": "failed", "keywords": ["test_update_comparison", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001805929932743311, "outcome": "passed"}, "call": {"duration": 0.00016206607688218355, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 297, "message": "AttributeError: 'ExperimentService' object has no attribute 'update_comparison'. Did you mean: 'create_comparison'?"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 297, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec119f05e0>\n\n    def test_update_comparison(service):\n        \"\"\"Test updating a comparison through the service.\"\"\"\n        comparison = service.create_comparison(name=\"Original Name\")\n        comparison.name = \"Updated Name\"\n>       updated = service.update_comparison(comparison)\nE       AttributeError: 'ExperimentService' object has no attribute 'update_comparison'. Did you mean: 'create_comparison'?\n\ntests/experiment_tracking/test_service.py:297: AttributeError"}, "teardown": {"duration": 0.00019399903248995543, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_delete_comparison", "lineno": 305, "outcome": "failed", "keywords": ["test_delete_comparison", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020659202709794044, "outcome": "passed"}, "call": {"duration": 0.00015886698383837938, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 309, "message": "AttributeError: 'ExperimentService' object has no attribute 'delete_comparison'. Did you mean: 'create_comparison'?"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 309, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11d0cc10>\n\n    def test_delete_comparison(service):\n        \"\"\"Test deleting a comparison through the service.\"\"\"\n        comparison = service.create_comparison(name=\"Test Comparison\")\n>       result = service.delete_comparison(comparison.id)\nE       AttributeError: 'ExperimentService' object has no attribute 'delete_comparison'. Did you mean: 'create_comparison'?\n\ntests/experiment_tracking/test_service.py:309: AttributeError"}, "teardown": {"duration": 0.00017976888921111822, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_list_comparisons", "lineno": 314, "outcome": "failed", "keywords": ["test_list_comparisons", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021847698371857405, "outcome": "passed"}, "call": {"duration": 0.00016666704323142767, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 320, "message": "AttributeError: 'ExperimentService' object has no attribute 'list_comparisons'. Did you mean: 'get_comparison'?"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 320, "message": "AttributeError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11afb040>\n\n    def test_list_comparisons(service):\n        \"\"\"Test listing comparisons through the service.\"\"\"\n        service.create_comparison(name=\"Comparison 1\")\n        service.create_comparison(name=\"Comparison 2\")\n    \n>       comparisons = service.list_comparisons()\nE       AttributeError: 'ExperimentService' object has no attribute 'list_comparisons'. Did you mean: 'get_comparison'?\n\ntests/experiment_tracking/test_service.py:320: AttributeError"}, "teardown": {"duration": 0.00019144592806696892, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_service.py::test_get_comparison_data", "lineno": 326, "outcome": "failed", "keywords": ["test_get_comparison_data", "test_service.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020531693007797003, "outcome": "passed"}, "call": {"duration": 0.0004939549835398793, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_service.py", "lineno": 354, "message": "AssertionError: assert 3 == 2\n +  where 3 = len({'comparison': {'created_at': '2025-05-15T03:17:59.744836', 'description': None, 'id': '3656be4f-2dd9-447d-bf14-e629e2...b-3a1c-4fac-8f5a-6f472cafcc63', 'experiment_name': 'Experiment 2', 'id': 'a5a1f4f1-270e-448b-8b08-bd3ae98029d1', ...}]})"}, "traceback": [{"path": "tests/experiment_tracking/test_service.py", "lineno": 354, "message": "AssertionError"}], "longrepr": "service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11a8e140>\n\n    def test_get_comparison_data(service):\n        \"\"\"Test getting comparison data through the service.\"\"\"\n        # Create experiments and runs with metrics\n        experiment1 = service.create_experiment(name=\"Experiment 1\")\n        run1 = service.create_experiment_run(experiment1.id, [])\n        service.start_run(run1.id)\n        service.add_run_metric(run1.id, \"accuracy\", MetricType.ACCURACY, 0.9)\n        service.add_run_metric(run1.id, \"loss\", MetricType.LOSS, 0.1)\n        service.complete_run(run1.id)\n    \n        experiment2 = service.create_experiment(name=\"Experiment 2\")\n        run2 = service.create_experiment_run(experiment2.id, [])\n        service.start_run(run2.id)\n        service.add_run_metric(run2.id, \"accuracy\", MetricType.ACCURACY, 0.85)\n        service.add_run_metric(run2.id, \"loss\", MetricType.LOSS, 0.15)\n        service.complete_run(run2.id)\n    \n        # Create a comparison\n        comparison = service.create_comparison(\n            name=\"Test Comparison\",\n            run_ids=[run1.id, run2.id],\n            metrics=[\"accuracy\", \"loss\"]\n        )\n    \n        # Get comparison data\n        data = service.get_comparison_data(comparison.id)\n    \n>       assert len(data) == 2\nE       AssertionError: assert 3 == 2\nE        +  where 3 = len({'comparison': {'created_at': '2025-05-15T03:17:59.744836', 'description': None, 'id': '3656be4f-2dd9-447d-bf14-e629e2...b-3a1c-4fac-8f5a-6f472cafcc63', 'experiment_name': 'Experiment 2', 'id': 'a5a1f4f1-270e-448b-8b08-bd3ae98029d1', ...}]})\n\ntests/experiment_tracking/test_service.py:354: AssertionError"}, "teardown": {"duration": 0.00019298004917800426, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_experiment", "lineno": 48, "outcome": "failed", "keywords": ["test_create_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023307104129344225, "outcome": "passed"}, "call": {"duration": 0.000142966047860682, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 53, "message": "AttributeError: 'UUID' object has no attribute 'id'"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 53, "message": "AttributeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11b3dd80>\nsample_experiment = Experiment(id=UUID('3e815f1c-680f-485f-aa73-af1f64d15763'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 751957), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 751958), runs=[], tags=['test', 'experiment'])\n\n    def test_create_experiment(storage, sample_experiment):\n        \"\"\"Test creating an experiment in storage.\"\"\"\n        created = storage.create_experiment(sample_experiment)\n    \n>       assert created.id == sample_experiment.id\nE       AttributeError: 'UUID' object has no attribute 'id'\n\ntests/experiment_tracking/test_storage.py:53: AttributeError"}, "teardown": {"duration": 0.00017205195035785437, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_experiment", "lineno": 58, "outcome": "passed", "keywords": ["test_get_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022739695850759745, "outcome": "passed"}, "call": {"duration": 0.00012385996524244547, "outcome": "passed"}, "teardown": {"duration": 0.00012524204794317484, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_nonexistent_experiment", "lineno": 68, "outcome": "passed", "keywords": ["test_get_nonexistent_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00014650903176516294, "outcome": "passed"}, "call": {"duration": 0.00012811203487217426, "outcome": "passed"}, "teardown": {"duration": 0.0001138509251177311, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_experiment", "lineno": 76, "outcome": "failed", "keywords": ["test_update_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001908360281959176, "outcome": "passed"}, "call": {"duration": 0.00012304005213081837, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/uuid.py", "lineno": 277, "message": "TypeError: UUID objects are immutable"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 80, "message": ""}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/uuid.py", "lineno": 277, "message": "TypeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11c39d80>\nsample_experiment = Experiment(id=UUID('8e1121d6-f129-4f05-894b-729e2cee0fa5'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 758845), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 758846), runs=[], tags=['test', 'experiment'])\n\n    def test_update_experiment(storage, sample_experiment):\n        \"\"\"Test updating an experiment in storage.\"\"\"\n        created = storage.create_experiment(sample_experiment)\n>       created.name = \"Updated Experiment\"\n\ntests/experiment_tracking/test_storage.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UUID('8e1121d6-f129-4f05-894b-729e2cee0fa5'), name = 'name', value = 'Updated Experiment'\n\n    def __setattr__(self, name, value):\n>       raise TypeError('UUID objects are immutable')\nE       TypeError: UUID objects are immutable\n\n../../../../.pyenv/versions/3.10.11/lib/python3.10/uuid.py:277: TypeError"}, "teardown": {"duration": 0.00017755595035851002, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_nonexistent_experiment", "lineno": 89, "outcome": "failed", "keywords": ["test_update_nonexistent_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016188493464142084, "outcome": "passed"}, "call": {"duration": 0.00022564607206732035, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 95, "message": "assert False is None"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 95, "message": "AssertionError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec119f1ae0>\n\n    def test_update_nonexistent_experiment(storage):\n        \"\"\"Test updating an experiment that doesn't exist.\"\"\"\n        experiment = Experiment(name=\"Nonexistent Experiment\")\n        updated = storage.update_experiment(experiment)\n    \n>       assert updated is None\nE       assert False is None\n\ntests/experiment_tracking/test_storage.py:95: AssertionError"}, "teardown": {"duration": 0.00016351707745343447, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_experiment", "lineno": 97, "outcome": "passed", "keywords": ["test_delete_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00024004990700632334, "outcome": "passed"}, "call": {"duration": 0.00013797101564705372, "outcome": "passed"}, "teardown": {"duration": 0.00012554600834846497, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_nonexistent_experiment", "lineno": 106, "outcome": "passed", "keywords": ["test_delete_nonexistent_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00014774396549910307, "outcome": "passed"}, "call": {"duration": 0.00011948100291192532, "outcome": "passed"}, "teardown": {"duration": 0.00012205599341541529, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_list_experiments", "lineno": 114, "outcome": "passed", "keywords": ["test_list_experiments", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019277294632047415, "outcome": "passed"}, "call": {"duration": 0.0001316230045631528, "outcome": "passed"}, "teardown": {"duration": 0.00012163398787379265, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_list_experiments_by_task", "lineno": 127, "outcome": "passed", "keywords": ["test_list_experiments_by_task", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019046105444431305, "outcome": "passed"}, "call": {"duration": 0.00015888898633420467, "outcome": "passed"}, "teardown": {"duration": 0.00012598896864801645, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_experiment_by_name", "lineno": 148, "outcome": "failed", "keywords": ["test_get_experiment_by_name", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002015720820054412, "outcome": "passed"}, "call": {"duration": 0.00012686906848102808, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 152, "message": "AttributeError: 'InMemoryExperimentStorage' object has no attribute 'get_experiment_by_name'"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 152, "message": "AttributeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11967010>\nsample_experiment = Experiment(id=UUID('7418805f-7e18-4755-b9da-a9ed6c5a237f'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 779351), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 779352), runs=[], tags=['test', 'experiment'])\n\n    def test_get_experiment_by_name(storage, sample_experiment):\n        \"\"\"Test retrieving an experiment by name.\"\"\"\n        storage.create_experiment(sample_experiment)\n>       retrieved = storage.get_experiment_by_name(\"Test Experiment\")\nE       AttributeError: 'InMemoryExperimentStorage' object has no attribute 'get_experiment_by_name'\n\ntests/experiment_tracking/test_storage.py:152: AttributeError"}, "teardown": {"duration": 0.000173863023519516, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_run", "lineno": 160, "outcome": "failed", "keywords": ["test_create_run", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002748060505837202, "outcome": "passed"}, "call": {"duration": 0.00013763690367341042, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 164, "message": "TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 164, "message": "TypeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11afba30>\nsample_experiment = Experiment(id=UUID('d82939d4-315d-4634-a443-76375cd3eeae'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 787613), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 787614), runs=[], tags=['test', 'experiment'])\nsample_run = ExperimentRun(id=UUID('750ac9cb-0638-44c5-b01d-e355504a33f4'), experiment_id=UUID('d82939d4-315d-4634-a443-76375cd3eea...e.FLOAT: 'float'>, value=0.1, description=None)], metrics={}, artifacts={}, start_time=None, end_time=None, notes=None)\n\n    def test_create_run(storage, sample_experiment, sample_run):\n        \"\"\"Test creating a run in storage.\"\"\"\n        storage.create_experiment(sample_experiment)\n>       created = storage.create_run(sample_experiment.id, sample_run)\nE       TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given\n\ntests/experiment_tracking/test_storage.py:164: TypeError"}, "teardown": {"duration": 0.0001876159803941846, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_run_nonexistent_experiment", "lineno": 175, "outcome": "failed", "keywords": ["test_create_run_nonexistent_experiment", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002670689718797803, "outcome": "passed"}, "call": {"duration": 0.0001423190115019679, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 179, "message": "TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 179, "message": "TypeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11967190>\nsample_run = ExperimentRun(id=UUID('b61b8a29-8e88-49d3-83f7-ce4c51362f4d'), experiment_id=UUID('f863ca5e-5ef9-4520-a647-cba9dcc001b...e.FLOAT: 'float'>, value=0.1, description=None)], metrics={}, artifacts={}, start_time=None, end_time=None, notes=None)\n\n    def test_create_run_nonexistent_experiment(storage, sample_run):\n        \"\"\"Test creating a run for a non-existent experiment.\"\"\"\n        non_existent_id = uuid4()\n>       created = storage.create_run(non_existent_id, sample_run)\nE       TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given\n\ntests/experiment_tracking/test_storage.py:179: TypeError"}, "teardown": {"duration": 0.00018508301582187414, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_run", "lineno": 183, "outcome": "failed", "keywords": ["test_get_run", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00026840902864933014, "outcome": "passed"}, "call": {"duration": 0.0001394080463796854, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 187, "message": "TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 187, "message": "TypeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11b3c310>\nsample_experiment = Experiment(id=UUID('65f3d87f-9f24-417c-bf41-98f9b0076eb7'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 798165), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 798166), runs=[], tags=['test', 'experiment'])\nsample_run = ExperimentRun(id=UUID('cc640296-8247-4fb9-a52a-2e6d237f037d'), experiment_id=UUID('65f3d87f-9f24-417c-bf41-98f9b0076eb...e.FLOAT: 'float'>, value=0.1, description=None)], metrics={}, artifacts={}, start_time=None, end_time=None, notes=None)\n\n    def test_get_run(storage, sample_experiment, sample_run):\n        \"\"\"Test retrieving a run from storage.\"\"\"\n        storage.create_experiment(sample_experiment)\n>       storage.create_run(sample_experiment.id, sample_run)\nE       TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given\n\ntests/experiment_tracking/test_storage.py:187: TypeError"}, "teardown": {"duration": 0.00018930202350020409, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_run", "lineno": 194, "outcome": "failed", "keywords": ["test_update_run", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002791950246319175, "outcome": "passed"}, "call": {"duration": 0.0001395259751006961, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 198, "message": "TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 198, "message": "TypeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11964c70>\nsample_experiment = Experiment(id=UUID('272949a7-dbc7-46cf-8dbe-dd889061840f'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 803333), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 803334), runs=[], tags=['test', 'experiment'])\nsample_run = ExperimentRun(id=UUID('944d8419-4325-4d25-9eb3-2f50ad15e122'), experiment_id=UUID('272949a7-dbc7-46cf-8dbe-dd889061840...e.FLOAT: 'float'>, value=0.1, description=None)], metrics={}, artifacts={}, start_time=None, end_time=None, notes=None)\n\n    def test_update_run(storage, sample_experiment, sample_run):\n        \"\"\"Test updating a run in storage.\"\"\"\n        storage.create_experiment(sample_experiment)\n>       storage.create_run(sample_experiment.id, sample_run)\nE       TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given\n\ntests/experiment_tracking/test_storage.py:198: TypeError"}, "teardown": {"duration": 0.00018687406554818153, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_nonexistent_run", "lineno": 214, "outcome": "failed", "keywords": ["test_update_nonexistent_run", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016681896522641182, "outcome": "passed"}, "call": {"duration": 0.0002138629788532853, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 220, "message": "assert False is None"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 220, "message": "AssertionError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11b3eec0>\n\n    def test_update_nonexistent_run(storage):\n        \"\"\"Test updating a run that doesn't exist.\"\"\"\n        run = ExperimentRun(experiment_id=uuid4(), run_number=1)\n        updated = storage.update_run(run)\n    \n>       assert updated is None\nE       assert False is None\n\ntests/experiment_tracking/test_storage.py:220: AssertionError"}, "teardown": {"duration": 0.00017195707187056541, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_run", "lineno": 222, "outcome": "failed", "keywords": ["test_delete_run", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002722369972616434, "outcome": "passed"}, "call": {"duration": 0.00013776507694274187, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 226, "message": "TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 226, "message": "TypeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11967850>\nsample_experiment = Experiment(id=UUID('5094e4ce-ef80-48cb-a39b-c5bf0230e6a0'), name='Test Experiment', description='A test experiment', t...3, 17, 59, 813666), updated_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 813667), runs=[], tags=['test', 'experiment'])\nsample_run = ExperimentRun(id=UUID('869639d3-89f4-4082-9581-b0f420c663fa'), experiment_id=UUID('5094e4ce-ef80-48cb-a39b-c5bf0230e6a...e.FLOAT: 'float'>, value=0.1, description=None)], metrics={}, artifacts={}, start_time=None, end_time=None, notes=None)\n\n    def test_delete_run(storage, sample_experiment, sample_run):\n        \"\"\"Test deleting a run from storage.\"\"\"\n        storage.create_experiment(sample_experiment)\n>       storage.create_run(sample_experiment.id, sample_run)\nE       TypeError: InMemoryExperimentStorage.create_run() takes 2 positional arguments but 3 were given\n\ntests/experiment_tracking/test_storage.py:226: TypeError"}, "teardown": {"duration": 0.00018902798183262348, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_nonexistent_run", "lineno": 236, "outcome": "passed", "keywords": ["test_delete_nonexistent_run", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016364699695259333, "outcome": "passed"}, "call": {"duration": 0.00012710108421742916, "outcome": "passed"}, "teardown": {"duration": 0.0001289070351049304, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_create_comparison", "lineno": 244, "outcome": "failed", "keywords": ["test_create_comparison", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020250293891876936, "outcome": "passed"}, "call": {"duration": 0.00012800400145351887, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 249, "message": "AttributeError: 'UUID' object has no attribute 'id'"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 249, "message": "AttributeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec11b3f580>\nsample_comparison = ExperimentComparison(id=UUID('199a7d25-1bc8-41bb-9122-81d59d2f1153'), name='Test Comparison', description='A test comp...eriment_ids=[], run_ids=[], metrics=['accuracy', 'loss'], created_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 819734))\n\n    def test_create_comparison(storage, sample_comparison):\n        \"\"\"Test creating a comparison in storage.\"\"\"\n        created = storage.create_comparison(sample_comparison)\n    \n>       assert created.id == sample_comparison.id\nE       AttributeError: 'UUID' object has no attribute 'id'\n\ntests/experiment_tracking/test_storage.py:249: AttributeError"}, "teardown": {"duration": 0.00017275603022426367, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_get_comparison", "lineno": 254, "outcome": "passed", "keywords": ["test_get_comparison", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021348404698073864, "outcome": "passed"}, "call": {"duration": 0.00012037402484565973, "outcome": "passed"}, "teardown": {"duration": 0.00014114996884018183, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_comparison", "lineno": 264, "outcome": "failed", "keywords": ["test_update_comparison", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019446806982159615, "outcome": "passed"}, "call": {"duration": 0.00013122207019478083, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 273, "message": "AttributeError: 'bool' object has no attribute 'name'"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 273, "message": "AttributeError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec1197c070>\nsample_comparison = ExperimentComparison(id=UUID('0ae42533-6b99-4a7b-ae2a-011ab3ac70ff'), name='Updated Comparison', description='A test c...eriment_ids=[], run_ids=[], metrics=['accuracy', 'loss'], created_at=datetime.datetime(2025, 5, 15, 3, 17, 59, 825742))\n\n    def test_update_comparison(storage, sample_comparison):\n        \"\"\"Test updating a comparison in storage.\"\"\"\n        storage.create_comparison(sample_comparison)\n    \n        # Update the comparison\n        sample_comparison.name = \"Updated Comparison\"\n        updated = storage.update_comparison(sample_comparison)\n    \n>       assert updated.name == \"Updated Comparison\"\nE       AttributeError: 'bool' object has no attribute 'name'\n\ntests/experiment_tracking/test_storage.py:273: AttributeError"}, "teardown": {"duration": 0.00017204205505549908, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_update_nonexistent_comparison", "lineno": 279, "outcome": "failed", "keywords": ["test_update_nonexistent_comparison", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016262696590274572, "outcome": "passed"}, "call": {"duration": 0.00023105402942746878, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_storage.py", "lineno": 285, "message": "assert False is None"}, "traceback": [{"path": "tests/experiment_tracking/test_storage.py", "lineno": 285, "message": "AssertionError"}], "longrepr": "storage = <researchtrack.experiment_tracking.storage.InMemoryExperimentStorage object at 0x7fec12035990>\n\n    def test_update_nonexistent_comparison(storage):\n        \"\"\"Test updating a comparison that doesn't exist.\"\"\"\n        comparison = ExperimentComparison(name=\"Nonexistent Comparison\")\n        updated = storage.update_comparison(comparison)\n    \n>       assert updated is None\nE       assert False is None\n\ntests/experiment_tracking/test_storage.py:285: AssertionError"}, "teardown": {"duration": 0.00016403594054281712, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_comparison", "lineno": 287, "outcome": "passed", "keywords": ["test_delete_comparison", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023652706295251846, "outcome": "passed"}, "call": {"duration": 0.00012590992264449596, "outcome": "passed"}, "teardown": {"duration": 0.00012438197154551744, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_delete_nonexistent_comparison", "lineno": 296, "outcome": "passed", "keywords": ["test_delete_nonexistent_comparison", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00014684500638395548, "outcome": "passed"}, "call": {"duration": 0.00011842802632600069, "outcome": "passed"}, "teardown": {"duration": 0.00011392496526241302, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_storage.py::test_list_comparisons", "lineno": 304, "outcome": "passed", "keywords": ["test_list_comparisons", "test_storage.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019109202548861504, "outcome": "passed"}, "call": {"duration": 0.00013326096814125776, "outcome": "passed"}, "teardown": {"duration": 0.00012362597044557333, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_parameter_table", "lineno": 130, "outcome": "failed", "keywords": ["test_format_parameter_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00028131192084401846, "outcome": "passed"}, "call": {"duration": 0.00022284698206931353, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_visualizer.py", "lineno": 138, "message": "AssertionError: assert '| dropout | float | 0.5 | |' in '| Parameter | Type | Value | Description |\\n| --- | --- | --- | --- |\\n| learning_rate | float | 0.001 | Learning rate for optimizer |\\n| batch_size | integer | 32 | Training batch size |\\n| dropout | float | 0.5 |  |'"}, "traceback": [{"path": "tests/experiment_tracking/test_visualizer.py", "lineno": 138, "message": "AssertionError"}], "longrepr": "visualizer = <researchtrack.experiment_tracking.visualizer.ExperimentVisualizer object at 0x7fec11c39930>\nsample_run = ExperimentRun(id=UUID('2f1de323-b63e-48b8-b627-ac5eb2f63909'), experiment_id=UUID('4b6f1eaa-0ecd-4c66-8263-abbea780adb...e(2023, 1, 1, 10, 0), end_time=datetime.datetime(2023, 1, 1, 10, 30), notes='This run tested a modified architecture.')\n\n    def test_format_parameter_table(visualizer, sample_run):\n        \"\"\"Test formatting parameters as a markdown table.\"\"\"\n        table = visualizer.format_parameter_table(sample_run)\n    \n        assert \"| Parameter | Type | Value | Description |\" in table\n        assert \"| learning_rate | float | 0.001 | Learning rate for optimizer |\" in table\n        assert \"| batch_size | integer | 32 | Training batch size |\" in table\n>       assert \"| dropout | float | 0.5 | |\" in table\nE       AssertionError: assert '| dropout | float | 0.5 | |' in '| Parameter | Type | Value | Description |\\n| --- | --- | --- | --- |\\n| learning_rate | float | 0.001 | Learning rate for optimizer |\\n| batch_size | integer | 32 | Training batch size |\\n| dropout | float | 0.5 |  |'\n\ntests/experiment_tracking/test_visualizer.py:138: AssertionError"}, "teardown": {"duration": 0.00017180596478283405, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_parameter_table", "lineno": 140, "outcome": "passed", "keywords": ["test_format_empty_parameter_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016776006668806076, "outcome": "passed"}, "call": {"duration": 0.00014342693611979485, "outcome": "passed"}, "teardown": {"duration": 0.00013950199354439974, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_metric_table", "lineno": 148, "outcome": "passed", "keywords": ["test_format_metric_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000246918061748147, "outcome": "passed"}, "call": {"duration": 0.0001509200083091855, "outcome": "passed"}, "teardown": {"duration": 0.00012870097998529673, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_metric_table", "lineno": 160, "outcome": "passed", "keywords": ["test_format_empty_metric_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016937602777034044, "outcome": "passed"}, "call": {"duration": 0.00013574701733887196, "outcome": "passed"}, "teardown": {"duration": 0.00011510704644024372, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_artifact_table", "lineno": 168, "outcome": "passed", "keywords": ["test_format_artifact_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002337839687243104, "outcome": "passed"}, "call": {"duration": 0.0001204970758408308, "outcome": "passed"}, "teardown": {"duration": 0.00011994095984846354, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_artifact_table", "lineno": 177, "outcome": "passed", "keywords": ["test_format_empty_artifact_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001413300633430481, "outcome": "passed"}, "call": {"duration": 0.00012658594641834497, "outcome": "passed"}, "teardown": {"duration": 0.00011504499707370996, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_run_summary", "lineno": 185, "outcome": "passed", "keywords": ["test_format_run_summary", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023178290575742722, "outcome": "passed"}, "call": {"duration": 0.00018942099995911121, "outcome": "passed"}, "teardown": {"duration": 0.00013455410953611135, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_experiment_summary", "lineno": 210, "outcome": "failed", "keywords": ["test_format_experiment_summary", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.000252859084866941, "outcome": "passed"}, "call": {"duration": 0.00026705500204116106, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_visualizer.py", "lineno": 227, "message": "AssertionError: assert '| 3 | running | 2023-01-01 12:00:00 | - | |' in '# Experiment: Test Experiment\\n\\nA test experiment for neural network architectures\\n\\n**Created**: 2023-01-01 09:00:...eted | 2023-01-01 11:00:00 | 2700.00s | accuracy: 0.9500, loss: 0.0500 |\\n| 3 | running | 2023-01-01 12:00:00 | - |  |'"}, "traceback": [{"path": "tests/experiment_tracking/test_visualizer.py", "lineno": 227, "message": "AssertionError"}], "longrepr": "visualizer = <researchtrack.experiment_tracking.visualizer.ExperimentVisualizer object at 0x7fec11e1ec50>\nsample_experiment = Experiment(id=UUID('32520ffc-3878-436e-adcf-32597c5e6d96'), name='Test Experiment', description='A test experiment for...me=datetime.datetime(2023, 1, 1, 12, 0), end_time=None, notes=None)], tags=['test', 'neural-network', 'deep-learning'])\n\n    def test_format_experiment_summary(visualizer, sample_experiment):\n        \"\"\"Test formatting a complete experiment summary.\"\"\"\n        summary = visualizer.format_experiment_summary(sample_experiment)\n    \n        # Check for all major sections\n        assert \"# Experiment: Test Experiment\" in summary\n        assert \"A test experiment for neural network architectures\" in summary\n        assert \"**Created**: 2023-01-01 09:00:00\" in summary\n        assert \"**Last Updated**: 2023-01-01 11:00:00\" in summary\n        assert \"**Tags**: test, neural-network, deep-learning\" in summary\n        assert f\"**Runs ({len(sample_experiment.runs)})**\" in summary\n    \n        # Check for run information in the table\n        assert \"| Run # | Status | Start Time | Duration | Key Metrics |\" in summary\n        assert \"| 1 | completed | 2023-01-01 10:00:00 | 1800.00s | accuracy: 0.9200, loss: 0.0800 |\" in summary\n        assert \"| 2 | completed | 2023-01-01 11:00:00 | 2700.00s | accuracy: 0.9500, loss: 0.0500 |\" in summary\n>       assert \"| 3 | running | 2023-01-01 12:00:00 | - | |\" in summary\nE       AssertionError: assert '| 3 | running | 2023-01-01 12:00:00 | - | |' in '# Experiment: Test Experiment\\n\\nA test experiment for neural network architectures\\n\\n**Created**: 2023-01-01 09:00:...eted | 2023-01-01 11:00:00 | 2700.00s | accuracy: 0.9500, loss: 0.0500 |\\n| 3 | running | 2023-01-01 12:00:00 | - |  |'\n\ntests/experiment_tracking/test_visualizer.py:227: AssertionError"}, "teardown": {"duration": 0.00017546198796480894, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_comparison_table", "lineno": 229, "outcome": "failed", "keywords": ["test_format_comparison_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001660430571064353, "outcome": "passed"}, "call": {"duration": 0.0002738020848482847, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/experiment_tracking/test_visualizer.py", "lineno": 258, "message": "AssertionError: assert '| Run/Experiment | accuracy | f1 | loss | precision |' in '|Run/Experiment|accuracy|f1|loss|precision|\\n|---|---|---|---|---|\\n|ExperimentA:Run1|0.92|0.91|0.08|-|\\n|ExperimentA:Run2|0.95|0.94|0.05|-|\\n|ExperimentB:Run1|0.90|-|0.10|0.89|\\n|ExperimentB:Best|0.93|-|0.07|0.92|'\n +  where '|Run/Experiment|accuracy|f1|loss|precision|\\n|---|---|---|---|---|\\n|ExperimentA:Run1|0.92|0.91|0.08|-|\\n|ExperimentA:Run2|0.95|0.94|0.05|-|\\n|ExperimentB:Run1|0.90|-|0.10|0.89|\\n|ExperimentB:Best|0.93|-|0.07|0.92|' = <built-in method replace of str object at 0x7fec11fea790>(' ', '')\n +    where <built-in method replace of str object at 0x7fec11fea790> = '| Run/Experiment | accuracy | f1 | loss | precision |\\n| --- | --- | --- | --- | --- |\\n| Experiment A:Run 1 | 0.92 |...5 | 0.94 | 0.05 | - |\\n| Experiment B:Run 1 | 0.90 | - | 0.10 | 0.89 |\\n| Experiment B:Best | 0.93 | - | 0.07 | 0.92 |'.replace"}, "traceback": [{"path": "tests/experiment_tracking/test_visualizer.py", "lineno": 258, "message": "AssertionError"}], "longrepr": "visualizer = <researchtrack.experiment_tracking.visualizer.ExperimentVisualizer object at 0x7fec11a371f0>\n\n    def test_format_comparison_table(visualizer):\n        \"\"\"Test formatting a comparison table of multiple runs/experiments.\"\"\"\n        comparison_data = {\n            \"Experiment A:Run 1\": {\n                \"accuracy\": 0.92,\n                \"loss\": 0.08,\n                \"f1\": 0.91\n            },\n            \"Experiment A:Run 2\": {\n                \"accuracy\": 0.95,\n                \"loss\": 0.05,\n                \"f1\": 0.94\n            },\n            \"Experiment B:Run 1\": {\n                \"accuracy\": 0.90,\n                \"loss\": 0.10,\n                \"precision\": 0.89\n            },\n            \"Experiment B:Best\": {\n                \"accuracy\": 0.93,\n                \"loss\": 0.07,\n                \"precision\": 0.92\n            }\n        }\n    \n        table = visualizer.format_comparison_table(comparison_data)\n    \n        # Check for table header and all metrics\n>       assert \"| Run/Experiment | accuracy | f1 | loss | precision |\" in table.replace(\" \", \"\")\nE       AssertionError: assert '| Run/Experiment | accuracy | f1 | loss | precision |' in '|Run/Experiment|accuracy|f1|loss|precision|\\n|---|---|---|---|---|\\n|ExperimentA:Run1|0.92|0.91|0.08|-|\\n|ExperimentA:Run2|0.95|0.94|0.05|-|\\n|ExperimentB:Run1|0.90|-|0.10|0.89|\\n|ExperimentB:Best|0.93|-|0.07|0.92|'\nE        +  where '|Run/Experiment|accuracy|f1|loss|precision|\\n|---|---|---|---|---|\\n|ExperimentA:Run1|0.92|0.91|0.08|-|\\n|ExperimentA:Run2|0.95|0.94|0.05|-|\\n|ExperimentB:Run1|0.90|-|0.10|0.89|\\n|ExperimentB:Best|0.93|-|0.07|0.92|' = <built-in method replace of str object at 0x7fec11fea790>(' ', '')\nE        +    where <built-in method replace of str object at 0x7fec11fea790> = '| Run/Experiment | accuracy | f1 | loss | precision |\\n| --- | --- | --- | --- | --- |\\n| Experiment A:Run 1 | 0.92 |...5 | 0.94 | 0.05 | - |\\n| Experiment B:Run 1 | 0.90 | - | 0.10 | 0.89 |\\n| Experiment B:Best | 0.93 | - | 0.07 | 0.92 |'.replace\n\ntests/experiment_tracking/test_visualizer.py:258: AssertionError"}, "teardown": {"duration": 0.00016568007413297892, "outcome": "passed"}}, {"nodeid": "tests/experiment_tracking/test_visualizer.py::test_format_empty_comparison_table", "lineno": 284, "outcome": "passed", "keywords": ["test_format_empty_comparison_table", "test_visualizer.py", "experiment_tracking", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016167701687663794, "outcome": "passed"}, "call": {"duration": 0.0001283109886571765, "outcome": "passed"}, "teardown": {"duration": 0.000123525969684124, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_document_default", "lineno": 51, "outcome": "passed", "keywords": ["test_format_document_default", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00046082399785518646, "outcome": "passed"}, "call": {"duration": 0.00020174100063741207, "outcome": "passed"}, "teardown": {"duration": 0.00012696301564574242, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_document_nature", "lineno": 89, "outcome": "passed", "keywords": ["test_format_document_nature", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00026979693211615086, "outcome": "passed"}, "call": {"duration": 0.0003021230222657323, "outcome": "passed"}, "teardown": {"duration": 0.00012946303468197584, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_document_science", "lineno": 100, "outcome": "passed", "keywords": ["test_format_document_science", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00025278504472225904, "outcome": "passed"}, "call": {"duration": 0.00014892895705997944, "outcome": "passed"}, "teardown": {"duration": 0.00012009695637971163, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_document_plos", "lineno": 109, "outcome": "passed", "keywords": ["test_format_document_plos", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00024137599393725395, "outcome": "passed"}, "call": {"duration": 0.0001468320842832327, "outcome": "passed"}, "teardown": {"duration": 0.00012324901763349771, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_section", "lineno": 118, "outcome": "passed", "keywords": ["test_format_section", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001438390463590622, "outcome": "passed"}, "call": {"duration": 0.0001433839788660407, "outcome": "passed"}, "teardown": {"duration": 0.00011170597281306982, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_text_block", "lineno": 133, "outcome": "passed", "keywords": ["test_format_text_block", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001410599797964096, "outcome": "passed"}, "call": {"duration": 0.00013823993504047394, "outcome": "passed"}, "teardown": {"duration": 0.00011688994709402323, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_image_block", "lineno": 141, "outcome": "passed", "keywords": ["test_format_image_block", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00014231994282454252, "outcome": "passed"}, "call": {"duration": 0.00012337893713265657, "outcome": "passed"}, "teardown": {"duration": 0.00011075194925069809, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_table_block", "lineno": 153, "outcome": "passed", "keywords": ["test_format_table_block", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00015972100663930178, "outcome": "passed"}, "call": {"duration": 0.00013538997154682875, "outcome": "passed"}, "teardown": {"duration": 0.00011238106526434422, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_code_block", "lineno": 171, "outcome": "passed", "keywords": ["test_format_code_block", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00014052493497729301, "outcome": "passed"}, "call": {"duration": 0.0001225629821419716, "outcome": "passed"}, "teardown": {"duration": 0.00011326198000460863, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_equation_block", "lineno": 186, "outcome": "passed", "keywords": ["test_format_equation_block", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001370330573990941, "outcome": "passed"}, "call": {"duration": 0.00012139196041971445, "outcome": "passed"}, "teardown": {"duration": 0.0001093780156224966, "outcome": "passed"}}, {"nodeid": "tests/export/test_formatter.py::test_format_citation_block", "lineno": 194, "outcome": "passed", "keywords": ["test_format_citation_block", "test_formatter.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001383370254188776, "outcome": "passed"}, "call": {"duration": 0.0001234880182892084, "outcome": "passed"}, "teardown": {"duration": 0.00011369702406227589, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_document_creation", "lineno": 10, "outcome": "passed", "keywords": ["test_document_creation", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00012892496306449175, "outcome": "passed"}, "call": {"duration": 0.00014278700109571218, "outcome": "passed"}, "teardown": {"duration": 9.8232994787395e-05, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_section_creation", "lineno": 32, "outcome": "passed", "keywords": ["test_section_creation", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.851704817265272e-05, "outcome": "passed"}, "call": {"duration": 0.0001358570298179984, "outcome": "passed"}, "teardown": {"duration": 0.00010342802852392197, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_text_block", "lineno": 49, "outcome": "passed", "keywords": ["test_text_block", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.799608960747719e-05, "outcome": "passed"}, "call": {"duration": 0.00012100802268832922, "outcome": "passed"}, "teardown": {"duration": 9.801506530493498e-05, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_image_block", "lineno": 58, "outcome": "passed", "keywords": ["test_image_block", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011051399633288383, "outcome": "passed"}, "call": {"duration": 0.00012593797873705626, "outcome": "passed"}, "teardown": {"duration": 9.787303861230612e-05, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_table_block", "lineno": 73, "outcome": "passed", "keywords": ["test_table_block", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.747000876814127e-05, "outcome": "passed"}, "call": {"duration": 0.00012513890396803617, "outcome": "passed"}, "teardown": {"duration": 0.00010044197551906109, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_code_block", "lineno": 93, "outcome": "passed", "keywords": ["test_code_block", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.760400280356407e-05, "outcome": "passed"}, "call": {"duration": 0.00012021500151604414, "outcome": "passed"}, "teardown": {"duration": 0.00011656701099127531, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_equation_block", "lineno": 107, "outcome": "passed", "keywords": ["test_equation_block", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010533991735428572, "outcome": "passed"}, "call": {"duration": 0.00012393994256854057, "outcome": "passed"}, "teardown": {"duration": 9.856303222477436e-05, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_citation_block", "lineno": 117, "outcome": "passed", "keywords": ["test_citation_block", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.710702579468489e-05, "outcome": "passed"}, "call": {"duration": 0.00012071395758539438, "outcome": "passed"}, "teardown": {"duration": 9.768095333129168e-05, "outcome": "passed"}}, {"nodeid": "tests/export/test_models.py::test_document_with_sections_and_blocks", "lineno": 129, "outcome": "passed", "keywords": ["test_document_with_sections_and_blocks", "test_models.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.68339154496789e-05, "outcome": "passed"}, "call": {"duration": 0.00015525496564805508, "outcome": "passed"}, "teardown": {"duration": 0.00010039308108389378, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_create_document", "lineno": 22, "outcome": "passed", "keywords": ["test_create_document", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021858001127839088, "outcome": "passed"}, "call": {"duration": 0.00014563603326678276, "outcome": "passed"}, "teardown": {"duration": 0.0001315729459747672, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_get_document", "lineno": 42, "outcome": "passed", "keywords": ["test_get_document", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001877029426395893, "outcome": "passed"}, "call": {"duration": 0.00013659102842211723, "outcome": "passed"}, "teardown": {"duration": 0.00012737000361084938, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_update_document", "lineno": 52, "outcome": "passed", "keywords": ["test_update_document", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018998002633452415, "outcome": "passed"}, "call": {"duration": 0.0001491470029577613, "outcome": "passed"}, "teardown": {"duration": 0.00012757699005305767, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_delete_document", "lineno": 65, "outcome": "passed", "keywords": ["test_delete_document", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001821770565584302, "outcome": "passed"}, "call": {"duration": 0.00022404699120670557, "outcome": "passed"}, "teardown": {"duration": 0.0001336350105702877, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_add_section", "lineno": 74, "outcome": "passed", "keywords": ["test_add_section", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017928809393197298, "outcome": "passed"}, "call": {"duration": 0.00014543405268341303, "outcome": "passed"}, "teardown": {"duration": 0.00012849702034145594, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_add_section_with_order", "lineno": 88, "outcome": "passed", "keywords": ["test_add_section_with_order", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017212203238159418, "outcome": "passed"}, "call": {"duration": 0.00015460699796676636, "outcome": "passed"}, "teardown": {"duration": 0.00013346399646252394, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_add_content_block", "lineno": 105, "outcome": "passed", "keywords": ["test_add_content_block", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017355091404169798, "outcome": "passed"}, "call": {"duration": 0.0001492719165980816, "outcome": "passed"}, "teardown": {"duration": 0.00014509190805256367, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_create_content_blocks", "lineno": 122, "outcome": "passed", "keywords": ["test_create_content_blocks", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018587301019579172, "outcome": "passed"}, "call": {"duration": 0.00016194593627005816, "outcome": "passed"}, "teardown": {"duration": 0.00012793706264346838, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_generate_markdown", "lineno": 163, "outcome": "passed", "keywords": ["test_generate_markdown", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018753705080598593, "outcome": "passed"}, "call": {"duration": 0.00016055407468229532, "outcome": "passed"}, "teardown": {"duration": 0.00012957293074578047, "outcome": "passed"}}, {"nodeid": "tests/export/test_service.py::test_export_to_file", "lineno": 183, "outcome": "passed", "keywords": ["test_export_to_file", "test_service.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018558499868959188, "outcome": "passed"}, "call": {"duration": 0.0008877979125827551, "outcome": "passed"}, "teardown": {"duration": 0.00014404498506337404, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_create_document", "lineno": 30, "outcome": "passed", "keywords": ["test_create_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022923597134649754, "outcome": "passed"}, "call": {"duration": 0.0001281070290133357, "outcome": "passed"}, "teardown": {"duration": 0.00012654601596295834, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_get_document", "lineno": 40, "outcome": "passed", "keywords": ["test_get_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020061200484633446, "outcome": "passed"}, "call": {"duration": 0.0001132990000769496, "outcome": "passed"}, "teardown": {"duration": 0.00011911091860383749, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_get_nonexistent_document", "lineno": 50, "outcome": "passed", "keywords": ["test_get_nonexistent_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021980097517371178, "outcome": "passed"}, "call": {"duration": 0.00013897998724132776, "outcome": "passed"}, "teardown": {"duration": 0.0001250590430572629, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_update_document", "lineno": 59, "outcome": "passed", "keywords": ["test_update_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022135896142572165, "outcome": "passed"}, "call": {"duration": 0.00012048007920384407, "outcome": "passed"}, "teardown": {"duration": 0.00012372690252959728, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_update_nonexistent_document", "lineno": 72, "outcome": "passed", "keywords": ["test_update_nonexistent_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00015365600120276213, "outcome": "passed"}, "call": {"duration": 0.0001278039999306202, "outcome": "passed"}, "teardown": {"duration": 0.00011350109707564116, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_delete_document", "lineno": 80, "outcome": "passed", "keywords": ["test_delete_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002165660262107849, "outcome": "passed"}, "call": {"duration": 0.00011635699775069952, "outcome": "passed"}, "teardown": {"duration": 0.0001163179986178875, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_delete_nonexistent_document", "lineno": 89, "outcome": "passed", "keywords": ["test_delete_nonexistent_document", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001423630164936185, "outcome": "passed"}, "call": {"duration": 0.00012068694923073053, "outcome": "passed"}, "teardown": {"duration": 0.00011909904424101114, "outcome": "passed"}}, {"nodeid": "tests/export/test_storage.py::test_list_documents", "lineno": 98, "outcome": "passed", "keywords": ["test_list_documents", "test_storage.py", "export", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019572593737393618, "outcome": "passed"}, "call": {"duration": 0.00012911600060760975, "outcome": "passed"}, "teardown": {"duration": 0.00012089905794709921, "outcome": "passed"}}, {"nodeid": "tests/integration/test_multitask_workflow.py::test_multitask_research_project", "lineno": 39, "outcome": "failed", "keywords": ["test_multitask_research_project", "test_multitask_workflow.py", "integration", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0003473409451544285, "outcome": "passed"}, "call": {"duration": 0.0004243269795551896, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/integration/test_multitask_workflow.py", "lineno": 141, "message": "AttributeError: 'DatasetService' object has no attribute 'add_derivation'"}, "traceback": [{"path": "tests/integration/test_multitask_workflow.py", "lineno": 141, "message": "AttributeError"}], "longrepr": "services = {'bibliography': <researchtrack.bibliography.service.BibliographyService object at 0x7fec11a88040>, 'dataset': <resear...ec11a8bf10>, 'experiment': <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec11a8afb0>, ...}\n\n    def test_multitask_research_project(services):\n        \"\"\"\n        Test a research project with multiple interconnected tasks.\n    \n        This test simulates a complex research project with:\n        1. A main research task with subtasks\n        2. Shared bibliographic references\n        3. Datasets that evolve across tasks\n        4. Multiple experiment runs with comparisons\n        5. Consolidated reporting\n        \"\"\"\n        # 1. Create main research task\n        main_task = services[\"task\"].create_task(\n            title=\"Improving NLP Models for Scientific Literature\",\n            description=\"Research project to improve NLP models for scientific literature analysis\",\n            tags=[\"nlp\", \"science\", \"literature\"]\n        )\n    \n        # Create subtasks\n        data_task = services[\"task\"].create_task(\n            title=\"Data Collection and Preprocessing\",\n            description=\"Collect and preprocess scientific papers dataset\",\n            parent_id=main_task.id,\n            tags=[\"data\", \"preprocessing\"]\n        )\n    \n        model_task = services[\"task\"].create_task(\n            title=\"Model Architecture Development\",\n            description=\"Develop specialized NLP model architectures\",\n            parent_id=main_task.id,\n            tags=[\"model\", \"architecture\"]\n        )\n    \n        eval_task = services[\"task\"].create_task(\n            title=\"Model Evaluation\",\n            description=\"Evaluate model performance on various scientific domains\",\n            parent_id=main_task.id,\n            tags=[\"evaluation\", \"metrics\"]\n        )\n    \n        # 2. Add shared bibliographic references\n        ref1 = services[\"bibliography\"].create_reference(\n            title=\"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n            authors=[\"Devlin, Jacob\", \"Chang, Ming-Wei\", \"Lee, Kenton\", \"Toutanova, Kristina\"],\n            year=2019,\n            venue=\"NAACL-HLT\",\n            doi=\"10.18653/v1/N19-1423\"\n        )\n    \n        ref2 = services[\"bibliography\"].create_reference(\n            title=\"SciBERT: A Pretrained Language Model for Scientific Text\",\n            authors=[\"Beltagy, Iz\", \"Lo, Kyle\", \"Cohan, Arman\"],\n            year=2019,\n            venue=\"EMNLP-IJCNLP\",\n            doi=\"10.18653/v1/D19-1371\"\n        )\n    \n        ref3 = services[\"bibliography\"].create_reference(\n            title=\"Don't Stop Pretraining: Adapt Language Models to Domains and Tasks\",\n            authors=[\"Gururangan, Suchin\", \"Marasovi\u0107, Ana\", \"Swayamdipta, Swabha\"],\n            year=2020,\n            venue=\"ACL\"\n        )\n    \n        # Link references to tasks\n        # Main task gets all references\n        for ref_id in [ref1.id, ref2.id, ref3.id]:\n            services[\"task\"].add_reference_to_task(main_task.id, ref_id)\n    \n        # Subtasks get relevant references\n        services[\"task\"].add_reference_to_task(data_task.id, ref3.id)\n        services[\"task\"].add_reference_to_task(model_task.id, ref1.id)\n        services[\"task\"].add_reference_to_task(model_task.id, ref2.id)\n        services[\"task\"].add_reference_to_task(eval_task.id, ref2.id)\n    \n        # 3. Create datasets that evolve across tasks\n        raw_dataset = services[\"dataset\"].create_dataset(\n            name=\"Scientific Papers Corpus\",\n            description=\"Raw corpus of scientific papers from various domains\",\n            location=\"/data/raw/scientific_papers\"\n        )\n    \n        # Link to data collection task\n        services[\"task\"].add_dataset_to_task(data_task.id, raw_dataset.id)\n    \n        # Create initial version\n        raw_v1 = services[\"dataset\"].create_version(\n            dataset_id=raw_dataset.id,\n            version_number=\"1.0\",\n            description=\"Initial data collection with 10,000 papers\",\n            location=\"/data/raw/scientific_papers/v1\"\n        )\n    \n        # Create processed dataset (derived from raw dataset)\n        processed_dataset = services[\"dataset\"].create_dataset(\n            name=\"Processed Scientific Papers\",\n            description=\"Preprocessed corpus of scientific papers\",\n            location=\"/data/processed/scientific_papers\"\n        )\n    \n        # Link datasets with provenance\n>       services[\"dataset\"].add_derivation(\n            derived_dataset_id=processed_dataset.id,\n            source_dataset_id=raw_dataset.id,\n            transformation=\"Tokenization, cleaning, and sentence splitting\"\n        )\nE       AttributeError: 'DatasetService' object has no attribute 'add_derivation'\n\ntests/integration/test_multitask_workflow.py:141: AttributeError"}, "teardown": {"duration": 0.00017849600408226252, "outcome": "passed"}}, {"nodeid": "tests/integration/test_research_workflow.py::test_complete_research_workflow", "lineno": 39, "outcome": "passed", "keywords": ["test_complete_research_workflow", "test_research_workflow.py", "integration", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019169494044035673, "outcome": "passed"}, "call": {"duration": 0.0006472619716078043, "outcome": "passed"}, "teardown": {"duration": 0.00013602105900645256, "outcome": "passed"}}, {"nodeid": "tests/performance/test_bibliography_performance.py::TestBibliographyPerformance::test_large_bibliography_operations", "lineno": 23, "outcome": "passed", "keywords": ["test_large_bibliography_operations", "TestBibliographyPerformance", "test_bibliography_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0003629070706665516, "outcome": "passed"}, "call": {"duration": 0.19684005004819483, "outcome": "passed"}, "teardown": {"duration": 0.00019357504788786173, "outcome": "passed"}}, {"nodeid": "tests/performance/test_bibliography_performance.py::TestBibliographyPerformance::test_task_reference_link_performance", "lineno": 160, "outcome": "passed", "keywords": ["test_task_reference_link_performance", "TestBibliographyPerformance", "test_bibliography_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023505196440964937, "outcome": "passed"}, "call": {"duration": 1.388912288006395, "outcome": "passed"}, "teardown": {"duration": 0.0011671690735965967, "outcome": "passed"}}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_dataset_operations_performance", "lineno": 20, "outcome": "passed", "keywords": ["test_dataset_operations_performance", "TestDatasetVersioningPerformance", "test_dataset_versioning_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.001055981032550335, "outcome": "passed"}, "call": {"duration": 0.0007396349683403969, "outcome": "passed"}, "teardown": {"duration": 0.00017354602459818125, "outcome": "passed"}}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_handle_large_dataset_catalog", "lineno": 57, "outcome": "passed", "keywords": ["test_handle_large_dataset_catalog", "TestDatasetVersioningPerformance", "test_dataset_versioning_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0002120329299941659, "outcome": "passed"}, "call": {"duration": 0.110072311013937, "outcome": "passed"}, "teardown": {"duration": 0.00019237003289163113, "outcome": "passed"}}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_handle_100gb_dataset_metadata", "lineno": 110, "outcome": "passed", "keywords": ["test_handle_100gb_dataset_metadata", "TestDatasetVersioningPerformance", "test_dataset_versioning_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00023232807870954275, "outcome": "passed"}, "call": {"duration": 0.0005937298992648721, "outcome": "passed"}, "teardown": {"duration": 0.00015575997531414032, "outcome": "passed"}}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_complex_transformation_chain_performance", "lineno": 166, "outcome": "passed", "keywords": ["test_complex_transformation_chain_performance", "TestDatasetVersioningPerformance", "test_dataset_versioning_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022013497073203325, "outcome": "passed"}, "call": {"duration": 0.001080521964468062, "outcome": "passed"}, "teardown": {"duration": 0.0001611979678273201, "outcome": "passed"}}, {"nodeid": "tests/performance/test_dataset_versioning_performance.py::TestDatasetVersioningPerformance::test_task_dataset_link_performance", "lineno": 237, "outcome": "failed", "keywords": ["test_task_dataset_link_performance", "TestDatasetVersioningPerformance", "test_dataset_versioning_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018432596698403358, "outcome": "passed"}, "call": {"duration": 0.05917972594033927, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/performance/test_dataset_versioning_performance.py", "lineno": 305, "message": "IndexError: list index out of range"}, "traceback": [{"path": "tests/performance/test_dataset_versioning_performance.py", "lineno": 305, "message": "IndexError"}], "longrepr": "self = <tests.performance.test_dataset_versioning_performance.TestDatasetVersioningPerformance object at 0x7fec11cc2320>\n\n    def test_task_dataset_link_performance(self):\n        \"\"\"Test performance with many task-dataset links.\"\"\"\n        # Create datasets and versions\n        dataset_ids = []\n        version_ids = []\n    \n        for i in range(10):\n            dataset_id = self.service.create_dataset(\n                name=f\"Dataset {i}\",\n                format=DatasetFormat.CSV,\n                storage_type=DatasetStorageType.LOCAL,\n                location=f\"/path/to/data_{i}.csv\",\n            )\n            dataset_ids.append(dataset_id)\n    \n            # Create 5 versions for each dataset\n            for j in range(5):\n                version_id = self.service.create_dataset_version(\n                    dataset_id=dataset_id,\n                    version_number=f\"1.{j}.0\",\n                    location=f\"/path/to/versions/dataset_{i}/1.{j}.0/data.csv\",\n                )\n                version_ids.append(version_id)\n    \n        # Create 100 task IDs\n        task_ids = [uuid4() for _ in range(100)]\n    \n        # Create links (each task uses 5-10 dataset versions)\n        link_ids = []\n    \n        start_time = time.time()\n        for i, task_id in enumerate(task_ids):\n            # Determine how many versions for this task\n            num_versions = 5 + (i % 6)  # 5-10 versions\n    \n            for j in range(num_versions):\n                # Pick a version (ensure distribution across all versions)\n                version_index = (i * 7 + j * 13) % len(version_ids)\n                version_id = version_ids[version_index]\n    \n                # Create the link\n                usage_type = \"input\" if j < 2 else \"reference\" if j < 5 else \"output\"\n                link_id = self.service.link_task_to_dataset_version(\n                    task_id=task_id,\n                    dataset_version_id=version_id,\n                    usage_type=usage_type,\n                    description=f\"Link {i}-{j} description\",\n                )\n                link_ids.append(link_id)\n    \n        link_creation_time = time.time() - start_time\n        avg_link_creation_time = link_creation_time / len(link_ids)\n    \n        # Test querying links\n        query_times = []\n        for i in range(20):  # Test with 20 random tasks\n            task_id = task_ids[i * 5]\n    \n            start_time = time.time()\n            versions = self.service.get_dataset_versions_by_task(task_id)\n            query_times.append(time.time() - start_time)\n    \n            start_time = time.time()\n            links = self.service.get_links_by_task(task_id)\n            query_times.append(time.time() - start_time)\n    \n        for i in range(20):  # Test with 20 random versions\n>           version_id = version_ids[i * 10]\nE           IndexError: list index out of range\n\ntests/performance/test_dataset_versioning_performance.py:305: IndexError"}, "teardown": {"duration": 0.00019163009710609913, "outcome": "passed"}}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_environment_operations_performance", "lineno": 21, "outcome": "passed", "keywords": ["test_environment_operations_performance", "TestEnvironmentPerformance", "test_environment_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022927892860025167, "outcome": "passed"}, "call": {"duration": 0.00025592290330678225, "outcome": "passed"}, "teardown": {"duration": 0.00015250395517796278, "outcome": "passed"}}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_environment_snapshot_generation_time", "lineno": 57, "outcome": "passed", "keywords": ["test_environment_snapshot_generation_time", "TestEnvironmentPerformance", "test_environment_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018816196825355291, "outcome": "passed"}, "call": {"duration": 0.08437964704353362, "outcome": "passed"}, "teardown": {"duration": 0.0001697799889370799, "outcome": "passed"}}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_large_environment_catalog_performance", "lineno": 82, "outcome": "passed", "keywords": ["test_large_environment_catalog_performance", "TestEnvironmentPerformance", "test_environment_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020112702623009682, "outcome": "passed"}, "call": {"duration": 0.003217417048290372, "outcome": "passed"}, "teardown": {"duration": 0.00014399108476936817, "outcome": "passed"}}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_complex_environment_performance", "lineno": 161, "outcome": "passed", "keywords": ["test_complex_environment_performance", "TestEnvironmentPerformance", "test_environment_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00021564203780144453, "outcome": "passed"}, "call": {"duration": 0.001947027980349958, "outcome": "passed"}, "teardown": {"duration": 0.00016992900054901838, "outcome": "passed"}}, {"nodeid": "tests/performance/test_environment_performance.py::TestEnvironmentPerformance::test_task_environment_link_performance", "lineno": 211, "outcome": "passed", "keywords": ["test_task_environment_link_performance", "TestEnvironmentPerformance", "test_environment_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019376794807612896, "outcome": "passed"}, "call": {"duration": 0.006976476986892521, "outcome": "passed"}, "teardown": {"duration": 0.00013736903201788664, "outcome": "passed"}}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_experiment_creation_performance", "lineno": 114, "outcome": "failed", "keywords": ["test_experiment_creation_performance", "test_experiment_tracking_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00020280200988054276, "outcome": "passed"}, "call": {"duration": 0.0004493769956752658, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError: 'bool' object has no attribute 'id'"}, "traceback": [{"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 119, "message": ""}, {"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "experiment_service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc81f0>\n\n    def test_experiment_creation_performance(experiment_service):\n        \"\"\"Test the performance of creating an experiment with many runs.\"\"\"\n        start_time = time.time()\n    \n>       experiment, runs = create_experiment_with_runs(\n            experiment_service,\n            num_runs=20,\n            params_per_run=10,\n            metrics_per_run=10\n        )\n\ntests/performance/test_experiment_tracking_performance.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc81f0>, num_runs = 20\nparams_per_run = 10, metrics_per_run = 10\n\n    def create_experiment_with_runs(service, num_runs=10, params_per_run=5, metrics_per_run=5):\n        \"\"\"Create an experiment with multiple runs for performance testing.\"\"\"\n        experiment = service.create_experiment(\n            name=f\"Performance Test Experiment with {num_runs} runs\",\n            description=\"Experiment created for performance testing\",\n            tags=[\"performance\", \"test\", \"benchmark\"]\n        )\n    \n        runs = []\n    \n        # Create multiple runs with parameters and metrics\n        for i in range(num_runs):\n            # Create parameters\n            parameters = []\n            for _ in range(params_per_run):\n                param_data = create_random_parameter()\n                param = service.add_parameter(\n                    name=param_data[\"name\"],\n                    type=param_data[\"type\"],\n                    value=param_data[\"value\"],\n                    description=param_data[\"description\"]\n                )\n                parameters.append(param)\n    \n            # Create the run\n            run = service.create_experiment_run(experiment.id, parameters)\n            assert run is not None\n    \n            # Start the run\n            run = service.start_run(run.id)\n    \n            # Add metrics\n            metric_types = [\n                (MetricType.ACCURACY, \"accuracy\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.PRECISION, \"precision\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.RECALL, \"recall\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.F1_SCORE, \"f1\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.LOSS, \"loss\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.PERPLEXITY, \"perplexity\", lambda: random.uniform(1.0, 5.0)),\n                (MetricType.MEAN_SQUARE_ERROR, \"mse\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.CUSTOM, \"inference_time\", lambda: random.uniform(10.0, 500.0)),\n            ]\n    \n            for _ in range(metrics_per_run):\n                metric_type, name, value_func = random.choice(metric_types)\n                service.add_run_metric(\n>                   run_id=run.id,\n                    name=name,\n                    type=metric_type,\n                    value=value_func(),\n                    description=f\"Random {name} metric for run {i+1}\"\n                )\nE               AttributeError: 'bool' object has no attribute 'id'\n\ntests/performance/test_experiment_tracking_performance.py:94: AttributeError"}, "teardown": {"duration": 0.0001725279726088047, "outcome": "passed"}}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_best_run_query_performance", "lineno": 138, "outcome": "failed", "keywords": ["test_best_run_query_performance", "test_experiment_tracking_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017124495934695005, "outcome": "passed"}, "call": {"duration": 0.0003242739476263523, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError: 'bool' object has no attribute 'id'"}, "traceback": [{"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 141, "message": ""}, {"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "experiment_service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc9b70>\n\n    def test_best_run_query_performance(experiment_service):\n        \"\"\"Test the performance of querying for the best run in an experiment.\"\"\"\n>       experiment, runs = create_experiment_with_runs(\n            experiment_service,\n            num_runs=50,\n            params_per_run=10,\n            metrics_per_run=10\n        )\n\ntests/performance/test_experiment_tracking_performance.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc9b70>, num_runs = 50\nparams_per_run = 10, metrics_per_run = 10\n\n    def create_experiment_with_runs(service, num_runs=10, params_per_run=5, metrics_per_run=5):\n        \"\"\"Create an experiment with multiple runs for performance testing.\"\"\"\n        experiment = service.create_experiment(\n            name=f\"Performance Test Experiment with {num_runs} runs\",\n            description=\"Experiment created for performance testing\",\n            tags=[\"performance\", \"test\", \"benchmark\"]\n        )\n    \n        runs = []\n    \n        # Create multiple runs with parameters and metrics\n        for i in range(num_runs):\n            # Create parameters\n            parameters = []\n            for _ in range(params_per_run):\n                param_data = create_random_parameter()\n                param = service.add_parameter(\n                    name=param_data[\"name\"],\n                    type=param_data[\"type\"],\n                    value=param_data[\"value\"],\n                    description=param_data[\"description\"]\n                )\n                parameters.append(param)\n    \n            # Create the run\n            run = service.create_experiment_run(experiment.id, parameters)\n            assert run is not None\n    \n            # Start the run\n            run = service.start_run(run.id)\n    \n            # Add metrics\n            metric_types = [\n                (MetricType.ACCURACY, \"accuracy\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.PRECISION, \"precision\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.RECALL, \"recall\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.F1_SCORE, \"f1\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.LOSS, \"loss\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.PERPLEXITY, \"perplexity\", lambda: random.uniform(1.0, 5.0)),\n                (MetricType.MEAN_SQUARE_ERROR, \"mse\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.CUSTOM, \"inference_time\", lambda: random.uniform(10.0, 500.0)),\n            ]\n    \n            for _ in range(metrics_per_run):\n                metric_type, name, value_func = random.choice(metric_types)\n                service.add_run_metric(\n>                   run_id=run.id,\n                    name=name,\n                    type=metric_type,\n                    value=value_func(),\n                    description=f\"Random {name} metric for run {i+1}\"\n                )\nE               AttributeError: 'bool' object has no attribute 'id'\n\ntests/performance/test_experiment_tracking_performance.py:94: AttributeError"}, "teardown": {"duration": 0.0001769369700923562, "outcome": "passed"}}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_comparison_performance", "lineno": 174, "outcome": "failed", "keywords": ["test_comparison_performance", "test_experiment_tracking_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001683100126683712, "outcome": "passed"}, "call": {"duration": 0.0002582899760454893, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError: 'bool' object has no attribute 'id'"}, "traceback": [{"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 178, "message": ""}, {"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "experiment_service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc8fa0>\n\n    def test_comparison_performance(experiment_service):\n        \"\"\"Test the performance of creating and querying experiment comparisons.\"\"\"\n        # Create multiple experiments with runs\n>       experiment1, runs1 = create_experiment_with_runs(\n            experiment_service, num_runs=10, params_per_run=5, metrics_per_run=5\n        )\n\ntests/performance/test_experiment_tracking_performance.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc8fa0>, num_runs = 10\nparams_per_run = 5, metrics_per_run = 5\n\n    def create_experiment_with_runs(service, num_runs=10, params_per_run=5, metrics_per_run=5):\n        \"\"\"Create an experiment with multiple runs for performance testing.\"\"\"\n        experiment = service.create_experiment(\n            name=f\"Performance Test Experiment with {num_runs} runs\",\n            description=\"Experiment created for performance testing\",\n            tags=[\"performance\", \"test\", \"benchmark\"]\n        )\n    \n        runs = []\n    \n        # Create multiple runs with parameters and metrics\n        for i in range(num_runs):\n            # Create parameters\n            parameters = []\n            for _ in range(params_per_run):\n                param_data = create_random_parameter()\n                param = service.add_parameter(\n                    name=param_data[\"name\"],\n                    type=param_data[\"type\"],\n                    value=param_data[\"value\"],\n                    description=param_data[\"description\"]\n                )\n                parameters.append(param)\n    \n            # Create the run\n            run = service.create_experiment_run(experiment.id, parameters)\n            assert run is not None\n    \n            # Start the run\n            run = service.start_run(run.id)\n    \n            # Add metrics\n            metric_types = [\n                (MetricType.ACCURACY, \"accuracy\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.PRECISION, \"precision\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.RECALL, \"recall\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.F1_SCORE, \"f1\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.LOSS, \"loss\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.PERPLEXITY, \"perplexity\", lambda: random.uniform(1.0, 5.0)),\n                (MetricType.MEAN_SQUARE_ERROR, \"mse\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.CUSTOM, \"inference_time\", lambda: random.uniform(10.0, 500.0)),\n            ]\n    \n            for _ in range(metrics_per_run):\n                metric_type, name, value_func = random.choice(metric_types)\n                service.add_run_metric(\n>                   run_id=run.id,\n                    name=name,\n                    type=metric_type,\n                    value=value_func(),\n                    description=f\"Random {name} metric for run {i+1}\"\n                )\nE               AttributeError: 'bool' object has no attribute 'id'\n\ntests/performance/test_experiment_tracking_performance.py:94: AttributeError"}, "teardown": {"duration": 0.00017483800183981657, "outcome": "passed"}}, {"nodeid": "tests/performance/test_experiment_tracking_performance.py::test_large_experiment_performance", "lineno": 228, "outcome": "failed", "keywords": ["test_large_experiment_performance", "test_experiment_tracking_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001700379652902484, "outcome": "passed"}, "call": {"duration": 0.0004125250270590186, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError: 'bool' object has no attribute 'id'"}, "traceback": [{"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 233, "message": ""}, {"path": "tests/performance/test_experiment_tracking_performance.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "experiment_service = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc8be0>\n\n    def test_large_experiment_performance(experiment_service):\n        \"\"\"Test performance with a very large experiment with many runs.\"\"\"\n        start_time = time.time()\n    \n>       experiment, runs = create_experiment_with_runs(\n            experiment_service,\n            num_runs=100,\n            params_per_run=20,\n            metrics_per_run=20\n        )\n\ntests/performance/test_experiment_tracking_performance.py:233: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc8be0>, num_runs = 100\nparams_per_run = 20, metrics_per_run = 20\n\n    def create_experiment_with_runs(service, num_runs=10, params_per_run=5, metrics_per_run=5):\n        \"\"\"Create an experiment with multiple runs for performance testing.\"\"\"\n        experiment = service.create_experiment(\n            name=f\"Performance Test Experiment with {num_runs} runs\",\n            description=\"Experiment created for performance testing\",\n            tags=[\"performance\", \"test\", \"benchmark\"]\n        )\n    \n        runs = []\n    \n        # Create multiple runs with parameters and metrics\n        for i in range(num_runs):\n            # Create parameters\n            parameters = []\n            for _ in range(params_per_run):\n                param_data = create_random_parameter()\n                param = service.add_parameter(\n                    name=param_data[\"name\"],\n                    type=param_data[\"type\"],\n                    value=param_data[\"value\"],\n                    description=param_data[\"description\"]\n                )\n                parameters.append(param)\n    \n            # Create the run\n            run = service.create_experiment_run(experiment.id, parameters)\n            assert run is not None\n    \n            # Start the run\n            run = service.start_run(run.id)\n    \n            # Add metrics\n            metric_types = [\n                (MetricType.ACCURACY, \"accuracy\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.PRECISION, \"precision\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.RECALL, \"recall\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.F1_SCORE, \"f1\", lambda: random.uniform(0.7, 1.0)),\n                (MetricType.LOSS, \"loss\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.PERPLEXITY, \"perplexity\", lambda: random.uniform(1.0, 5.0)),\n                (MetricType.MEAN_SQUARE_ERROR, \"mse\", lambda: random.uniform(0.01, 0.5)),\n                (MetricType.CUSTOM, \"inference_time\", lambda: random.uniform(10.0, 500.0)),\n            ]\n    \n            for _ in range(metrics_per_run):\n                metric_type, name, value_func = random.choice(metric_types)\n                service.add_run_metric(\n>                   run_id=run.id,\n                    name=name,\n                    type=metric_type,\n                    value=value_func(),\n                    description=f\"Random {name} metric for run {i+1}\"\n                )\nE               AttributeError: 'bool' object has no attribute 'id'\n\ntests/performance/test_experiment_tracking_performance.py:94: AttributeError"}, "teardown": {"duration": 0.0001739970175549388, "outcome": "passed"}}, {"nodeid": "tests/performance/test_export_performance.py::test_document_creation_performance", "lineno": 94, "outcome": "passed", "keywords": ["test_document_creation_performance", "test_export_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001979899825528264, "outcome": "passed"}, "call": {"duration": 0.0032953169429674745, "outcome": "passed"}, "teardown": {"duration": 0.0001371930120512843, "outcome": "passed"}}, {"nodeid": "tests/performance/test_export_performance.py::test_markdown_generation_performance", "lineno": 116, "outcome": "passed", "keywords": ["test_markdown_generation_performance", "test_export_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001847849925979972, "outcome": "passed"}, "call": {"duration": 0.00378577399533242, "outcome": "passed"}, "teardown": {"duration": 0.00013238098472356796, "outcome": "passed"}}, {"nodeid": "tests/performance/test_export_performance.py::test_file_export_performance", "lineno": 142, "outcome": "passed", "keywords": ["test_file_export_performance", "test_export_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0018874530214816332, "outcome": "passed"}, "call": {"duration": 0.00391517102252692, "outcome": "passed"}, "teardown": {"duration": 0.00015747500583529472, "outcome": "passed"}}, {"nodeid": "tests/performance/test_export_performance.py::test_large_document_performance", "lineno": 173, "outcome": "passed", "keywords": ["test_large_document_performance", "test_export_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001803860068321228, "outcome": "passed"}, "call": {"duration": 0.017928728950209916, "outcome": "passed", "stdout": "Large document creation time: 0.02s\nLarge document markdown generation time: 0.00s\nTotal content blocks: 1000\n"}, "teardown": {"duration": 0.0001480380306020379, "outcome": "passed"}}, {"nodeid": "tests/performance/test_integration_performance.py::test_large_research_project_performance", "lineno": 46, "outcome": "failed", "keywords": ["test_large_research_project_performance", "test_integration_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022344302851706743, "outcome": "passed"}, "call": {"duration": 0.00691191793885082, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/command_line_task_manager/command_line_task_manager_researcher/researchtrack/experiment_tracking/service.py", "lineno": 278, "message": "TypeError: 'ParameterType' object is not callable"}, "traceback": [{"path": "tests/performance/test_integration_performance.py", "lineno": 177, "message": ""}, {"path": "researchtrack/experiment_tracking/service.py", "lineno": 230, "message": "in add_parameter"}, {"path": "researchtrack/experiment_tracking/service.py", "lineno": 278, "message": "TypeError"}], "stdout": "Created 10 tasks with 5 questions each in 0.00s\nCreated 50 references and linked them to tasks in 0.00s\nCreated 20 datasets with 3 versions each in 0.00s\nCreated 5 environments with 20 packages each in 0.00s\n", "longrepr": "services = {'bibliography': <researchtrack.bibliography.service.BibliographyService object at 0x7fec0fbc8280>, 'dataset': <resear...ec0fbc92a0>, 'experiment': <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc8a90>, ...}\n\n    def test_large_research_project_performance(services):\n        \"\"\"\n        Test the performance of a large-scale research project workflow.\n    \n        This test simulates a complex research project with:\n        - Multiple research tasks and questions\n        - Many bibliographic references\n        - Multiple datasets with versions\n        - Several environment snapshots\n        - Multiple experiments with many runs\n        - Document generation with the results\n        \"\"\"\n        start_time = time.time()\n    \n        # 1. Create research tasks and questions\n        tasks = []\n        for i in range(10):\n            task = services[\"task\"].create_task(\n                title=f\"Research Task {i+1}: {random_string(20)}\",\n                description=f\"Description for task {i+1}: {random_string(100)}\",\n                tags=[f\"tag{i+1}\", \"research\", random_string(8)]\n            )\n    \n            # Add research questions\n            for j in range(5):\n                question = services[\"task\"].create_research_question(\n                    task_id=task.id,\n                    question=f\"Question {j+1} for Task {i+1}: {random_string(50)}?\"\n                )\n    \n            tasks.append(task)\n    \n        task_creation_time = time.time() - start_time\n        print(f\"Created {len(tasks)} tasks with 5 questions each in {task_creation_time:.2f}s\")\n    \n        # 2. Create bibliographic references\n        start_time = time.time()\n    \n        references = []\n        for i in range(50):\n            ref = services[\"bibliography\"].create_reference(\n                title=f\"Reference {i+1}: {random_string(30)}\",\n                authors=[f\"Author {j+1}\" for j in range(random.randint(1, 5))],\n                year=random.randint(2000, 2023),\n                venue=random.choice([\"Journal A\", \"Conference B\", \"Workshop C\", \"Symposium D\"]),\n                doi=f\"10.1234/ref{i+1}\" if random.random() > 0.3 else None\n            )\n            references.append(ref)\n    \n            # Link references to tasks (each task gets ~10 random references)\n            for task in random.sample(tasks, min(5, len(tasks))):\n                services[\"task\"].add_reference_to_task(task.id, ref.id)\n    \n        reference_creation_time = time.time() - start_time\n        print(f\"Created {len(references)} references and linked them to tasks in {reference_creation_time:.2f}s\")\n    \n        # 3. Create datasets and versions\n        start_time = time.time()\n    \n        datasets = []\n        for i in range(20):\n            dataset = services[\"dataset\"].create_dataset(\n                name=f\"Dataset {i+1}: {random_string(20)}\",\n                description=f\"Description for dataset {i+1}: {random_string(100)}\",\n                location=f\"/path/to/dataset{i+1}\"\n            )\n    \n            # Create versions\n            previous_version = None\n            for j in range(3):\n                version = services[\"dataset\"].create_version(\n                    dataset_id=dataset.id,\n                    version_number=f\"1.{j}\",\n                    description=f\"Version 1.{j} of dataset {i+1}\",\n                    location=f\"/path/to/dataset{i+1}/v1_{j}\",\n                    parent_version_id=previous_version.id if previous_version else None\n                )\n                previous_version = version\n    \n            datasets.append(dataset)\n    \n            # Link datasets to tasks\n            for task in random.sample(tasks, min(3, len(tasks))):\n                services[\"task\"].add_dataset_to_task(task.id, dataset.id)\n    \n        dataset_creation_time = time.time() - start_time\n        print(f\"Created {len(datasets)} datasets with 3 versions each in {dataset_creation_time:.2f}s\")\n    \n        # 4. Create environment snapshots\n        start_time = time.time()\n    \n        environments = []\n        for i in range(5):\n            env = services[\"environment\"].create_snapshot(\n                name=f\"Environment {i+1}: {random_string(20)}\",\n                description=f\"Description for environment {i+1}: {random_string(100)}\"\n            )\n    \n            # Add packages\n            for j in range(20):\n                services[\"environment\"].add_package(\n                    env_id=env.id,\n                    name=f\"package{j+1}\",\n                    version=f\"{random.randint(1, 5)}.{random.randint(0, 10)}.{random.randint(0, 20)}\"\n                )\n    \n            environments.append(env)\n    \n        environment_creation_time = time.time() - start_time\n        print(f\"Created {len(environments)} environments with 20 packages each in {environment_creation_time:.2f}s\")\n    \n        # 5. Create experiments and runs\n        start_time = time.time()\n    \n        experiments = []\n        for i, task in enumerate(random.sample(tasks, 5)):\n            experiment = services[\"experiment\"].create_experiment(\n                name=f\"Experiment {i+1}: {random_string(20)}\",\n                description=f\"Description for experiment {i+1}: {random_string(100)}\",\n                task_id=task.id,\n                dataset_id=random.choice(datasets).id,\n                environment_id=random.choice(environments).id,\n                tags=[f\"exp{i+1}\", \"research\", random_string(8)]\n            )\n    \n            # Create runs\n            for j in range(10):\n                # Create parameters\n                parameters = []\n                for k in range(10):\n>                   param = services[\"experiment\"].add_parameter(\n                        name=f\"param{k+1}\",\n                        type=random.choice([\"float\", \"integer\", \"string\"]),\n                        value=random.random() if k % 3 == 0 else (\n                            random.randint(1, 100) if k % 3 == 1 else random_string(5)\n                        )\n                    )\n\ntests/performance/test_integration_performance.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nresearchtrack/experiment_tracking/service.py:230: in add_parameter\n    self._validate_parameter(type, value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <researchtrack.experiment_tracking.service.ExperimentService object at 0x7fec0fbc8a90>\ntype = <ParameterType.INTEGER: 'integer'>, value = 'xcLXg'\n\n    def _validate_parameter(self, type: ParameterType, value: Any) -> None:\n        \"\"\"\n        Validate a parameter value against its type.\n    \n        Args:\n            type: Parameter type\n            value: Parameter value\n    \n        Raises:\n            ValueError: If the value doesn't match the type\n        \"\"\"\n        if type == ParameterType.STRING and not isinstance(value, str):\n            raise ValueError(f\"Expected string value, got {type(value).__name__}\")\n        elif type == ParameterType.INTEGER and not isinstance(value, int):\n>           raise ValueError(f\"Expected integer value, got {type(value).__name__}\")\nE           TypeError: 'ParameterType' object is not callable\n\nresearchtrack/experiment_tracking/service.py:278: TypeError"}, "teardown": {"duration": 0.0001804559724405408, "outcome": "passed"}}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_task_operation_speed", "lineno": 16, "outcome": "passed", "keywords": ["test_task_operation_speed", "TestTaskManagementPerformance", "test_task_management_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00022196792997419834, "outcome": "passed"}, "call": {"duration": 0.00023224798496812582, "outcome": "passed"}, "teardown": {"duration": 0.0001348650548607111, "outcome": "passed"}}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_large_task_list_performance", "lineno": 51, "outcome": "passed", "keywords": ["test_large_task_list_performance", "TestTaskManagementPerformance", "test_task_management_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018597592134028673, "outcome": "passed"}, "call": {"duration": 0.013344985083676875, "outcome": "passed"}, "teardown": {"duration": 0.00014606304466724396, "outcome": "passed"}}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_research_question_hierarchy_performance", "lineno": 135, "outcome": "passed", "keywords": ["test_research_question_hierarchy_performance", "TestTaskManagementPerformance", "test_task_management_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019635702483356, "outcome": "passed"}, "call": {"duration": 0.0016413130797445774, "outcome": "passed"}, "teardown": {"duration": 0.00014240795280784369, "outcome": "passed"}}, {"nodeid": "tests/performance/test_task_management_performance.py::TestTaskManagementPerformance::test_task_question_association_performance", "lineno": 202, "outcome": "passed", "keywords": ["test_task_question_association_performance", "TestTaskManagementPerformance", "test_task_management_performance.py", "performance", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018317089416086674, "outcome": "passed"}, "call": {"duration": 0.016842224984429777, "outcome": "passed"}, "teardown": {"duration": 0.00015327404253184795, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchQuestion::test_create_research_question", "lineno": 14, "outcome": "passed", "keywords": ["test_create_research_question", "TestResearchQuestion", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00034290808252990246, "outcome": "passed"}, "call": {"duration": 0.00017433101311326027, "outcome": "passed"}, "teardown": {"duration": 0.00011535105295479298, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchQuestion::test_create_with_parent", "lineno": 28, "outcome": "passed", "keywords": ["test_create_with_parent", "TestResearchQuestion", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010723609011620283, "outcome": "passed"}, "call": {"duration": 0.00015298405196517706, "outcome": "passed"}, "teardown": {"duration": 0.00010527507402002811, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchQuestion::test_update_question", "lineno": 39, "outcome": "passed", "keywords": ["test_update_question", "TestResearchQuestion", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010542094241827726, "outcome": "passed"}, "call": {"duration": 0.00016316096298396587, "outcome": "passed"}, "teardown": {"duration": 0.00010592606849968433, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_create_research_task", "lineno": 60, "outcome": "passed", "keywords": ["test_create_research_task", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00011138804256916046, "outcome": "passed"}, "call": {"duration": 0.00015688803978264332, "outcome": "passed"}, "teardown": {"duration": 0.0001092470483854413, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_task_with_due_date", "lineno": 88, "outcome": "passed", "keywords": ["test_task_with_due_date", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010154000483453274, "outcome": "passed"}, "call": {"duration": 0.00014266802463680506, "outcome": "passed"}, "teardown": {"duration": 0.00010885298252105713, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_create_subtask", "lineno": 99, "outcome": "passed", "keywords": ["test_create_subtask", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001017390750348568, "outcome": "passed"}, "call": {"duration": 0.00014093995559960604, "outcome": "passed"}, "teardown": {"duration": 9.991996921598911e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_update_task", "lineno": 110, "outcome": "passed", "keywords": ["test_update_task", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010881293565034866, "outcome": "passed"}, "call": {"duration": 0.00019539694767445326, "outcome": "passed"}, "teardown": {"duration": 0.00010392500553280115, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_complete_task", "lineno": 140, "outcome": "passed", "keywords": ["test_complete_task", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010616693180054426, "outcome": "passed"}, "call": {"duration": 0.00015387602616101503, "outcome": "passed"}, "teardown": {"duration": 0.0001040289644151926, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_add_note", "lineno": 155, "outcome": "passed", "keywords": ["test_add_note", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010005396325141191, "outcome": "passed"}, "call": {"duration": 0.00014273810666054487, "outcome": "passed"}, "teardown": {"duration": 0.00010011496488004923, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_manage_tags", "lineno": 172, "outcome": "passed", "keywords": ["test_manage_tags", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010216108057647943, "outcome": "passed"}, "call": {"duration": 0.00014284707140177488, "outcome": "passed"}, "teardown": {"duration": 9.813089855015278e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_research_question_association", "lineno": 199, "outcome": "passed", "keywords": ["test_research_question_association", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.807897731661797e-05, "outcome": "passed"}, "call": {"duration": 0.0001546149142086506, "outcome": "passed"}, "teardown": {"duration": 9.913695976138115e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_subtask_management", "lineno": 222, "outcome": "passed", "keywords": ["test_subtask_management", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010285596363246441, "outcome": "passed"}, "call": {"duration": 0.0001527239801362157, "outcome": "passed"}, "teardown": {"duration": 0.00010787206701934338, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_models.py::TestResearchTask::test_custom_metadata", "lineno": 245, "outcome": "passed", "keywords": ["test_custom_metadata", "TestResearchTask", "test_models.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010001007467508316, "outcome": "passed"}, "call": {"duration": 0.00014430994633585215, "outcome": "passed"}, "teardown": {"duration": 0.00010646798182278872, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task", "lineno": 16, "outcome": "passed", "keywords": ["test_create_task", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00019720802083611488, "outcome": "passed"}, "call": {"duration": 0.00015165691729635, "outcome": "passed"}, "teardown": {"duration": 0.00012265401892364025, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_with_parent", "lineno": 35, "outcome": "passed", "keywords": ["test_create_task_with_parent", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018275098409503698, "outcome": "passed"}, "call": {"duration": 0.00016934203449636698, "outcome": "passed"}, "teardown": {"duration": 0.0001209500478580594, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_invalid_parent", "lineno": 54, "outcome": "passed", "keywords": ["test_create_task_invalid_parent", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016570405568927526, "outcome": "passed"}, "call": {"duration": 0.0002978648990392685, "outcome": "passed"}, "teardown": {"duration": 0.000130475964397192, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_with_research_questions", "lineno": 63, "outcome": "passed", "keywords": ["test_create_task_with_research_questions", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017261691391468048, "outcome": "passed"}, "call": {"duration": 0.00018957292195409536, "outcome": "passed"}, "teardown": {"duration": 0.0001216100063174963, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_create_task_invalid_question", "lineno": 83, "outcome": "passed", "keywords": ["test_create_task_invalid_question", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018594705034047365, "outcome": "passed"}, "call": {"duration": 0.0002850419841706753, "outcome": "passed"}, "teardown": {"duration": 0.00012045609764754772, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_update_task", "lineno": 92, "outcome": "passed", "keywords": ["test_update_task", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001658810069784522, "outcome": "passed"}, "call": {"duration": 0.00028768007177859545, "outcome": "passed"}, "teardown": {"duration": 0.00013560301158577204, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_update_nonexistent_task", "lineno": 121, "outcome": "passed", "keywords": ["test_update_nonexistent_task", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001785650383681059, "outcome": "passed"}, "call": {"duration": 0.00026186800096184015, "outcome": "passed"}, "teardown": {"duration": 0.00012240605428814888, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_delete_task", "lineno": 129, "outcome": "passed", "keywords": ["test_delete_task", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016827089712023735, "outcome": "passed"}, "call": {"duration": 0.00015203701332211494, "outcome": "passed"}, "teardown": {"duration": 0.00012878398410975933, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_add_task_note", "lineno": 143, "outcome": "passed", "keywords": ["test_add_task_note", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017260003369301558, "outcome": "passed"}, "call": {"duration": 0.00017645000480115414, "outcome": "passed"}, "teardown": {"duration": 0.00012070802040398121, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_add_note_to_nonexistent_task", "lineno": 159, "outcome": "passed", "keywords": ["test_add_note_to_nonexistent_task", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017076695803552866, "outcome": "passed"}, "call": {"duration": 0.00015779503155499697, "outcome": "passed"}, "teardown": {"duration": 0.00011621997691690922, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_tag_management", "lineno": 164, "outcome": "passed", "keywords": ["test_tag_management", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017305102664977312, "outcome": "passed"}, "call": {"duration": 0.00016607192810624838, "outcome": "passed"}, "teardown": {"duration": 0.00011591101065278053, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_custom_metadata", "lineno": 189, "outcome": "passed", "keywords": ["test_custom_metadata", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001623870339244604, "outcome": "passed"}, "call": {"duration": 0.0001691679935902357, "outcome": "passed"}, "teardown": {"duration": 0.00011911604087799788, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_filter_tasks", "lineno": 206, "outcome": "passed", "keywords": ["test_filter_tasks", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001666559837758541, "outcome": "passed"}, "call": {"duration": 0.00021067005582153797, "outcome": "passed"}, "teardown": {"duration": 0.00012103607878088951, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_research_question_operations", "lineno": 264, "outcome": "passed", "keywords": ["test_research_question_operations", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001638500252738595, "outcome": "passed"}, "call": {"duration": 0.0001562620745971799, "outcome": "passed"}, "teardown": {"duration": 0.00012387905735522509, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_research_question_hierarchy", "lineno": 293, "outcome": "passed", "keywords": ["test_research_question_hierarchy", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001682309666648507, "outcome": "passed"}, "call": {"duration": 0.00015787198208272457, "outcome": "passed"}, "teardown": {"duration": 0.00011915096547454596, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_task_question_association", "lineno": 325, "outcome": "passed", "keywords": ["test_task_question_association", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001654030056670308, "outcome": "passed"}, "call": {"duration": 0.00017885502893477678, "outcome": "passed"}, "teardown": {"duration": 0.0001217379467561841, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_associate_with_nonexistent_task", "lineno": 359, "outcome": "passed", "keywords": ["test_associate_with_nonexistent_task", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00017224601469933987, "outcome": "passed"}, "call": {"duration": 0.00017440703231841326, "outcome": "passed"}, "teardown": {"duration": 0.00011939601972699165, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_associate_with_nonexistent_question", "lineno": 368, "outcome": "passed", "keywords": ["test_associate_with_nonexistent_question", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00016341591253876686, "outcome": "passed"}, "call": {"duration": 0.00020371598657220602, "outcome": "passed"}, "teardown": {"duration": 0.00012004398740828037, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_service.py::TestTaskManagementService::test_get_subtasks", "lineno": 378, "outcome": "passed", "keywords": ["test_get_subtasks", "TestTaskManagementService", "test_service.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00018308800645172596, "outcome": "passed"}, "call": {"duration": 0.00027641491033136845, "outcome": "passed"}, "teardown": {"duration": 0.00013003603089600801, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_create_and_get_task", "lineno": 13, "outcome": "passed", "keywords": ["test_create_and_get_task", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00012308696750551462, "outcome": "passed"}, "call": {"duration": 0.00016041297931224108, "outcome": "passed"}, "teardown": {"duration": 0.0001035250024870038, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_update_task", "lineno": 30, "outcome": "passed", "keywords": ["test_update_task", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010086002293974161, "outcome": "passed"}, "call": {"duration": 0.00014646700583398342, "outcome": "passed"}, "teardown": {"duration": 0.00010312895756214857, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_update_nonexistent_task", "lineno": 54, "outcome": "passed", "keywords": ["test_update_nonexistent_task", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010342197492718697, "outcome": "passed"}, "call": {"duration": 0.00014034798368811607, "outcome": "passed"}, "teardown": {"duration": 9.939400479197502e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_task", "lineno": 66, "outcome": "passed", "keywords": ["test_delete_task", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010522198863327503, "outcome": "passed"}, "call": {"duration": 0.0001382790505886078, "outcome": "passed"}, "teardown": {"duration": 0.00010140298400074244, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_nonexistent_task", "lineno": 82, "outcome": "passed", "keywords": ["test_delete_nonexistent_task", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00013277004472911358, "outcome": "passed"}, "call": {"duration": 0.00012978608720004559, "outcome": "passed"}, "teardown": {"duration": 0.0001089989673346281, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_list_tasks_empty", "lineno": 89, "outcome": "passed", "keywords": ["test_list_tasks_empty", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010010891128331423, "outcome": "passed"}, "call": {"duration": 0.0001140419626608491, "outcome": "passed"}, "teardown": {"duration": 9.67569649219513e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_list_tasks_with_filters", "lineno": 96, "outcome": "passed", "keywords": ["test_list_tasks_with_filters", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.884394239634275e-05, "outcome": "passed"}, "call": {"duration": 0.00021643296349793673, "outcome": "passed"}, "teardown": {"duration": 0.00010725692845880985, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_research_question_operations", "lineno": 170, "outcome": "passed", "keywords": ["test_research_question_operations", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010092707816511393, "outcome": "passed"}, "call": {"duration": 0.00013867393136024475, "outcome": "passed"}, "teardown": {"duration": 0.00010159506928175688, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_update_nonexistent_question", "lineno": 204, "outcome": "passed", "keywords": ["test_update_nonexistent_question", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.792996570467949e-05, "outcome": "passed"}, "call": {"duration": 0.0001323889009654522, "outcome": "passed"}, "teardown": {"duration": 9.925803169608116e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_nonexistent_question", "lineno": 216, "outcome": "passed", "keywords": ["test_delete_nonexistent_question", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010548403952270746, "outcome": "passed"}, "call": {"duration": 0.00012008799239993095, "outcome": "passed"}, "teardown": {"duration": 9.824102744460106e-05, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_list_research_questions", "lineno": 223, "outcome": "passed", "keywords": ["test_list_research_questions", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.0001036650501191616, "outcome": "passed"}, "call": {"duration": 0.0001740640727803111, "outcome": "passed"}, "teardown": {"duration": 0.00010524806566536427, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_task_question_associations", "lineno": 270, "outcome": "passed", "keywords": ["test_task_question_associations", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 9.976595174521208e-05, "outcome": "passed"}, "call": {"duration": 0.00018793402705341578, "outcome": "passed"}, "teardown": {"duration": 0.00010653398931026459, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_subtask_relationships", "lineno": 316, "outcome": "passed", "keywords": ["test_subtask_relationships", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010265898890793324, "outcome": "passed"}, "call": {"duration": 0.00016787101048976183, "outcome": "passed"}, "teardown": {"duration": 0.00010273198131471872, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_task_subtask_cleanup", "lineno": 359, "outcome": "passed", "keywords": ["test_delete_task_subtask_cleanup", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010028807446360588, "outcome": "passed"}, "call": {"duration": 0.0001528899883851409, "outcome": "passed"}, "teardown": {"duration": 0.00010083802044391632, "outcome": "passed"}}, {"nodeid": "tests/task_management/test_storage.py::TestInMemoryTaskStorage::test_delete_question_cleanup", "lineno": 386, "outcome": "passed", "keywords": ["test_delete_question_cleanup", "TestInMemoryTaskStorage", "test_storage.py", "task_management", "tests", "command_line_task_manager_researcher", ""], "setup": {"duration": 0.00010265910532325506, "outcome": "passed"}, "call": {"duration": 0.00017209292855113745, "outcome": "passed"}, "teardown": {"duration": 0.00014808494597673416, "outcome": "passed"}}], "warnings": [{"message": "Field name \"schema\" in \"Dataset\" shadows an attribute in parent \"BaseModel\"", "category": "UserWarning", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_fields.py", "lineno": 198}, {"message": "Field name \"schema\" in \"DatasetVersion\" shadows an attribute in parent \"BaseModel\"", "category": "UserWarning", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_fields.py", "lineno": 198}]}