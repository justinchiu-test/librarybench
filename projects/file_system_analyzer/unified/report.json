{"created": 1747360148.7477474, "duration": 3.60813307762146, "exitcode": 1, "root": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified", "environment": {}, "summary": {"passed": 97, "failed": 4, "total": 101, "collected": 101}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_analyzer_initialization", "type": "Function", "lineno": 13}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_calculate_compression_metrics", "type": "Function", "lineno": 22}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_compare_algorithms", "type": "Function", "lineno": 53}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_analyze_retention_efficiency", "type": "Function", "lineno": 86}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_generate_recommendations", "type": "Function", "lineno": 116}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_analyze_backup_compression", "type": "Function", "lineno": 173}]}, {"nodeid": "tests/db_admin/backup_compression", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py", "type": "Module"}]}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_detector_initialization", "type": "Function", "lineno": 11}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_detect_engine_from_path", "type": "Function", "lineno": 19}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_detect_category_from_path", "type": "Function", "lineno": 39}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_analyze_file", "type": "Function", "lineno": 61}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_scan_directory", "type": "Function", "lineno": 87}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_invalid_directory", "type": "Function", "lineno": 125}]}, {"nodeid": "tests/db_admin/db_file_recognition", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/db_file_recognition/test_detector.py", "type": "Module"}]}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_analyzer_initialization", "type": "Function", "lineno": 12}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_detect_redundant_indexes", "type": "Function", "lineno": 20}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_calculate_space_performance_ratio", "type": "Function", "lineno": 40}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_detect_unused_indexes", "type": "Function", "lineno": 62}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_calculate_index_metrics", "type": "Function", "lineno": 80}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_categorize_indexes", "type": "Function", "lineno": 107}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_generate_recommendations", "type": "Function", "lineno": 130}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_analyze_indexes", "type": "Function", "lineno": 160}]}, {"nodeid": "tests/db_admin/index_efficiency", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py", "type": "Module"}]}, {"nodeid": "tests/db_admin/interfaces/test_api.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/interfaces/test_api.py::test_api_initialization", "type": "Function", "lineno": 15}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_database_files", "type": "Function", "lineno": 31}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_transaction_logs", "type": "Function", "lineno": 76}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_index_efficiency", "type": "Function", "lineno": 105}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_tablespace_fragmentation", "type": "Function", "lineno": 137}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_backup_compression", "type": "Function", "lineno": 167}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_comprehensive_analysis", "type": "Function", "lineno": 193}]}, {"nodeid": "tests/db_admin/interfaces", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/interfaces/test_api.py", "type": "Module"}]}, {"nodeid": "tests/db_admin/mock_data/mongodb/backups", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mongodb/config", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mongodb/data", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mongodb/journal", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mongodb/log", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mongodb", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/mock_data/mongodb/backups", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mongodb/config", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mongodb/data", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mongodb/journal", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mongodb/log", "type": "Package"}]}, {"nodeid": "tests/db_admin/mock_data/mysql/backups", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mysql/config", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mysql/data", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mysql/logs", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/mysql", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/mock_data/mysql/backups", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mysql/config", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mysql/data", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mysql/logs", "type": "Package"}]}, {"nodeid": "tests/db_admin/mock_data/postgresql/backups", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/postgresql/config", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/postgresql/data/base/16384", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/postgresql/data/base", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/mock_data/postgresql/data/base/16384", "type": "Package"}]}, {"nodeid": "tests/db_admin/mock_data/postgresql/data", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/mock_data/postgresql/data/base", "type": "Package"}]}, {"nodeid": "tests/db_admin/mock_data/postgresql/pg_log", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/postgresql/pg_xlog", "outcome": "passed", "result": []}, {"nodeid": "tests/db_admin/mock_data/postgresql", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/mock_data/postgresql/backups", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/postgresql/config", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/postgresql/data", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/postgresql/pg_log", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/postgresql/pg_xlog", "type": "Package"}]}, {"nodeid": "tests/db_admin/mock_data", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/mock_data/mongodb", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/mysql", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data/postgresql", "type": "Package"}]}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_analyzer_initialization", "type": "Function", "lineno": 15}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_detect_fragmentation_severity", "type": "Function", "lineno": 24}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_analyze_free_space_distribution", "type": "Function", "lineno": 40}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_estimate_reorganization_benefit", "type": "Function", "lineno": 64}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_calculate_optimal_fill_factor", "type": "Function", "lineno": 97}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_generate_visualization_data", "type": "Function", "lineno": 123}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_generate_recommendations", "type": "Function", "lineno": 149}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_analyze_tablespace_fragmentation", "type": "Function", "lineno": 220}]}, {"nodeid": "tests/db_admin/tablespace_fragmentation", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py", "type": "Module"}]}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_analyzer_initialization", "type": "Function", "lineno": 14}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_analyze_log_files", "type": "Function", "lineno": 22}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_detect_growth_pattern", "type": "Function", "lineno": 41}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_correlate_with_operations", "type": "Function", "lineno": 92}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_generate_retention_recommendations", "type": "Function", "lineno": 143}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_analyze_logs", "type": "Function", "lineno": 170}]}, {"nodeid": "tests/db_admin/transaction_log_analysis", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py", "type": "Module"}]}, {"nodeid": "tests/db_admin/utils/test_file_utils.py", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/utils/test_file_utils.py::test_get_file_stats", "type": "Function", "lineno": 16}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_find_files", "type": "Function", "lineno": 43}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_calculate_dir_size", "type": "Function", "lineno": 70}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_get_disk_usage", "type": "Function", "lineno": 87}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_estimate_file_growth_rate", "type": "Function", "lineno": 104}]}, {"nodeid": "tests/db_admin/utils", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/utils/test_file_utils.py", "type": "Module"}]}, {"nodeid": "tests/db_admin", "outcome": "passed", "result": [{"nodeid": "tests/db_admin/backup_compression", "type": "Package"}, {"nodeid": "tests/db_admin/db_file_recognition", "type": "Package"}, {"nodeid": "tests/db_admin/index_efficiency", "type": "Package"}, {"nodeid": "tests/db_admin/interfaces", "type": "Package"}, {"nodeid": "tests/db_admin/mock_data", "type": "Package"}, {"nodeid": "tests/db_admin/tablespace_fragmentation", "type": "Package"}, {"nodeid": "tests/db_admin/transaction_log_analysis", "type": "Package"}, {"nodeid": "tests/db_admin/utils", "type": "Package"}]}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry::test_audit_entry_creation", "type": "Function", "lineno": 26}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry::test_audit_entry_hashing", "type": "Function", "lineno": 45}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry::test_audit_entry_serialization", "type": "Function", "lineno": 75}]}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_audit_log_creation", "type": "Function", "lineno": 110}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_add_entries", "type": "Function", "lineno": 121}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_log_integrity_verification", "type": "Function", "lineno": 150}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_log_serialization", "type": "Function", "lineno": 176}]}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_logger_initialization", "type": "Function", "lineno": 204}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_logging_events", "type": "Function", "lineno": 215}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_logger_with_crypto_provider", "type": "Function", "lineno": 244}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_saving_and_loading_log", "type": "Function", "lineno": 275}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_filtering_log_entries", "type": "Function", "lineno": 304}]}, {"nodeid": "tests/security_auditor/test_audit.py", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry", "type": "Class"}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog", "type": "Class"}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger", "type": "Class"}]}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidenceItems", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_custody.py::TestEvidenceItems::test_evidence_item_creation", "type": "Function", "lineno": 29}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidenceItems::test_evidence_access_logging", "type": "Function", "lineno": 56}]}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_package_creation", "type": "Function", "lineno": 80}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_add_evidence_items", "type": "Function", "lineno": 96}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_package_signing_and_verification", "type": "Function", "lineno": 136}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_log_access", "type": "Function", "lineno": 178}]}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_create_evidence_package", "type": "Function", "lineno": 215}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_add_file_to_package", "type": "Function", "lineno": 231}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_verify_package_item", "type": "Function", "lineno": 262}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_export_and_import_package", "type": "Function", "lineno": 292}]}, {"nodeid": "tests/security_auditor/test_custody.py", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_custody.py::TestEvidenceItems", "type": "Class"}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage", "type": "Class"}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager", "type": "Class"}]}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_pattern_definitions_exist", "type": "Function", "lineno": 30}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_pattern_matching", "type": "Function", "lineno": 40}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_pattern_validators", "type": "Function", "lineno": 61}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_get_patterns_by_category", "type": "Function", "lineno": 75}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_get_patterns_by_sensitivity", "type": "Function", "lineno": 85}]}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scanner_initialization", "type": "Function", "lineno": 99}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_file_ignore_rules", "type": "Function", "lineno": 118}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_file_with_sensitive_data", "type": "Function", "lineno": 140}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_file_without_sensitive_data", "type": "Function", "lineno": 162}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_binary_file", "type": "Function", "lineno": 180}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_directory", "type": "Function", "lineno": 193}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_nonexistent_file", "type": "Function", "lineno": 238}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_options_with_specific_patterns", "type": "Function", "lineno": 245}]}, {"nodeid": "tests/security_auditor/test_detection.py", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_detection.py::TestPatterns", "type": "Class"}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner", "type": "Class"}]}, {"nodeid": "tests/security_auditor/test_differential.py::TestBaseline", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_differential.py::TestBaseline::test_baseline_creation", "type": "Function", "lineno": 35}, {"nodeid": "tests/security_auditor/test_differential.py::TestBaseline::test_baseline_signing_and_verification", "type": "Function", "lineno": 51}]}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_create_baseline", "type": "Function", "lineno": 234}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_save_and_load_baseline", "type": "Function", "lineno": 261}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_signed_baseline", "type": "Function", "lineno": 295}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_compare_unchanged", "type": "Function", "lineno": 321}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_compare_with_changes", "type": "Function", "lineno": 345}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_compare_with_removals", "type": "Function", "lineno": 384}]}, {"nodeid": "tests/security_auditor/test_differential.py", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_differential.py::TestBaseline", "type": "Class"}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer", "type": "Class"}]}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_framework_registry", "type": "Function", "lineno": 44}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_gdpr_framework", "type": "Function", "lineno": 71}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_hipaa_framework", "type": "Function", "lineno": 90}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_pci_dss_framework", "type": "Function", "lineno": 104}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_sox_framework", "type": "Function", "lineno": 118}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_frameworks_for_category", "type": "Function", "lineno": 132}]}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_generator_gdpr", "type": "Function", "lineno": 231}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_generator_pci", "type": "Function", "lineno": 259}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_metrics", "type": "Function", "lineno": 287}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_serialization", "type": "Function", "lineno": 303}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_signing_and_verification", "type": "Function", "lineno": 324}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_saving", "type": "Function", "lineno": 361}]}, {"nodeid": "tests/security_auditor/test_reporting.py", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks", "type": "Class"}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration", "type": "Class"}]}, {"nodeid": "tests/security_auditor/test_scanner.py", "outcome": "failed", "result": [], "longrepr": "../../../../.pyenv/versions/3.10.11/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\n../file_system_analyzer_security_auditor/tests/test_scanner.py:13: in <module>\n    from file_system_analyzer.scanner import (\nfile_system_analyzer/scanner.py:539: in <module>\n    class ComplianceScannerAPI(BaseAnalyzerAPI[ScanResult, Any]):\nfile_system_analyzer/scanner.py:719: in ComplianceScannerAPI\n    ) -> Union[DifferentialScanResult, DifferentialAnalyzer.DifferentialResult]:\nE   NameError: name 'DifferentialAnalyzer' is not defined"}, {"nodeid": "tests/security_auditor", "outcome": "passed", "result": [{"nodeid": "tests/security_auditor/test_audit.py", "type": "Module"}, {"nodeid": "tests/security_auditor/test_custody.py", "type": "Module"}, {"nodeid": "tests/security_auditor/test_detection.py", "type": "Module"}, {"nodeid": "tests/security_auditor/test_differential.py", "type": "Module"}, {"nodeid": "tests/security_auditor/test_reporting.py", "type": "Module"}, {"nodeid": "tests/security_auditor/test_scanner.py", "type": "Module"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/db_admin", "type": "Package"}, {"nodeid": "tests/security_auditor", "type": "Package"}]}], "tests": [{"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_analyzer_initialization", "lineno": 13, "outcome": "passed", "keywords": ["test_analyzer_initialization", "test_compression_analyzer.py", "backup_compression", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0009575888980180025, "outcome": "passed"}, "call": {"duration": 0.00025678006932139397, "outcome": "passed"}, "teardown": {"duration": 0.0002468570601195097, "outcome": "passed"}}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_calculate_compression_metrics", "lineno": 22, "outcome": "passed", "keywords": ["test_calculate_compression_metrics", "test_compression_analyzer.py", "backup_compression", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00031840289011597633, "outcome": "passed"}, "call": {"duration": 0.0003507770597934723, "outcome": "passed"}, "teardown": {"duration": 0.00020422902889549732, "outcome": "passed"}}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_compare_algorithms", "lineno": 53, "outcome": "passed", "keywords": ["test_compare_algorithms", "test_compression_analyzer.py", "backup_compression", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002706830855458975, "outcome": "passed"}, "call": {"duration": 0.0005071691703051329, "outcome": "passed"}, "teardown": {"duration": 0.00019226106815040112, "outcome": "passed"}}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_analyze_retention_efficiency", "lineno": 86, "outcome": "passed", "keywords": ["test_analyze_retention_efficiency", "test_compression_analyzer.py", "backup_compression", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002651200629770756, "outcome": "passed"}, "call": {"duration": 0.0004673229996114969, "outcome": "passed"}, "teardown": {"duration": 0.00019369483925402164, "outcome": "passed"}}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_generate_recommendations", "lineno": 116, "outcome": "passed", "keywords": ["test_generate_recommendations", "test_compression_analyzer.py", "backup_compression", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002783869858831167, "outcome": "passed"}, "call": {"duration": 0.0007836669683456421, "outcome": "passed"}, "teardown": {"duration": 0.00020288885571062565, "outcome": "passed"}}, {"nodeid": "tests/db_admin/backup_compression/test_compression_analyzer.py::test_analyze_backup_compression", "lineno": 173, "outcome": "passed", "keywords": ["test_analyze_backup_compression", "test_compression_analyzer.py", "backup_compression", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00027805007994174957, "outcome": "passed"}, "call": {"duration": 0.0010401299223303795, "outcome": "passed"}, "teardown": {"duration": 0.00022302893921732903, "outcome": "passed"}}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_detector_initialization", "lineno": 11, "outcome": "passed", "keywords": ["test_detector_initialization", "test_detector.py", "db_file_recognition", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00043116509914398193, "outcome": "passed"}, "call": {"duration": 0.00026841810904443264, "outcome": "passed"}, "teardown": {"duration": 0.00016895518638193607, "outcome": "passed"}}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_detect_engine_from_path", "lineno": 19, "outcome": "passed", "keywords": ["test_detect_engine_from_path", "test_detector.py", "db_file_recognition", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00018230406567454338, "outcome": "passed"}, "call": {"duration": 0.0005771461874246597, "outcome": "passed"}, "teardown": {"duration": 0.00016448996029794216, "outcome": "passed"}}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_detect_category_from_path", "lineno": 39, "outcome": "passed", "keywords": ["test_detect_category_from_path", "test_detector.py", "db_file_recognition", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00016676215454936028, "outcome": "passed"}, "call": {"duration": 0.0005232910625636578, "outcome": "passed"}, "teardown": {"duration": 0.00016892701387405396, "outcome": "passed"}}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_analyze_file", "lineno": 61, "outcome": "passed", "keywords": ["test_analyze_file", "test_detector.py", "db_file_recognition", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00028071808628737926, "outcome": "passed"}, "call": {"duration": 0.0009783781133592129, "outcome": "passed"}, "teardown": {"duration": 0.00020067603327333927, "outcome": "passed"}}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_scan_directory", "lineno": 87, "outcome": "failed", "keywords": ["test_scan_directory", "test_detector.py", "db_file_recognition", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00027871294878423214, "outcome": "passed"}, "call": {"duration": 0.0003243621904402971, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError: \"ScanOptions\" object has no field \"max_files\""}, "traceback": [{"path": "../file_system_analyzer_db_admin/tests/db_file_recognition/test_detector.py", "lineno": 94, "message": ""}, {"path": "file_system_analyzer_db_admin/db_file_recognition/detector.py", "lineno": 520, "message": "in scan_directory"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 995, "message": "in __setattr__"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError"}], "longrepr": "mock_data_dir = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/tests/db_admin/mock_data')\n\n    def test_scan_directory(mock_data_dir):\n        \"\"\"Test scanning a directory for database files.\"\"\"\n        detector = DatabaseFileDetector()\n    \n        # Scan MySQL directory\n        mysql_dir = mock_data_dir / \"mysql\"\n>       mysql_result = detector.scan_directory(mysql_dir)\n\n../file_system_analyzer_db_admin/tests/db_file_recognition/test_detector.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfile_system_analyzer_db_admin/db_file_recognition/detector.py:520: in scan_directory\n    self.options.max_files = max_files\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:995: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ScanOptions(recursive=True, max_file_size=104857600, ignore_extensions=['.rar', '.bmp', '.so', '.jar', '.gz', '.tar', ....git/', '^node_modules/', '^__pycache__/'], include_hidden=False, max_depth=None, follow_symlinks=False, num_threads=4)\nname = 'max_files', value = None\n\n    def _setattr_handler(self, name: str, value: Any) -> Callable[[BaseModel, str, Any], None] | None:\n        \"\"\"Get a handler for setting an attribute on the model instance.\n    \n        Returns:\n            A handler for setting an attribute on the model instance. Used for memoization of the handler.\n            Memoizing the handlers leads to a dramatic performance improvement in `__setattr__`\n            Returns `None` when memoization is not safe, then the attribute is set directly.\n        \"\"\"\n        cls = self.__class__\n        if name in cls.__class_vars__:\n            raise AttributeError(\n                f'{name!r} is a ClassVar of `{cls.__name__}` and cannot be set on an instance. '\n                f'If you want to set a value on the class, use `{cls.__name__}.{name} = value`.'\n            )\n        elif not _fields.is_valid_field_name(name):\n            if (attribute := cls.__private_attributes__.get(name)) is not None:\n                if hasattr(attribute, '__set__'):\n                    return lambda model, _name, val: attribute.__set__(model, val)\n                else:\n                    return _SIMPLE_SETATTR_HANDLERS['private']\n            else:\n                _object_setattr(self, name, value)\n                return None  # Can not return memoized handler with possibly freeform attr names\n    \n        attr = getattr(cls, name, None)\n        # NOTE: We currently special case properties and `cached_property`, but we might need\n        # to generalize this to all data/non-data descriptors at some point. For non-data descriptors\n        # (such as `cached_property`), it isn't obvious though. `cached_property` caches the value\n        # to the instance's `__dict__`, but other non-data descriptors might do things differently.\n        if isinstance(attr, cached_property):\n            return _SIMPLE_SETATTR_HANDLERS['cached_property']\n    \n        _check_frozen(cls, name, value)\n    \n        # We allow properties to be set only on non frozen models for now (to match dataclasses).\n        # This can be changed if it ever gets requested.\n        if isinstance(attr, property):\n            return lambda model, _name, val: attr.__set__(model, val)\n        elif cls.model_config.get('validate_assignment'):\n            return _SIMPLE_SETATTR_HANDLERS['validate_assignment']\n        elif name not in cls.__pydantic_fields__:\n            if cls.model_config.get('extra') != 'allow':\n                # TODO - matching error\n>               raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE               ValueError: \"ScanOptions\" object has no field \"max_files\"\n\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:1042: ValueError"}, "teardown": {"duration": 0.0002403920516371727, "outcome": "passed"}}, {"nodeid": "tests/db_admin/db_file_recognition/test_detector.py::test_invalid_directory", "lineno": 125, "outcome": "failed", "keywords": ["test_invalid_directory", "test_detector.py", "db_file_recognition", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0001949130091816187, "outcome": "passed"}, "call": {"duration": 0.0002760188654065132, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError: \"ScanOptions\" object has no field \"max_files\""}, "traceback": [{"path": "../file_system_analyzer_db_admin/tests/db_file_recognition/test_detector.py", "lineno": 129, "message": ""}, {"path": "file_system_analyzer_db_admin/db_file_recognition/detector.py", "lineno": 520, "message": "in scan_directory"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 995, "message": "in __setattr__"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError"}], "longrepr": "def test_invalid_directory():\n        \"\"\"Test scanning an invalid directory.\"\"\"\n        detector = DatabaseFileDetector()\n>       result = detector.scan_directory(\"/nonexistent/path\")\n\n../file_system_analyzer_db_admin/tests/db_file_recognition/test_detector.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfile_system_analyzer_db_admin/db_file_recognition/detector.py:520: in scan_directory\n    self.options.max_files = max_files\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:995: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ScanOptions(recursive=True, max_file_size=104857600, ignore_extensions=['.rar', '.bmp', '.so', '.jar', '.gz', '.tar', ....git/', '^node_modules/', '^__pycache__/'], include_hidden=False, max_depth=None, follow_symlinks=False, num_threads=4)\nname = 'max_files', value = None\n\n    def _setattr_handler(self, name: str, value: Any) -> Callable[[BaseModel, str, Any], None] | None:\n        \"\"\"Get a handler for setting an attribute on the model instance.\n    \n        Returns:\n            A handler for setting an attribute on the model instance. Used for memoization of the handler.\n            Memoizing the handlers leads to a dramatic performance improvement in `__setattr__`\n            Returns `None` when memoization is not safe, then the attribute is set directly.\n        \"\"\"\n        cls = self.__class__\n        if name in cls.__class_vars__:\n            raise AttributeError(\n                f'{name!r} is a ClassVar of `{cls.__name__}` and cannot be set on an instance. '\n                f'If you want to set a value on the class, use `{cls.__name__}.{name} = value`.'\n            )\n        elif not _fields.is_valid_field_name(name):\n            if (attribute := cls.__private_attributes__.get(name)) is not None:\n                if hasattr(attribute, '__set__'):\n                    return lambda model, _name, val: attribute.__set__(model, val)\n                else:\n                    return _SIMPLE_SETATTR_HANDLERS['private']\n            else:\n                _object_setattr(self, name, value)\n                return None  # Can not return memoized handler with possibly freeform attr names\n    \n        attr = getattr(cls, name, None)\n        # NOTE: We currently special case properties and `cached_property`, but we might need\n        # to generalize this to all data/non-data descriptors at some point. For non-data descriptors\n        # (such as `cached_property`), it isn't obvious though. `cached_property` caches the value\n        # to the instance's `__dict__`, but other non-data descriptors might do things differently.\n        if isinstance(attr, cached_property):\n            return _SIMPLE_SETATTR_HANDLERS['cached_property']\n    \n        _check_frozen(cls, name, value)\n    \n        # We allow properties to be set only on non frozen models for now (to match dataclasses).\n        # This can be changed if it ever gets requested.\n        if isinstance(attr, property):\n            return lambda model, _name, val: attr.__set__(model, val)\n        elif cls.model_config.get('validate_assignment'):\n            return _SIMPLE_SETATTR_HANDLERS['validate_assignment']\n        elif name not in cls.__pydantic_fields__:\n            if cls.model_config.get('extra') != 'allow':\n                # TODO - matching error\n>               raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE               ValueError: \"ScanOptions\" object has no field \"max_files\"\n\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:1042: ValueError"}, "teardown": {"duration": 0.00021287007257342339, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_analyzer_initialization", "lineno": 12, "outcome": "passed", "keywords": ["test_analyzer_initialization", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0004365178756415844, "outcome": "passed"}, "call": {"duration": 0.0002262950874865055, "outcome": "passed"}, "teardown": {"duration": 0.00016273092478513718, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_detect_redundant_indexes", "lineno": 20, "outcome": "passed", "keywords": ["test_detect_redundant_indexes", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.000309560913592577, "outcome": "passed"}, "call": {"duration": 0.00025267316959798336, "outcome": "passed"}, "teardown": {"duration": 0.00018952088430523872, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_calculate_space_performance_ratio", "lineno": 40, "outcome": "passed", "keywords": ["test_calculate_space_performance_ratio", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002864950802177191, "outcome": "passed"}, "call": {"duration": 0.001003823010250926, "outcome": "passed"}, "teardown": {"duration": 0.00021750200539827347, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_detect_unused_indexes", "lineno": 62, "outcome": "passed", "keywords": ["test_detect_unused_indexes", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0003035960253328085, "outcome": "passed"}, "call": {"duration": 0.00022691208869218826, "outcome": "passed"}, "teardown": {"duration": 0.00018781190738081932, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_calculate_index_metrics", "lineno": 80, "outcome": "passed", "keywords": ["test_calculate_index_metrics", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002993110101670027, "outcome": "passed"}, "call": {"duration": 0.0003958907909691334, "outcome": "passed"}, "teardown": {"duration": 0.00019948789849877357, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_categorize_indexes", "lineno": 107, "outcome": "passed", "keywords": ["test_categorize_indexes", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.000279097119346261, "outcome": "passed"}, "call": {"duration": 0.0003848059568554163, "outcome": "passed"}, "teardown": {"duration": 0.00019287178292870522, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_generate_recommendations", "lineno": 130, "outcome": "passed", "keywords": ["test_generate_recommendations", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002851039171218872, "outcome": "passed"}, "call": {"duration": 0.0004382419865578413, "outcome": "passed"}, "teardown": {"duration": 0.00019756820984184742, "outcome": "passed"}}, {"nodeid": "tests/db_admin/index_efficiency/test_index_analyzer.py::test_analyze_indexes", "lineno": 160, "outcome": "passed", "keywords": ["test_analyze_indexes", "test_index_analyzer.py", "index_efficiency", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00030025001615285873, "outcome": "passed"}, "call": {"duration": 0.0004979369696229696, "outcome": "passed"}, "teardown": {"duration": 0.00021466915495693684, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_api_initialization", "lineno": 15, "outcome": "passed", "keywords": ["test_api_initialization", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0007722650188952684, "outcome": "passed"}, "call": {"duration": 0.07905609789304435, "outcome": "passed"}, "teardown": {"duration": 0.0003029948566108942, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_database_files", "lineno": 31, "outcome": "failed", "keywords": ["test_analyze_database_files", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0004351420793682337, "outcome": "passed"}, "call": {"duration": 0.0614362140186131, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError: \"ScanOptions\" object has no field \"max_files\""}, "traceback": [{"path": "../file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 38, "message": ""}, {"path": "file_system_analyzer_db_admin/interfaces/api.py", "lineno": 196, "message": "in analyze_database_files"}, {"path": "file_system_analyzer_db_admin/db_file_recognition/detector.py", "lineno": 520, "message": "in scan_directory"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 995, "message": "in __setattr__"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError"}], "longrepr": "mock_data_dir = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/tests/db_admin/mock_data')\ntemp_output_dir = '/tmp/tmpyq7e0c4h'\n\n    def test_analyze_database_files(mock_data_dir, temp_output_dir):\n        \"\"\"Test database file analysis through API.\"\"\"\n        api = StorageOptimizerAPI(output_dir=temp_output_dir)\n    \n        # Analyze MySQL directory\n        mysql_dir = mock_data_dir / \"mysql\"\n>       mysql_result = api.analyze_database_files(\n            root_path=mysql_dir,\n            recursive=True,\n            export_format=\"json\",\n            export_filename=\"mysql_analysis.json\",\n        )\n\n../file_system_analyzer_db_admin/tests/interfaces/test_api.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfile_system_analyzer_db_admin/interfaces/api.py:196: in analyze_database_files\n    analysis_result = self.file_detector.scan_directory(\nfile_system_analyzer_db_admin/db_file_recognition/detector.py:520: in scan_directory\n    self.options.max_files = max_files\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:995: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ScanOptions(recursive=True, max_file_size=104857600, ignore_extensions=['.rar', '.bmp', '.so', '.jar', '.gz', '.tar', ....git/', '^node_modules/', '^__pycache__/'], include_hidden=False, max_depth=None, follow_symlinks=False, num_threads=4)\nname = 'max_files', value = None\n\n    def _setattr_handler(self, name: str, value: Any) -> Callable[[BaseModel, str, Any], None] | None:\n        \"\"\"Get a handler for setting an attribute on the model instance.\n    \n        Returns:\n            A handler for setting an attribute on the model instance. Used for memoization of the handler.\n            Memoizing the handlers leads to a dramatic performance improvement in `__setattr__`\n            Returns `None` when memoization is not safe, then the attribute is set directly.\n        \"\"\"\n        cls = self.__class__\n        if name in cls.__class_vars__:\n            raise AttributeError(\n                f'{name!r} is a ClassVar of `{cls.__name__}` and cannot be set on an instance. '\n                f'If you want to set a value on the class, use `{cls.__name__}.{name} = value`.'\n            )\n        elif not _fields.is_valid_field_name(name):\n            if (attribute := cls.__private_attributes__.get(name)) is not None:\n                if hasattr(attribute, '__set__'):\n                    return lambda model, _name, val: attribute.__set__(model, val)\n                else:\n                    return _SIMPLE_SETATTR_HANDLERS['private']\n            else:\n                _object_setattr(self, name, value)\n                return None  # Can not return memoized handler with possibly freeform attr names\n    \n        attr = getattr(cls, name, None)\n        # NOTE: We currently special case properties and `cached_property`, but we might need\n        # to generalize this to all data/non-data descriptors at some point. For non-data descriptors\n        # (such as `cached_property`), it isn't obvious though. `cached_property` caches the value\n        # to the instance's `__dict__`, but other non-data descriptors might do things differently.\n        if isinstance(attr, cached_property):\n            return _SIMPLE_SETATTR_HANDLERS['cached_property']\n    \n        _check_frozen(cls, name, value)\n    \n        # We allow properties to be set only on non frozen models for now (to match dataclasses).\n        # This can be changed if it ever gets requested.\n        if isinstance(attr, property):\n            return lambda model, _name, val: attr.__set__(model, val)\n        elif cls.model_config.get('validate_assignment'):\n            return _SIMPLE_SETATTR_HANDLERS['validate_assignment']\n        elif name not in cls.__pydantic_fields__:\n            if cls.model_config.get('extra') != 'allow':\n                # TODO - matching error\n>               raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE               ValueError: \"ScanOptions\" object has no field \"max_files\"\n\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:1042: ValueError"}, "teardown": {"duration": 0.0004294870886951685, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_transaction_logs", "lineno": 76, "outcome": "passed", "keywords": ["test_analyze_transaction_logs", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.000564557034522295, "outcome": "passed"}, "call": {"duration": 0.11627116822637618, "outcome": "passed", "log": [{"name": "common.utils.file_utils", "msg": "Error getting stats for /var/lib/mysql/mysql-bin.000001: [Errno 2] No such file or directory: '/var/lib/mysql/mysql-bin.000001'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360146.655904, "msecs": 655.0, "relativeCreated": 1678.473711013794, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}, {"name": "common.utils.file_utils", "msg": "Error getting stats for /var/lib/postgresql/data/pg_wal/000000010000000A00000001: [Errno 2] No such file or directory: '/var/lib/postgresql/data/pg_wal/000000010000000A00000001'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360146.6563993, "msecs": 656.0, "relativeCreated": 1678.968906402588, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}]}, "teardown": {"duration": 0.00034623383544385433, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_index_efficiency", "lineno": 105, "outcome": "passed", "keywords": ["test_analyze_index_efficiency", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00048385001718997955, "outcome": "passed"}, "call": {"duration": 0.08735349215567112, "outcome": "passed"}, "teardown": {"duration": 0.0003206890542060137, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_tablespace_fragmentation", "lineno": 137, "outcome": "passed", "keywords": ["test_analyze_tablespace_fragmentation", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0005367710255086422, "outcome": "passed"}, "call": {"duration": 0.06989029212854803, "outcome": "passed"}, "teardown": {"duration": 0.00034213787876069546, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_analyze_backup_compression", "lineno": 167, "outcome": "passed", "keywords": ["test_analyze_backup_compression", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0004458350595086813, "outcome": "passed"}, "call": {"duration": 0.053673892049118876, "outcome": "passed"}, "teardown": {"duration": 0.00036084000021219254, "outcome": "passed"}}, {"nodeid": "tests/db_admin/interfaces/test_api.py::test_comprehensive_analysis", "lineno": 193, "outcome": "failed", "keywords": ["test_comprehensive_analysis", "test_api.py", "interfaces", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00047004292719066143, "outcome": "passed"}, "call": {"duration": 0.06929342797957361, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError: \"ScanOptions\" object has no field \"max_files\""}, "traceback": [{"path": "../file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 199, "message": ""}, {"path": "file_system_analyzer_db_admin/interfaces/api.py", "lineno": 763, "message": "in comprehensive_analysis"}, {"path": "file_system_analyzer_db_admin/interfaces/api.py", "lineno": 196, "message": "in analyze_database_files"}, {"path": "file_system_analyzer_db_admin/db_file_recognition/detector.py", "lineno": 520, "message": "in scan_directory"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 995, "message": "in __setattr__"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py", "lineno": 1042, "message": "ValueError"}], "longrepr": "mock_data_dir = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/tests/db_admin/mock_data')\ntemp_output_dir = '/tmp/tmpcnjvfp1t'\n\n    def test_comprehensive_analysis(mock_data_dir, temp_output_dir):\n        \"\"\"Test comprehensive analysis through API.\"\"\"\n        api = StorageOptimizerAPI(output_dir=temp_output_dir)\n    \n        # Run comprehensive analysis\n>       comprehensive_result = api.comprehensive_analysis(\n            root_path=mock_data_dir,\n            recursive=True,\n            export_format=\"json\",\n            export_filename=\"comprehensive_analysis.json\",\n        )\n\n../file_system_analyzer_db_admin/tests/interfaces/test_api.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfile_system_analyzer_db_admin/interfaces/api.py:763: in comprehensive_analysis\n    file_analysis = self.analyze_database_files(\nfile_system_analyzer_db_admin/interfaces/api.py:196: in analyze_database_files\n    analysis_result = self.file_detector.scan_directory(\nfile_system_analyzer_db_admin/db_file_recognition/detector.py:520: in scan_directory\n    self.options.max_files = max_files\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:995: in __setattr__\n    elif (setattr_handler := self._setattr_handler(name, value)) is not None:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = ScanOptions(recursive=True, max_file_size=104857600, ignore_extensions=['.rar', '.bmp', '.so', '.jar', '.gz', '.tar', ....git/', '^node_modules/', '^__pycache__/'], include_hidden=False, max_depth=None, follow_symlinks=False, num_threads=4)\nname = 'max_files', value = None\n\n    def _setattr_handler(self, name: str, value: Any) -> Callable[[BaseModel, str, Any], None] | None:\n        \"\"\"Get a handler for setting an attribute on the model instance.\n    \n        Returns:\n            A handler for setting an attribute on the model instance. Used for memoization of the handler.\n            Memoizing the handlers leads to a dramatic performance improvement in `__setattr__`\n            Returns `None` when memoization is not safe, then the attribute is set directly.\n        \"\"\"\n        cls = self.__class__\n        if name in cls.__class_vars__:\n            raise AttributeError(\n                f'{name!r} is a ClassVar of `{cls.__name__}` and cannot be set on an instance. '\n                f'If you want to set a value on the class, use `{cls.__name__}.{name} = value`.'\n            )\n        elif not _fields.is_valid_field_name(name):\n            if (attribute := cls.__private_attributes__.get(name)) is not None:\n                if hasattr(attribute, '__set__'):\n                    return lambda model, _name, val: attribute.__set__(model, val)\n                else:\n                    return _SIMPLE_SETATTR_HANDLERS['private']\n            else:\n                _object_setattr(self, name, value)\n                return None  # Can not return memoized handler with possibly freeform attr names\n    \n        attr = getattr(cls, name, None)\n        # NOTE: We currently special case properties and `cached_property`, but we might need\n        # to generalize this to all data/non-data descriptors at some point. For non-data descriptors\n        # (such as `cached_property`), it isn't obvious though. `cached_property` caches the value\n        # to the instance's `__dict__`, but other non-data descriptors might do things differently.\n        if isinstance(attr, cached_property):\n            return _SIMPLE_SETATTR_HANDLERS['cached_property']\n    \n        _check_frozen(cls, name, value)\n    \n        # We allow properties to be set only on non frozen models for now (to match dataclasses).\n        # This can be changed if it ever gets requested.\n        if isinstance(attr, property):\n            return lambda model, _name, val: attr.__set__(model, val)\n        elif cls.model_config.get('validate_assignment'):\n            return _SIMPLE_SETATTR_HANDLERS['validate_assignment']\n        elif name not in cls.__pydantic_fields__:\n            if cls.model_config.get('extra') != 'allow':\n                # TODO - matching error\n>               raise ValueError(f'\"{cls.__name__}\" object has no field \"{name}\"')\nE               ValueError: \"ScanOptions\" object has no field \"max_files\"\n\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/main.py:1042: ValueError"}, "teardown": {"duration": 0.0003303918056190014, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_analyzer_initialization", "lineno": 15, "outcome": "passed", "keywords": ["test_analyzer_initialization", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00048475596122443676, "outcome": "passed"}, "call": {"duration": 0.0002250999677926302, "outcome": "passed"}, "teardown": {"duration": 0.00017862487584352493, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_detect_fragmentation_severity", "lineno": 24, "outcome": "passed", "keywords": ["test_detect_fragmentation_severity", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00017600785940885544, "outcome": "passed"}, "call": {"duration": 0.00021750107407569885, "outcome": "passed"}, "teardown": {"duration": 0.00016209203749895096, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_analyze_free_space_distribution", "lineno": 40, "outcome": "passed", "keywords": ["test_analyze_free_space_distribution", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00016391696408391, "outcome": "passed"}, "call": {"duration": 0.000472209881991148, "outcome": "passed"}, "teardown": {"duration": 0.00017017987556755543, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_estimate_reorganization_benefit", "lineno": 64, "outcome": "passed", "keywords": ["test_estimate_reorganization_benefit", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00017383601516485214, "outcome": "passed"}, "call": {"duration": 0.00021912413649260998, "outcome": "passed"}, "teardown": {"duration": 0.00016639893874526024, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_calculate_optimal_fill_factor", "lineno": 97, "outcome": "passed", "keywords": ["test_calculate_optimal_fill_factor", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00016967696137726307, "outcome": "passed"}, "call": {"duration": 0.00020642997696995735, "outcome": "passed"}, "teardown": {"duration": 0.0001664869487285614, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_generate_visualization_data", "lineno": 123, "outcome": "passed", "keywords": ["test_generate_visualization_data", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.000384580809623003, "outcome": "passed"}, "call": {"duration": 0.00027600000612437725, "outcome": "passed"}, "teardown": {"duration": 0.00020690984092652798, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_generate_recommendations", "lineno": 149, "outcome": "passed", "keywords": ["test_generate_recommendations", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0003648849669843912, "outcome": "passed"}, "call": {"duration": 0.0005885350983589888, "outcome": "passed"}, "teardown": {"duration": 0.00022394699044525623, "outcome": "passed"}}, {"nodeid": "tests/db_admin/tablespace_fragmentation/test_fragmentation_analyzer.py::test_analyze_tablespace_fragmentation", "lineno": 220, "outcome": "passed", "keywords": ["test_analyze_tablespace_fragmentation", "test_fragmentation_analyzer.py", "tablespace_fragmentation", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00036886800080537796, "outcome": "passed"}, "call": {"duration": 0.0006977729499340057, "outcome": "passed"}, "teardown": {"duration": 0.00022914609871804714, "outcome": "passed"}}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_analyzer_initialization", "lineno": 14, "outcome": "passed", "keywords": ["test_analyzer_initialization", "test_log_analyzer.py", "transaction_log_analysis", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00044910493306815624, "outcome": "passed"}, "call": {"duration": 0.00026307394728064537, "outcome": "passed"}, "teardown": {"duration": 0.0001696399413049221, "outcome": "passed"}}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_analyze_log_files", "lineno": 22, "outcome": "passed", "keywords": ["test_analyze_log_files", "test_log_analyzer.py", "transaction_log_analysis", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00032938597723841667, "outcome": "passed"}, "call": {"duration": 0.0005609150975942612, "outcome": "passed", "log": [{"name": "common.utils.file_utils", "msg": "Error getting stats for /var/lib/mysql/mysql-bin.000001: [Errno 2] No such file or directory: '/var/lib/mysql/mysql-bin.000001'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360147.0616033, "msecs": 61.0, "relativeCreated": 2084.1729640960693, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}, {"name": "common.utils.file_utils", "msg": "Error getting stats for /var/lib/postgresql/data/pg_wal/000000010000000A00000001: [Errno 2] No such file or directory: '/var/lib/postgresql/data/pg_wal/000000010000000A00000001'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360147.0617626, "msecs": 61.0, "relativeCreated": 2084.332227706909, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}]}, "teardown": {"duration": 0.00021322607062757015, "outcome": "passed"}}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_detect_growth_pattern", "lineno": 41, "outcome": "passed", "keywords": ["test_detect_growth_pattern", "test_log_analyzer.py", "transaction_log_analysis", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0001742399763315916, "outcome": "passed"}, "call": {"duration": 0.5771611090749502, "outcome": "passed"}, "teardown": {"duration": 0.00024721003137528896, "outcome": "passed"}}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_correlate_with_operations", "lineno": 92, "outcome": "passed", "keywords": ["test_correlate_with_operations", "test_log_analyzer.py", "transaction_log_analysis", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00021690106950700283, "outcome": "passed"}, "call": {"duration": 0.0007727420888841152, "outcome": "passed"}, "teardown": {"duration": 0.00019031181000173092, "outcome": "passed"}}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_generate_retention_recommendations", "lineno": 143, "outcome": "passed", "keywords": ["test_generate_retention_recommendations", "test_log_analyzer.py", "transaction_log_analysis", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00018597813323140144, "outcome": "passed"}, "call": {"duration": 0.0003967189695686102, "outcome": "passed"}, "teardown": {"duration": 0.00016918196342885494, "outcome": "passed"}}, {"nodeid": "tests/db_admin/transaction_log_analysis/test_log_analyzer.py::test_analyze_logs", "lineno": 170, "outcome": "passed", "keywords": ["test_analyze_logs", "test_log_analyzer.py", "transaction_log_analysis", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00037228805013000965, "outcome": "passed"}, "call": {"duration": 0.0016472958959639072, "outcome": "passed", "log": [{"name": "common.utils.file_utils", "msg": "Error getting stats for /var/lib/mysql/mysql-bin.000001: [Errno 2] No such file or directory: '/var/lib/mysql/mysql-bin.000001'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360147.645666, "msecs": 645.0, "relativeCreated": 2668.2355403900146, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}, {"name": "common.utils.file_utils", "msg": "Error getting stats for /var/lib/postgresql/data/pg_wal/000000010000000A00000001: [Errno 2] No such file or directory: '/var/lib/postgresql/data/pg_wal/000000010000000A00000001'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360147.6458204, "msecs": 645.0, "relativeCreated": 2668.3900356292725, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}]}, "teardown": {"duration": 0.00026050698943436146, "outcome": "passed"}}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_get_file_stats", "lineno": 16, "outcome": "passed", "keywords": ["test_get_file_stats", "test_file_utils.py", "utils", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0006021470762789249, "outcome": "passed"}, "call": {"duration": 0.0005259399767965078, "outcome": "passed", "log": [{"name": "common.utils.file_utils", "msg": "Error getting stats for /home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/tests/db_admin/mock_data/nonexistent.txt: [Errno 2] No such file or directory: '/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/tests/db_admin/mock_data/nonexistent.txt'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360147.6493409, "msecs": 649.0, "relativeCreated": 2671.910524368286, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}]}, "teardown": {"duration": 0.00020251795649528503, "outcome": "passed"}}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_find_files", "lineno": 43, "outcome": "passed", "keywords": ["test_find_files", "test_file_utils.py", "utils", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0002960111014544964, "outcome": "passed"}, "call": {"duration": 0.004132870119065046, "outcome": "passed"}, "teardown": {"duration": 0.00020837807096540928, "outcome": "passed"}}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_calculate_dir_size", "lineno": 70, "outcome": "passed", "keywords": ["test_calculate_dir_size", "test_file_utils.py", "utils", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00028951698914170265, "outcome": "passed"}, "call": {"duration": 0.0012801268603652716, "outcome": "passed"}, "teardown": {"duration": 0.0002135301474481821, "outcome": "passed"}}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_get_disk_usage", "lineno": 87, "outcome": "passed", "keywords": ["test_get_disk_usage", "test_file_utils.py", "utils", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.00029942882247269154, "outcome": "passed"}, "call": {"duration": 0.00026606698520481586, "outcome": "passed"}, "teardown": {"duration": 0.00019607599824666977, "outcome": "passed"}}, {"nodeid": "tests/db_admin/utils/test_file_utils.py::test_estimate_file_growth_rate", "lineno": 104, "outcome": "passed", "keywords": ["test_estimate_file_growth_rate", "test_file_utils.py", "utils", "db_admin", "tests", "unified", ""], "setup": {"duration": 0.0001718001440167427, "outcome": "passed"}, "call": {"duration": 0.00028230808675289154, "outcome": "passed"}, "teardown": {"duration": 0.000170891173183918, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry::test_audit_entry_creation", "lineno": 26, "outcome": "passed", "keywords": ["test_audit_entry_creation", "TestAuditEntry", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0004195549990981817, "outcome": "passed"}, "call": {"duration": 0.0003626248799264431, "outcome": "passed"}, "teardown": {"duration": 0.00017893710173666477, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry::test_audit_entry_hashing", "lineno": 45, "outcome": "passed", "keywords": ["test_audit_entry_hashing", "TestAuditEntry", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016731489449739456, "outcome": "passed"}, "call": {"duration": 0.0003839130513370037, "outcome": "passed"}, "teardown": {"duration": 0.00017083087004721165, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditEntry::test_audit_entry_serialization", "lineno": 75, "outcome": "passed", "keywords": ["test_audit_entry_serialization", "TestAuditEntry", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00018384680151939392, "outcome": "passed"}, "call": {"duration": 0.0003445390611886978, "outcome": "passed"}, "teardown": {"duration": 0.0001687430776655674, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_audit_log_creation", "lineno": 110, "outcome": "passed", "keywords": ["test_audit_log_creation", "TestAuditLog", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017427606508135796, "outcome": "passed"}, "call": {"duration": 0.00023782788775861263, "outcome": "passed"}, "teardown": {"duration": 0.00016714981757104397, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_add_entries", "lineno": 121, "outcome": "passed", "keywords": ["test_add_entries", "TestAuditLog", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016710907220840454, "outcome": "passed"}, "call": {"duration": 0.0004495750181376934, "outcome": "passed"}, "teardown": {"duration": 0.00016460008919239044, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_log_integrity_verification", "lineno": 150, "outcome": "passed", "keywords": ["test_log_integrity_verification", "TestAuditLog", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017981603741645813, "outcome": "passed"}, "call": {"duration": 0.0008144869934767485, "outcome": "passed"}, "teardown": {"duration": 0.00016905996017158031, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLog::test_log_serialization", "lineno": 176, "outcome": "passed", "keywords": ["test_log_serialization", "TestAuditLog", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017440295778214931, "outcome": "passed"}, "call": {"duration": 0.0005191110540181398, "outcome": "passed"}, "teardown": {"duration": 0.0001821480691432953, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_logger_initialization", "lineno": 204, "outcome": "passed", "keywords": ["test_logger_initialization", "TestAuditLogger", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0001730690710246563, "outcome": "passed"}, "call": {"duration": 0.0005777089390903711, "outcome": "passed"}, "teardown": {"duration": 0.00016835308633744717, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_logging_events", "lineno": 215, "outcome": "passed", "keywords": ["test_logging_events", "TestAuditLogger", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0001705419272184372, "outcome": "passed"}, "call": {"duration": 0.0004590088501572609, "outcome": "passed"}, "teardown": {"duration": 0.00017484999261796474, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_logger_with_crypto_provider", "lineno": 244, "outcome": "passed", "keywords": ["test_logger_with_crypto_provider", "TestAuditLogger", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017013493925333023, "outcome": "passed"}, "call": {"duration": 0.06606560107320547, "outcome": "passed"}, "teardown": {"duration": 0.00022814911790192127, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_saving_and_loading_log", "lineno": 275, "outcome": "passed", "keywords": ["test_saving_and_loading_log", "TestAuditLogger", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.001968200085684657, "outcome": "passed"}, "call": {"duration": 0.0008423218969255686, "outcome": "passed"}, "teardown": {"duration": 0.00024252780713140965, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_audit.py::TestAuditLogger::test_filtering_log_entries", "lineno": 304, "outcome": "passed", "keywords": ["test_filtering_log_entries", "TestAuditLogger", "test_audit.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00018020207062363625, "outcome": "passed"}, "call": {"duration": 0.0005389279685914516, "outcome": "passed"}, "teardown": {"duration": 0.00017735594883561134, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidenceItems::test_evidence_item_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_evidence_item_creation", "TestEvidenceItems", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.000553190940991044, "outcome": "passed"}, "call": {"duration": 0.00033918186090886593, "outcome": "passed"}, "teardown": {"duration": 0.00020491587929427624, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidenceItems::test_evidence_access_logging", "lineno": 56, "outcome": "passed", "keywords": ["test_evidence_access_logging", "TestEvidenceItems", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017289817333221436, "outcome": "passed"}, "call": {"duration": 0.00024406402371823788, "outcome": "passed"}, "teardown": {"duration": 0.00016487203538417816, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_package_creation", "lineno": 80, "outcome": "passed", "keywords": ["test_package_creation", "TestEvidencePackage", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0001735091209411621, "outcome": "passed"}, "call": {"duration": 0.00024946918711066246, "outcome": "passed"}, "teardown": {"duration": 0.00016151601448655128, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_add_evidence_items", "lineno": 96, "outcome": "passed", "keywords": ["test_add_evidence_items", "TestEvidencePackage", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005228058435022831, "outcome": "passed"}, "call": {"duration": 0.058302509132772684, "outcome": "passed"}, "teardown": {"duration": 0.00022265384905040264, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_package_signing_and_verification", "lineno": 136, "outcome": "passed", "keywords": ["test_package_signing_and_verification", "TestEvidencePackage", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.000197218032553792, "outcome": "passed"}, "call": {"duration": 0.13852259214036167, "outcome": "passed"}, "teardown": {"duration": 0.00018286192789673805, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackage::test_log_access", "lineno": 178, "outcome": "passed", "keywords": ["test_log_access", "TestEvidencePackage", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0001820758916437626, "outcome": "passed"}, "call": {"duration": 0.0002965319436043501, "outcome": "passed"}, "teardown": {"duration": 0.00017267907969653606, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_create_evidence_package", "lineno": 215, "outcome": "passed", "keywords": ["test_create_evidence_package", "TestEvidencePackager", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.000170120969414711, "outcome": "passed"}, "call": {"duration": 0.00025151902809739113, "outcome": "passed"}, "teardown": {"duration": 0.00016504386439919472, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_add_file_to_package", "lineno": 231, "outcome": "passed", "keywords": ["test_add_file_to_package", "TestEvidencePackager", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005391729064285755, "outcome": "passed"}, "call": {"duration": 0.0003937911242246628, "outcome": "passed"}, "teardown": {"duration": 0.00020752009004354477, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_verify_package_item", "lineno": 262, "outcome": "passed", "keywords": ["test_verify_package_item", "TestEvidencePackager", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.000545677961781621, "outcome": "passed"}, "call": {"duration": 0.06701710307970643, "outcome": "passed"}, "teardown": {"duration": 0.00025174207985401154, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_custody.py::TestEvidencePackager::test_export_and_import_package", "lineno": 292, "outcome": "passed", "keywords": ["test_export_and_import_package", "TestEvidencePackager", "test_custody.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005427710711956024, "outcome": "passed"}, "call": {"duration": 0.06603128905408084, "outcome": "passed"}, "teardown": {"duration": 0.00023178104311227798, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_pattern_definitions_exist", "lineno": 30, "outcome": "passed", "keywords": ["test_pattern_definitions_exist", "TestPatterns", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0001987770665436983, "outcome": "passed"}, "call": {"duration": 0.00026562088169157505, "outcome": "passed"}, "teardown": {"duration": 0.00017079315148293972, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_pattern_matching", "lineno": 40, "outcome": "passed", "keywords": ["test_pattern_matching", "TestPatterns", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016931002028286457, "outcome": "passed"}, "call": {"duration": 0.00039897183887660503, "outcome": "passed"}, "teardown": {"duration": 0.0001671400386840105, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_pattern_validators", "lineno": 61, "outcome": "passed", "keywords": ["test_pattern_validators", "TestPatterns", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.000167009886354208, "outcome": "passed"}, "call": {"duration": 0.0005177420098334551, "outcome": "passed"}, "teardown": {"duration": 0.00018074596300721169, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_get_patterns_by_category", "lineno": 75, "outcome": "passed", "keywords": ["test_get_patterns_by_category", "TestPatterns", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017334404401481152, "outcome": "passed"}, "call": {"duration": 0.00029891892336308956, "outcome": "passed"}, "teardown": {"duration": 0.00016499310731887817, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestPatterns::test_get_patterns_by_sensitivity", "lineno": 85, "outcome": "passed", "keywords": ["test_get_patterns_by_sensitivity", "TestPatterns", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016796402633190155, "outcome": "passed"}, "call": {"duration": 0.0002852219622582197, "outcome": "passed"}, "teardown": {"duration": 0.0001606089062988758, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scanner_initialization", "lineno": 99, "outcome": "passed", "keywords": ["test_scanner_initialization", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017500808462500572, "outcome": "passed"}, "call": {"duration": 0.0003744692075997591, "outcome": "passed"}, "teardown": {"duration": 0.0001703919842839241, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_file_ignore_rules", "lineno": 118, "outcome": "passed", "keywords": ["test_file_ignore_rules", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005417531356215477, "outcome": "passed"}, "call": {"duration": 0.07948348997160792, "outcome": "passed"}, "teardown": {"duration": 0.0003066370263695717, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_file_with_sensitive_data", "lineno": 140, "outcome": "passed", "keywords": ["test_scan_file_with_sensitive_data", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0007130960002541542, "outcome": "passed"}, "call": {"duration": 0.01842361595481634, "outcome": "passed"}, "teardown": {"duration": 0.00023806514218449593, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_file_without_sensitive_data", "lineno": 162, "outcome": "passed", "keywords": ["test_scan_file_without_sensitive_data", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005846230778843164, "outcome": "passed"}, "call": {"duration": 0.004265177994966507, "outcome": "passed"}, "teardown": {"duration": 0.00022839009761810303, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_binary_file", "lineno": 180, "outcome": "passed", "keywords": ["test_scan_binary_file", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005702069029211998, "outcome": "passed"}, "call": {"duration": 0.0019156879279762506, "outcome": "passed"}, "teardown": {"duration": 0.00022277794778347015, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_directory", "lineno": 193, "outcome": "passed", "keywords": ["test_scan_directory", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0005457149818539619, "outcome": "passed"}, "call": {"duration": 0.0014780559577047825, "outcome": "passed"}, "teardown": {"duration": 0.0002173241227865219, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_nonexistent_file", "lineno": 238, "outcome": "passed", "keywords": ["test_scan_nonexistent_file", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00018078298307955265, "outcome": "passed"}, "call": {"duration": 0.0007819780148565769, "outcome": "passed", "log": [{"name": "common.utils.file_utils", "msg": "Error getting stats for /nonexistent/file.txt: [Errno 2] No such file or directory: '/nonexistent/file.txt'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "get_file_stats", "created": 1747360148.2151372, "msecs": 215.0, "relativeCreated": 3237.7068996429443, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}, {"name": "common.utils.file_utils", "msg": "Error detecting file type for /nonexistent/file.txt: [Errno 2] No such file or directory: '/nonexistent/file.txt'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 453, "funcName": "detect_file_type", "created": 1747360148.2153032, "msecs": 215.0, "relativeCreated": 3237.872838973999, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}, {"name": "common.utils.file_utils", "msg": "Error reading file /nonexistent/file.txt: [Errno 2] No such file or directory: '/nonexistent/file.txt'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/common/utils/file_utils.py", "filename": "file_utils.py", "module": "file_utils", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 374, "funcName": "read_file_sample", "created": 1747360148.215403, "msecs": 215.0, "relativeCreated": 3237.9727363586426, "thread": 140468355434304, "threadName": "MainThread", "processName": "MainProcess", "process": 2932368}]}, "teardown": {"duration": 0.00017464603297412395, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_detection.py::TestScanner::test_scan_options_with_specific_patterns", "lineno": 245, "outcome": "passed", "keywords": ["test_scan_options_with_specific_patterns", "TestScanner", "test_detection.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017912103794515133, "outcome": "passed"}, "call": {"duration": 0.00022871792316436768, "outcome": "passed"}, "teardown": {"duration": 0.00017625396139919758, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestBaseline::test_baseline_creation", "lineno": 35, "outcome": "passed", "keywords": ["test_baseline_creation", "TestBaseline", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00019048992544412613, "outcome": "passed"}, "call": {"duration": 0.0002349349670112133, "outcome": "passed"}, "teardown": {"duration": 0.00016372581012547016, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestBaseline::test_baseline_signing_and_verification", "lineno": 51, "outcome": "passed", "keywords": ["test_baseline_signing_and_verification", "TestBaseline", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016493978910148144, "outcome": "passed"}, "call": {"duration": 0.07763179880566895, "outcome": "passed"}, "teardown": {"duration": 0.0001929430291056633, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_create_baseline", "lineno": 234, "outcome": "passed", "keywords": ["test_create_baseline", "TestDifferentialAnalyzer", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00032584089785814285, "outcome": "passed"}, "call": {"duration": 0.0002866438589990139, "outcome": "passed"}, "teardown": {"duration": 0.00019487296231091022, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_save_and_load_baseline", "lineno": 261, "outcome": "passed", "keywords": ["test_save_and_load_baseline", "TestDifferentialAnalyzer", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0006657920312136412, "outcome": "passed"}, "call": {"duration": 0.000600599916651845, "outcome": "passed"}, "teardown": {"duration": 0.00023478921502828598, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_signed_baseline", "lineno": 295, "outcome": "passed", "keywords": ["test_signed_baseline", "TestDifferentialAnalyzer", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0006503229960799217, "outcome": "passed"}, "call": {"duration": 0.09740886487998068, "outcome": "passed"}, "teardown": {"duration": 0.0002535460516810417, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_compare_unchanged", "lineno": 321, "outcome": "passed", "keywords": ["test_compare_unchanged", "TestDifferentialAnalyzer", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0003051809035241604, "outcome": "passed"}, "call": {"duration": 0.0003242921084165573, "outcome": "passed"}, "teardown": {"duration": 0.00019720196723937988, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_compare_with_changes", "lineno": 345, "outcome": "passed", "keywords": ["test_compare_with_changes", "TestDifferentialAnalyzer", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00041189021430909634, "outcome": "passed"}, "call": {"duration": 0.00031970487907528877, "outcome": "passed"}, "teardown": {"duration": 0.00023504998534917831, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_differential.py::TestDifferentialAnalyzer::test_compare_with_removals", "lineno": 384, "outcome": "passed", "keywords": ["test_compare_with_removals", "TestDifferentialAnalyzer", "test_differential.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0003029750660061836, "outcome": "passed"}, "call": {"duration": 0.00028485991060733795, "outcome": "passed"}, "teardown": {"duration": 0.00019837706349790096, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_framework_registry", "lineno": 44, "outcome": "passed", "keywords": ["test_framework_registry", "TestComplianceFrameworks", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00019193999469280243, "outcome": "passed"}, "call": {"duration": 0.00044262991286814213, "outcome": "passed"}, "teardown": {"duration": 0.00017179991118609905, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_gdpr_framework", "lineno": 71, "outcome": "passed", "keywords": ["test_gdpr_framework", "TestComplianceFrameworks", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016930396668612957, "outcome": "passed"}, "call": {"duration": 0.0002673568669706583, "outcome": "passed"}, "teardown": {"duration": 0.00015873415395617485, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_hipaa_framework", "lineno": 90, "outcome": "passed", "keywords": ["test_hipaa_framework", "TestComplianceFrameworks", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017357501201331615, "outcome": "passed"}, "call": {"duration": 0.00023724394850432873, "outcome": "passed"}, "teardown": {"duration": 0.00015932321548461914, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_pci_dss_framework", "lineno": 104, "outcome": "passed", "keywords": ["test_pci_dss_framework", "TestComplianceFrameworks", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016614701598882675, "outcome": "passed"}, "call": {"duration": 0.0002463331911712885, "outcome": "passed"}, "teardown": {"duration": 0.0001595979556441307, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_sox_framework", "lineno": 118, "outcome": "passed", "keywords": ["test_sox_framework", "TestComplianceFrameworks", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00016273208893835545, "outcome": "passed"}, "call": {"duration": 0.00023390096612274647, "outcome": "passed"}, "teardown": {"duration": 0.00015885289758443832, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestComplianceFrameworks::test_frameworks_for_category", "lineno": 132, "outcome": "passed", "keywords": ["test_frameworks_for_category", "TestComplianceFrameworks", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00017911987379193306, "outcome": "passed"}, "call": {"duration": 0.00024424493312835693, "outcome": "passed"}, "teardown": {"duration": 0.00015777908265590668, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_generator_gdpr", "lineno": 231, "outcome": "passed", "keywords": ["test_report_generator_gdpr", "TestReportGeneration", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00032454589381814003, "outcome": "passed"}, "call": {"duration": 0.00039450288750231266, "outcome": "passed"}, "teardown": {"duration": 0.00020225089974701405, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_generator_pci", "lineno": 259, "outcome": "passed", "keywords": ["test_report_generator_pci", "TestReportGeneration", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00030394201166927814, "outcome": "passed"}, "call": {"duration": 0.00034408504143357277, "outcome": "passed"}, "teardown": {"duration": 0.00020750914700329304, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_metrics", "lineno": 287, "outcome": "passed", "keywords": ["test_report_metrics", "TestReportGeneration", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00030181906186044216, "outcome": "passed"}, "call": {"duration": 0.0003734959755092859, "outcome": "passed"}, "teardown": {"duration": 0.00019401195459067822, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_serialization", "lineno": 303, "outcome": "passed", "keywords": ["test_report_serialization", "TestReportGeneration", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.00029443507082760334, "outcome": "passed"}, "call": {"duration": 0.0005346268881112337, "outcome": "passed"}, "teardown": {"duration": 0.00020390702411532402, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_signing_and_verification", "lineno": 324, "outcome": "passed", "keywords": ["test_report_signing_and_verification", "TestReportGeneration", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0002960630226880312, "outcome": "passed"}, "call": {"duration": 0.05802222597412765, "outcome": "passed"}, "teardown": {"duration": 0.00021861400455236435, "outcome": "passed"}}, {"nodeid": "tests/security_auditor/test_reporting.py::TestReportGeneration::test_report_saving", "lineno": 361, "outcome": "passed", "keywords": ["test_report_saving", "TestReportGeneration", "test_reporting.py", "security_auditor", "tests", "unified", ""], "setup": {"duration": 0.0006860368885099888, "outcome": "passed"}, "call": {"duration": 0.05372854811139405, "outcome": "passed"}, "teardown": {"duration": 0.0005782300140708685, "outcome": "passed"}}], "warnings": [{"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "The `copy` method is deprecated; use `model_copy` instead. See the docstring of `BaseModel.copy` for details about how to handle `include` and `exclude`. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/index_efficiency/test_index_analyzer.py", "lineno": 54}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 82}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 82}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 297}, {"message": "The `json` method is deprecated; use `model_dump_json` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 325}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 111}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 422}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 439}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 143}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 143}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/file_system_analyzer_db_admin/tests/interfaces/test_api.py", "lineno": 143}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 532}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 562}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 667}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/interfaces/api.py", "lineno": 699}, {"message": "divide by zero encountered in scalar divide", "category": "RuntimeWarning", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/transaction_log_analysis/log_analyzer.py", "lineno": 259}, {"message": "divide by zero encountered in scalar divide", "category": "RuntimeWarning", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/file_system_analyzer/unified/file_system_analyzer_db_admin/transaction_log_analysis/log_analyzer.py", "lineno": 272}]}