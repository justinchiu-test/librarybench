{"created": 1747351076.4353428, "duration": 8.701982498168945, "exitcode": 1, "root": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified", "environment": {}, "summary": {"passed": 159, "failed": 23, "skipped": 12, "total": 194, "collected": 194}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/digital_artist/test_asset_tracker.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_asset_tracker.py::test_scan_project", "type": "Function", "lineno": 13}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_get_referenced_assets", "type": "Function", "lineno": 42}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_asset_deduplication", "type": "Function", "lineno": 55}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_update_reference", "type": "Function", "lineno": 102}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_error_handling_for_nonexistent_files", "type": "Function", "lineno": 135}]}, {"nodeid": "tests/digital_artist/test_backup_engine.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_backup_engine.py::test_initialize_repository", "type": "Function", "lineno": 14}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_create_snapshot", "type": "Function", "lineno": 35}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_restore_snapshot", "type": "Function", "lineno": 52}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_get_snapshot_info", "type": "Function", "lineno": 78}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_list_snapshots", "type": "Function", "lineno": 98}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_incremental_backup", "type": "Function", "lineno": 115}]}, {"nodeid": "tests/digital_artist/test_data", "outcome": "passed", "result": []}, {"nodeid": "tests/digital_artist/test_element_extraction.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_element_extraction.py::test_list_elements_for_image", "type": "Function", "lineno": 13}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_extract_whole_image", "type": "Function", "lineno": 33}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_extract_image_region", "type": "Function", "lineno": 58}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_replace_image_region", "type": "Function", "lineno": 87}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_list_elements_for_3d_model", "type": "Function", "lineno": 122}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_extract_whole_model", "type": "Function", "lineno": 138}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_error_handling_for_invalid_element", "type": "Function", "lineno": 161}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_error_handling_for_nonexistent_file", "type": "Function", "lineno": 168}]}, {"nodeid": "tests/digital_artist/test_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_integration.py::test_full_backup_restore_workflow", "type": "Function", "lineno": 14}, {"nodeid": "tests/digital_artist/test_integration.py::test_version_comparison_workflow", "type": "Function", "lineno": 46}, {"nodeid": "tests/digital_artist/test_integration.py::test_element_extraction_workflow", "type": "Function", "lineno": 91}, {"nodeid": "tests/digital_artist/test_integration.py::test_asset_deduplication_workflow", "type": "Function", "lineno": 121}, {"nodeid": "tests/digital_artist/test_integration.py::test_multi_snapshot_timeline", "type": "Function", "lineno": 168}]}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_register_version", "type": "Function", "lineno": 35}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_get_file_timeline", "type": "Function", "lineno": 57}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_generate_thumbnail", "type": "Function", "lineno": 86}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_compare_versions", "type": "Function", "lineno": 112}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_timeline_filtering_by_time_range", "type": "Function", "lineno": 152}]}, {"nodeid": "tests/digital_artist/test_timeline_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager", "type": "Class"}]}, {"nodeid": "tests/digital_artist/test_visual_diff.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_visual_diff.py::test_generate_image_diff", "type": "Function", "lineno": 13}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_generate_model_diff", "type": "Function", "lineno": 27}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_get_diff_stats_for_images", "type": "Function", "lineno": 41}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_get_diff_stats_for_models", "type": "Function", "lineno": 62}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_diff_generation_with_custom_output_path", "type": "Function", "lineno": 81}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_error_handling_for_nonexistent_files", "type": "Function", "lineno": 98}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_diff_for_different_image_sizes", "type": "Function", "lineno": 111}]}, {"nodeid": "tests/digital_artist/test_workspace_capture.py", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_workspace_capture.py::test_get_supported_applications", "type": "Function", "lineno": 14}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_get_application_info", "type": "Function", "lineno": 30}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_capture_workspace_mock", "type": "Function", "lineno": 53}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_restore_workspace_mock", "type": "Function", "lineno": 113}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_error_handling_for_nonexistent_workspace", "type": "Function", "lineno": 167}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_list_workspace_states", "type": "Function", "lineno": 176}]}, {"nodeid": "tests/digital_artist", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist/test_asset_tracker.py", "type": "Module"}, {"nodeid": "tests/digital_artist/test_backup_engine.py", "type": "Module"}, {"nodeid": "tests/digital_artist/test_data", "type": "Package"}, {"nodeid": "tests/digital_artist/test_element_extraction.py", "type": "Module"}, {"nodeid": "tests/digital_artist/test_integration.py", "type": "Module"}, {"nodeid": "tests/digital_artist/test_timeline_manager.py", "type": "Module"}, {"nodeid": "tests/digital_artist/test_visual_diff.py", "type": "Module"}, {"nodeid": "tests/digital_artist/test_workspace_capture.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_base_chunker", "type": "Function", "lineno": 62}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_texture_chunker", "type": "Function", "lineno": 84}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_audio_chunker", "type": "Function", "lineno": 105}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_model_chunker", "type": "Function", "lineno": 125}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_chunker_factory", "type": "Function", "lineno": 145}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_chunker_edge_cases", "type": "Function", "lineno": 170}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_chunk_size_constraints", "type": "Function", "lineno": 192}]}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_base_compressor", "type": "Function", "lineno": 32}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_texture_compressor", "type": "Function", "lineno": 54}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_audio_compressor", "type": "Function", "lineno": 69}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_model_compressor", "type": "Function", "lineno": 84}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_compressor_factory", "type": "Function", "lineno": 99}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_delta_compressor", "type": "Function", "lineno": 124}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_compression_levels", "type": "Function", "lineno": 167}]}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_add_chunk", "type": "Function", "lineno": 33}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_remove_chunk", "type": "Function", "lineno": 63}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_remove_file", "type": "Function", "lineno": 97}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_get_duplicate_chunks", "type": "Function", "lineno": 126}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_get_storage_savings", "type": "Function", "lineno": 158}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_get_file_sharing_stats", "type": "Function", "lineno": 192}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_asset_deduplicator_deduplicate_file", "type": "Function", "lineno": 217}]}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_optimize_text_file", "type": "Function", "lineno": 65}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_optimize_binary_file", "type": "Function", "lineno": 77}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_optimize_with_previous_version", "type": "Function", "lineno": 95}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_restore_asset", "type": "Function", "lineno": 121}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_get_optimization_stats", "type": "Function", "lineno": 148}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_get_shared_asset_analysis", "type": "Function", "lineno": 164}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_delta_compression", "type": "Function", "lineno": 177}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_get_base_version", "type": "Function", "lineno": 264}]}, {"nodeid": "tests/game_developer/asset_optimization", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/asset_optimization/test_chunking.py", "type": "Module"}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py", "type": "Module"}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py", "type": "Module"}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_fixed_size_chunker", "type": "Function", "lineno": 32}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_rolling_hash_chunker", "type": "Function", "lineno": 62}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_game_asset_chunker", "type": "Function", "lineno": 98}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_chunker_edge_cases", "type": "Function", "lineno": 132}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_chunker_consistency", "type": "Function", "lineno": 153}]}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_create_backup", "type": "Function", "lineno": 55}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_incremental_backup", "type": "Function", "lineno": 81}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_restore_version", "type": "Function", "lineno": 119}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_restore_with_exclusions", "type": "Function", "lineno": 151}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_get_version_diff", "type": "Function", "lineno": 174}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_get_storage_stats", "type": "Function", "lineno": 198}]}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_store_file", "type": "Function", "lineno": 45}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_retrieve_file", "type": "Function", "lineno": 58}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_store_and_retrieve_chunks", "type": "Function", "lineno": 82}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_remove_file", "type": "Function", "lineno": 100}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_remove_chunk", "type": "Function", "lineno": 120}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_get_storage_size", "type": "Function", "lineno": 140}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_file_not_found", "type": "Function", "lineno": 164}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_chunk_not_found", "type": "Function", "lineno": 170}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_idempotent_storage", "type": "Function", "lineno": 176}]}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_create_version", "type": "Function", "lineno": 53}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_create_version_with_parent", "type": "Function", "lineno": 86}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_version", "type": "Function", "lineno": 113}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_list_versions", "type": "Function", "lineno": 130}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_version_history", "type": "Function", "lineno": 145}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_milestones", "type": "Function", "lineno": 162}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_versions_by_tag", "type": "Function", "lineno": 180}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_versions_by_type", "type": "Function", "lineno": 203}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_delete_version", "type": "Function", "lineno": 238}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_version_not_found", "type": "Function", "lineno": 266}]}, {"nodeid": "tests/game_developer/backup_engine", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/backup_engine/test_chunking.py", "type": "Module"}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py", "type": "Module"}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py", "type": "Module"}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_common_terms", "type": "Function", "lineno": 137}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_feedback_over_time", "type": "Function", "lineno": 161}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_identify_recurring_issues", "type": "Function", "lineno": 180}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_sentiment_distribution", "type": "Function", "lineno": 198}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_analyze_feature_feedback", "type": "Function", "lineno": 213}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_player_engagement", "type": "Function", "lineno": 227}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_player_engagement_no_feedback", "type": "Function", "lineno": 247}]}, {"nodeid": "tests/game_developer/feedback_system/test_database.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/feedback_system/test_database.py::test_add_feedback", "type": "Function", "lineno": 37}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_update_feedback", "type": "Function", "lineno": 60}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_delete_feedback", "type": "Function", "lineno": 87}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_list_feedback", "type": "Function", "lineno": 107}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_count_feedback", "type": "Function", "lineno": 183}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_get_feedback_by_versions", "type": "Function", "lineno": 224}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_get_feedback_stats", "type": "Function", "lineno": 273}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_update_nonexistent_feedback", "type": "Function", "lineno": 313}]}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_feedback", "type": "Function", "lineno": 44}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_feedback_invalid_version", "type": "Function", "lineno": 73}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_update_feedback", "type": "Function", "lineno": 85}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_delete_feedback", "type": "Function", "lineno": 110}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_mark_feedback_resolved", "type": "Function", "lineno": 131}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_tags_to_feedback", "type": "Function", "lineno": 159}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_remove_tags_from_feedback", "type": "Function", "lineno": 186}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_metadata_to_feedback", "type": "Function", "lineno": 208}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_get_feedback_for_version", "type": "Function", "lineno": 235}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_get_feedback_for_invalid_version", "type": "Function", "lineno": 265}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_get_feedback_for_player", "type": "Function", "lineno": 271}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_search_feedback", "type": "Function", "lineno": 292}]}, {"nodeid": "tests/game_developer/feedback_system", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/feedback_system/test_analysis.py", "type": "Module"}, {"nodeid": "tests/game_developer/feedback_system/test_database.py", "type": "Module"}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_complete_game_development_cycle", "type": "Function", "lineno": 110}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_milestone_annotations", "type": "Function", "lineno": 368}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_platform_specific_features", "type": "Function", "lineno": 422}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_configuration_management_across_platforms", "type": "Function", "lineno": 487}]}, {"nodeid": "tests/game_developer/integration", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/integration/test_game_development_workflow.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_create_milestone", "type": "Function", "lineno": 137}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_create_milestone_no_backup_engine", "type": "Function", "lineno": 175}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_get_milestone", "type": "Function", "lineno": 227}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_get_nonexistent_milestone", "type": "Function", "lineno": 259}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_update_milestone_annotations", "type": "Function", "lineno": 265}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_update_nonexistent_milestone", "type": "Function", "lineno": 303}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_list_milestones", "type": "Function", "lineno": 309}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_restore_milestone", "type": "Function", "lineno": 350}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_restore_without_backup_engine", "type": "Function", "lineno": 374}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_compare_milestones", "type": "Function", "lineno": 383}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_compare_with_annotation_changes", "type": "Function", "lineno": 404}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_delete_milestone", "type": "Function", "lineno": 453}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_get_milestone_timeline", "type": "Function", "lineno": 481}]}, {"nodeid": "tests/game_developer/milestone_management", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/milestone_management/test_manager.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_initial_backup_performance[100-100]", "type": "Function", "lineno": 139}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_initial_backup_performance[500-200]", "type": "Function", "lineno": 139}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_incremental_backup_performance", "type": "Function", "lineno": 183}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_asset_optimization_efficiency", "type": "Function", "lineno": 216}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_build_feedback_correlation_performance", "type": "Function", "lineno": 253}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_milestone_snapshot_performance", "type": "Function", "lineno": 311}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_platform_config_comparison_performance", "type": "Function", "lineno": 351}]}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_playtest_event_recording_performance", "type": "Function", "lineno": 38}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_checkpoint_storage_performance", "type": "Function", "lineno": 99}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_playtest_analysis_performance", "type": "Function", "lineno": 141}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_high_frequency_event_recording", "type": "Function", "lineno": 225}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_large_batch_processing", "type": "Function", "lineno": 287}]}, {"nodeid": "tests/game_developer/performance", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/performance/test_backup_performance.py", "type": "Module"}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/platform_config/test_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/platform_config/test_manager.py::test_save_and_get_config", "type": "Function", "lineno": 84}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_list_platforms", "type": "Function", "lineno": 107}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_list_versions", "type": "Function", "lineno": 124}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_configs_same_platform", "type": "Function", "lineno": 150}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_configs_different_platforms", "type": "Function", "lineno": 193}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_platforms", "type": "Function", "lineno": 236}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_versions", "type": "Function", "lineno": 289}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_get_version_history", "type": "Function", "lineno": 337}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_delete_config", "type": "Function", "lineno": 375}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_create_config_template", "type": "Function", "lineno": 403}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_copy_config", "type": "Function", "lineno": 428}]}, {"nodeid": "tests/game_developer/platform_config", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/platform_config/test_manager.py", "type": "Module"}]}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_session_summary", "type": "Function", "lineno": 155}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_session_summary_not_found", "type": "Function", "lineno": 174}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_compare_sessions", "type": "Function", "lineno": 180}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_version_statistics", "type": "Function", "lineno": 203}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_version_statistics_no_sessions", "type": "Function", "lineno": 229}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_compare_versions", "type": "Function", "lineno": 239}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_player_statistics", "type": "Function", "lineno": 279}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_player_statistics_no_sessions", "type": "Function", "lineno": 313}]}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_start_session", "type": "Function", "lineno": 21}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_end_session", "type": "Function", "lineno": 43}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_record_event", "type": "Function", "lineno": 64}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_update_metrics", "type": "Function", "lineno": 101}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_save_and_get_checkpoint", "type": "Function", "lineno": 126}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_list_sessions", "type": "Function", "lineno": 167}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_delete_session", "type": "Function", "lineno": 193}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_get_analyzer", "type": "Function", "lineno": 216}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_active_session_buffering", "type": "Function", "lineno": 223}]}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_save_and_get_session", "type": "Function", "lineno": 52}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_delete_session", "type": "Function", "lineno": 76}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_list_sessions", "type": "Function", "lineno": 96}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_save_and_get_checkpoint", "type": "Function", "lineno": 181}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_save_checkpoint_invalid_session", "type": "Function", "lineno": 209}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_list_checkpoints", "type": "Function", "lineno": 219}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_add_event_to_session", "type": "Function", "lineno": 242}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_update_session_metrics", "type": "Function", "lineno": 265}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_mark_session_completed", "type": "Function", "lineno": 288}]}, {"nodeid": "tests/game_developer/playtest_recorder", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py", "type": "Module"}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py", "type": "Module"}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py", "type": "Module"}]}, {"nodeid": "tests/game_developer", "outcome": "passed", "result": [{"nodeid": "tests/game_developer/asset_optimization", "type": "Package"}, {"nodeid": "tests/game_developer/backup_engine", "type": "Package"}, {"nodeid": "tests/game_developer/feedback_system", "type": "Package"}, {"nodeid": "tests/game_developer/integration", "type": "Package"}, {"nodeid": "tests/game_developer/milestone_management", "type": "Package"}, {"nodeid": "tests/game_developer/performance", "type": "Package"}, {"nodeid": "tests/game_developer/platform_config", "type": "Package"}, {"nodeid": "tests/game_developer/playtest_recorder", "type": "Package"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/digital_artist", "type": "Package"}, {"nodeid": "tests/game_developer", "type": "Package"}]}], "tests": [{"nodeid": "tests/digital_artist/test_asset_tracker.py::test_scan_project", "lineno": 13, "outcome": "passed", "keywords": ["test_scan_project", "test_asset_tracker.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.006605203030630946, "outcome": "passed"}, "call": {"duration": 0.0012501620221883059, "outcome": "passed"}, "teardown": {"duration": 0.00056091183796525, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_get_referenced_assets", "lineno": 42, "outcome": "passed", "keywords": ["test_get_referenced_assets", "test_asset_tracker.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0027365940622985363, "outcome": "passed"}, "call": {"duration": 0.0009396690875291824, "outcome": "passed"}, "teardown": {"duration": 0.0005154469981789589, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_asset_deduplication", "lineno": 55, "outcome": "passed", "keywords": ["test_asset_deduplication", "test_asset_tracker.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.002720806049183011, "outcome": "passed"}, "call": {"duration": 0.0032425159588456154, "outcome": "passed"}, "teardown": {"duration": 0.0005750809796154499, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_update_reference", "lineno": 102, "outcome": "passed", "keywords": ["test_update_reference", "test_asset_tracker.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.002724402118474245, "outcome": "passed"}, "call": {"duration": 0.0010675839148461819, "outcome": "passed"}, "teardown": {"duration": 0.0005331998690962791, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_asset_tracker.py::test_error_handling_for_nonexistent_files", "lineno": 135, "outcome": "passed", "keywords": ["test_error_handling_for_nonexistent_files", "test_asset_tracker.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0004067900590598583, "outcome": "passed"}, "call": {"duration": 0.0002674148418009281, "outcome": "passed"}, "teardown": {"duration": 0.0002600620500743389, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_initialize_repository", "lineno": 14, "outcome": "failed", "keywords": ["test_initialize_repository", "test_backup_engine.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00025328691117465496, "outcome": "passed"}, "call": {"duration": 0.0006848620250821114, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_digital_artist/tests/test_backup_engine.py", "lineno": 26, "message": "assert False is True"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_backup_engine.py", "lineno": 26, "message": "AssertionError"}], "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n", "longrepr": "temp_dir = PosixPath('/tmp/tmp3dtlguel')\n\n    def test_initialize_repository(temp_dir):\n        \"\"\"Test initializing a new backup repository.\"\"\"\n        # Create a backup engine\n        repo_path = temp_dir / \"test_repo\"\n        config = BackupConfig(repository_path=repo_path)\n        engine = DeltaBackupEngine(config)\n    \n        # Initialize the repository\n        result = engine.initialize_repository(repo_path)\n    \n        # Check the result\n>       assert result is True\nE       assert False is True\n\n../incremental_backup_system_digital_artist/tests/test_backup_engine.py:26: AssertionError"}, "teardown": {"duration": 0.0003495430573821068, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_create_snapshot", "lineno": 35, "outcome": "failed", "keywords": ["test_create_snapshot", "test_backup_engine.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0031100010965019464, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.002837780863046646, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_digital_artist/tests/test_backup_engine.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = <built-in method startswith of str object at 0x7f8a9d3e8990>('snapshot-')\n +    where <built-in method startswith of str object at 0x7f8a9d3e8990> = 'version-creative_vault-1747351068846_506577'.startswith"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_backup_engine.py", "lineno": 43, "message": "AssertionError"}], "longrepr": "backup_engine = <creative_vault.backup_engine.incremental_backup.DeltaBackupEngine object at 0x7f8a9d45bc70>\ntest_project_dir = PosixPath('/tmp/tmpfud_i3sf/test_project')\n\n    def test_create_snapshot(backup_engine, test_project_dir):\n        \"\"\"Test creating a snapshot of a project directory.\"\"\"\n        # Create a snapshot\n        snapshot_id = backup_engine.create_snapshot(test_project_dir)\n    \n        # Check that the snapshot was created\n        assert snapshot_id is not None\n>       assert snapshot_id.startswith(\"snapshot-\")\nE       AssertionError: assert False\nE        +  where False = <built-in method startswith of str object at 0x7f8a9d3e8990>('snapshot-')\nE        +    where <built-in method startswith of str object at 0x7f8a9d3e8990> = 'version-creative_vault-1747351068846_506577'.startswith\n\n../incremental_backup_system_digital_artist/tests/test_backup_engine.py:43: AssertionError"}, "teardown": {"duration": 0.0008783009834587574, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_restore_snapshot", "lineno": 52, "outcome": "passed", "keywords": ["test_restore_snapshot", "test_backup_engine.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.002997246105223894, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.0026526059955358505, "outcome": "passed"}, "teardown": {"duration": 0.0009331339970231056, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_get_snapshot_info", "lineno": 78, "outcome": "passed", "keywords": ["test_get_snapshot_info", "test_backup_engine.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.003002575831487775, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.0020467189606279135, "outcome": "passed"}, "teardown": {"duration": 0.00083380495198071, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_list_snapshots", "lineno": 98, "outcome": "passed", "keywords": ["test_list_snapshots", "test_backup_engine.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.002995943883433938, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.0021909878123551607, "outcome": "passed"}, "teardown": {"duration": 0.0008322300855070353, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_backup_engine.py::test_incremental_backup", "lineno": 115, "outcome": "passed", "keywords": ["test_incremental_backup", "test_backup_engine.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00292805302888155, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.004685867810621858, "outcome": "passed"}, "teardown": {"duration": 0.001055222935974598, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_list_elements_for_image", "lineno": 13, "outcome": "passed", "keywords": ["test_list_elements_for_image", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00047971797175705433, "outcome": "passed"}, "call": {"duration": 0.0002956017851829529, "outcome": "passed"}, "teardown": {"duration": 0.0002842510584741831, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_extract_whole_image", "lineno": 33, "outcome": "passed", "keywords": ["test_extract_whole_image", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0005185292102396488, "outcome": "passed"}, "call": {"duration": 0.005040429998189211, "outcome": "passed"}, "teardown": {"duration": 0.0003058151341974735, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_extract_image_region", "lineno": 58, "outcome": "passed", "keywords": ["test_extract_image_region", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0004675709642469883, "outcome": "passed"}, "call": {"duration": 0.002798589179292321, "outcome": "passed"}, "teardown": {"duration": 0.000313744880259037, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_replace_image_region", "lineno": 87, "outcome": "passed", "keywords": ["test_replace_image_region", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0004652431234717369, "outcome": "passed"}, "call": {"duration": 0.006322027882561088, "outcome": "passed"}, "teardown": {"duration": 0.0003132019191980362, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_list_elements_for_3d_model", "lineno": 122, "outcome": "passed", "keywords": ["test_list_elements_for_3d_model", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0004786951467394829, "outcome": "passed"}, "call": {"duration": 0.0012655160389840603, "outcome": "passed"}, "teardown": {"duration": 0.00031800009310245514, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_extract_whole_model", "lineno": 138, "outcome": "passed", "keywords": ["test_extract_whole_model", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0005008559674024582, "outcome": "passed"}, "call": {"duration": 0.0025994989555329084, "outcome": "passed"}, "teardown": {"duration": 0.0003383699804544449, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_error_handling_for_invalid_element", "lineno": 161, "outcome": "passed", "keywords": ["test_error_handling_for_invalid_element", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0004858388565480709, "outcome": "passed"}, "call": {"duration": 0.00030934601090848446, "outcome": "passed"}, "teardown": {"duration": 0.00028855004347860813, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_element_extraction.py::test_error_handling_for_nonexistent_file", "lineno": 168, "outcome": "passed", "keywords": ["test_error_handling_for_nonexistent_file", "test_element_extraction.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0003244930412620306, "outcome": "passed"}, "call": {"duration": 0.00018976395949721336, "outcome": "passed"}, "teardown": {"duration": 0.0002397489733994007, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_integration.py::test_full_backup_restore_workflow", "lineno": 14, "outcome": "passed", "keywords": ["test_full_backup_restore_workflow", "test_integration.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0025147900450974703, "outcome": "passed"}, "call": {"duration": 0.004075370961800218, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "teardown": {"duration": 0.000993749825283885, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_integration.py::test_version_comparison_workflow", "lineno": 46, "outcome": "failed", "keywords": ["test_version_comparison_workflow", "test_integration.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00260349502786994, "outcome": "passed"}, "call": {"duration": 0.0035716600250452757, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351068925_593419 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_integration.py", "lineno": 61, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n", "longrepr": "temp_dir = PosixPath('/tmp/tmpx2ie30yc')\ntest_project_dir = PosixPath('/tmp/tmpx2ie30yc/test_project')\ntest_image = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image.png')\ntest_image_modified = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image_modified.png')\n\n    def test_version_comparison_workflow(temp_dir, test_project_dir, test_image, test_image_modified):\n        \"\"\"Test the version comparison workflow.\"\"\"\n        # Initialize CreativeVault\n        vault = CreativeVault(repository_path=temp_dir / \"repo\")\n    \n        # Create an image to track in the project directory\n        image_path = test_project_dir / \"images\" / \"test_comparison.png\"\n        shutil.copy(test_image, image_path)\n    \n        # Create an initial backup\n        backup_result = vault.backup_project(test_project_dir)\n        snapshot_id_1 = backup_result[\"snapshot_id\"]\n    \n        # Initialize the timeline for an image file\n>       version_id_1 = vault.timeline_manager.register_version(image_path, snapshot_id_1)\n\n../incremental_backup_system_digital_artist/tests/test_integration.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d45f3d0>\nfile_path = PosixPath('/tmp/tmpx2ie30yc/test_project/images/test_comparison.png')\nsnapshot_id = 'version-creative_vault-1747351068925_593419', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351068925_593419 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.0009275700431317091, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_integration.py::test_element_extraction_workflow", "lineno": 91, "outcome": "passed", "keywords": ["test_element_extraction_workflow", "test_integration.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.002559682121500373, "outcome": "passed"}, "call": {"duration": 0.005441142013296485, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "teardown": {"duration": 0.0006354670040309429, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_integration.py::test_asset_deduplication_workflow", "lineno": 121, "outcome": "passed", "keywords": ["test_asset_deduplication_workflow", "test_integration.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00025809998624026775, "outcome": "passed"}, "call": {"duration": 0.005389691097661853, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "teardown": {"duration": 0.0006370400078594685, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_integration.py::test_multi_snapshot_timeline", "lineno": 168, "outcome": "failed", "keywords": ["test_multi_snapshot_timeline", "test_integration.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.002925559878349304, "outcome": "passed"}, "call": {"duration": 0.00445002899505198, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351068960_121458 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_integration.py", "lineno": 186, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n", "longrepr": "temp_dir = PosixPath('/tmp/tmpeoiymyhm')\ntest_project_dir = PosixPath('/tmp/tmpeoiymyhm/test_project')\n\n    def test_multi_snapshot_timeline(temp_dir, test_project_dir):\n        \"\"\"Test creating multiple snapshots and tracking a file's timeline.\"\"\"\n        # Initialize CreativeVault\n        vault = CreativeVault(repository_path=temp_dir / \"repo\")\n    \n        # Create a test image to track\n        target_image = test_project_dir / \"test_tracked_image.png\"\n    \n        # Create the initial image\n        img = Image.new('RGB', (200, 200), color=(0, 0, 255))\n        img.save(target_image)\n    \n        # Create the first backup\n        backup_result_1 = vault.backup_project(test_project_dir)\n        snapshot_id_1 = backup_result_1[\"snapshot_id\"]\n    \n        # Register the first version of a file\n>       version_id_1 = vault.timeline_manager.register_version(target_image, snapshot_id_1)\n\n../incremental_backup_system_digital_artist/tests/test_integration.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d459270>\nfile_path = PosixPath('/tmp/tmpeoiymyhm/test_project/test_tracked_image.png')\nsnapshot_id = 'version-creative_vault-1747351068960_121458', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351068960_121458 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.0009533921256661415, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_register_version", "lineno": 35, "outcome": "failed", "keywords": ["test_register_version", "TestTimelineManager", "test_timeline_manager.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.003128387965261936, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.0021670740097761154, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351068978_702677 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_timeline_manager.py", "lineno": 46, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "longrepr": "self = <tests.digital_artist.test_timeline_manager.TestTimelineManager object at 0x7f8a9d83b700>\nbackup_engine = <creative_vault.backup_engine.incremental_backup.DeltaBackupEngine object at 0x7f8a9d295060>\ntimeline_manager = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d2946a0>\ntest_project_dir = PosixPath('/tmp/tmpqkldq08u/test_project')\ntest_image = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image.png')\n\n    def test_register_version(self, backup_engine, timeline_manager, test_project_dir, test_image):\n        \"\"\"Test registering a version of a file in the timeline.\"\"\"\n        # First ensure the test image is in the test project directory\n        target_path = test_project_dir / \"test_image.png\"\n        shutil.copy(test_image, target_path)\n    \n        # Create a snapshot that includes the image\n        snapshot_id = backup_engine.create_snapshot(test_project_dir)\n    \n        # Register a version\n>       version_id = timeline_manager.register_version(target_path, snapshot_id)\n\n../incremental_backup_system_digital_artist/tests/test_timeline_manager.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d2946a0>\nfile_path = PosixPath('/tmp/tmpqkldq08u/test_project/test_image.png')\nsnapshot_id = 'version-creative_vault-1747351068978_702677', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351068978_702677 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.0009386599995195866, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_get_file_timeline", "lineno": 57, "outcome": "failed", "keywords": ["test_get_file_timeline", "TestTimelineManager", "test_timeline_manager.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.003120883833616972, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.0021552378311753273, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351068994_121799 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_timeline_manager.py", "lineno": 68, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "longrepr": "self = <tests.digital_artist.test_timeline_manager.TestTimelineManager object at 0x7f8a9d83b9d0>\nbackup_engine = <creative_vault.backup_engine.incremental_backup.DeltaBackupEngine object at 0x7f8a9d3d1ff0>\ntimeline_manager = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d3d28c0>\ntest_project_dir = PosixPath('/tmp/tmp4o585gxg/test_project')\ntest_image = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image.png')\n\n    def test_get_file_timeline(self, backup_engine, timeline_manager, test_project_dir, test_image):\n        \"\"\"Test getting the timeline of versions for a file.\"\"\"\n        # Copy the test image to the test project directory\n        target_path = test_project_dir / \"test_image.png\"\n        shutil.copy(test_image, target_path)\n    \n        # Create a snapshot\n        snapshot_id = backup_engine.create_snapshot(test_project_dir)\n    \n        # Register a version\n>       version_id = timeline_manager.register_version(target_path, snapshot_id)\n\n../incremental_backup_system_digital_artist/tests/test_timeline_manager.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d3d28c0>\nfile_path = PosixPath('/tmp/tmp4o585gxg/test_project/test_image.png')\nsnapshot_id = 'version-creative_vault-1747351068994_121799', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351068994_121799 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.000944267027080059, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_generate_thumbnail", "lineno": 86, "outcome": "failed", "keywords": ["test_generate_thumbnail", "TestTimelineManager", "test_timeline_manager.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.003128408920019865, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.0021757548674941063, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351069010_225241 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_timeline_manager.py", "lineno": 97, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "longrepr": "self = <tests.digital_artist.test_timeline_manager.TestTimelineManager object at 0x7f8a9d83bca0>\nbackup_engine = <creative_vault.backup_engine.incremental_backup.DeltaBackupEngine object at 0x7f8a9d45ef20>\ntimeline_manager = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d45e110>\ntest_project_dir = PosixPath('/tmp/tmp9qxqc5mg/test_project')\ntest_image = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image.png')\n\n    def test_generate_thumbnail(self, backup_engine, timeline_manager, test_project_dir, test_image):\n        \"\"\"Test generating a thumbnail preview for a version.\"\"\"\n        # Copy the test image to the test project directory\n        target_path = test_project_dir / \"test_image.png\"\n        shutil.copy(test_image, target_path)\n    \n        # Create a snapshot\n        snapshot_id = backup_engine.create_snapshot(test_project_dir)\n    \n        # Register a version\n>       version_id = timeline_manager.register_version(target_path, snapshot_id)\n\n../incremental_backup_system_digital_artist/tests/test_timeline_manager.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d45e110>\nfile_path = PosixPath('/tmp/tmp9qxqc5mg/test_project/test_image.png')\nsnapshot_id = 'version-creative_vault-1747351069010_225241', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351069010_225241 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.0009406551253050566, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_compare_versions", "lineno": 112, "outcome": "failed", "keywords": ["test_compare_versions", "TestTimelineManager", "test_timeline_manager.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0031923470087349415, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.002180750947445631, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351069027_983951 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_timeline_manager.py", "lineno": 124, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "longrepr": "self = <tests.digital_artist.test_timeline_manager.TestTimelineManager object at 0x7f8a9d83bfa0>\nbackup_engine = <creative_vault.backup_engine.incremental_backup.DeltaBackupEngine object at 0x7f8a9d2df400>\ntimeline_manager = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d2dd180>\ntest_project_dir = PosixPath('/tmp/tmp1covwn0r/test_project')\ntest_image = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image.png')\ntest_image_modified = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image_modified.png')\n\n    def test_compare_versions(self, backup_engine, timeline_manager, test_project_dir,\n                             test_image, test_image_modified):\n        \"\"\"Test comparing two versions of a file.\"\"\"\n        # Copy the test image to the test project directory\n        target_path = test_project_dir / \"test_image.png\"\n        shutil.copy(test_image, target_path)\n    \n        # Create an initial snapshot\n        snapshot_id_1 = backup_engine.create_snapshot(test_project_dir)\n    \n        # Register the first version\n>       version_id_1 = timeline_manager.register_version(target_path, snapshot_id_1)\n\n../incremental_backup_system_digital_artist/tests/test_timeline_manager.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d2dd180>\nfile_path = PosixPath('/tmp/tmp1covwn0r/test_project/test_image.png')\nsnapshot_id = 'version-creative_vault-1747351069027_983951', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351069027_983951 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.0009527010843157768, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_timeline_manager.py::TestTimelineManager::test_timeline_filtering_by_time_range", "lineno": 152, "outcome": "failed", "keywords": ["test_timeline_filtering_by_time_range", "TestTimelineManager", "test_timeline_manager.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0031212009489536285, "outcome": "passed", "stdout": "Failed to initialize repository: Object of type <class 'set'> is not JSON serializable\n"}, "call": {"duration": 0.00217229500412941, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError: Snapshot version-creative_vault-1747351069043_170593 does not exist"}, "traceback": [{"path": "../incremental_backup_system_digital_artist/tests/test_timeline_manager.py", "lineno": 164, "message": ""}, {"path": "creative_vault/timeline/timeline_manager.py", "lineno": 78, "message": "ValueError"}], "longrepr": "self = <tests.digital_artist.test_timeline_manager.TestTimelineManager object at 0x7f8a9d67c2b0>\nbackup_engine = <creative_vault.backup_engine.incremental_backup.DeltaBackupEngine object at 0x7f8a9d496290>\ntimeline_manager = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d4964d0>\ntest_project_dir = PosixPath('/tmp/tmpzvpym5y6/test_project')\ntest_image = PosixPath('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/tests/digital_artist/test_data/test_image.png')\n\n    def test_timeline_filtering_by_time_range(self, backup_engine, timeline_manager,\n                                             test_project_dir, test_image):\n        \"\"\"Test filtering the timeline by time range.\"\"\"\n        # Copy the test image to the test project directory\n        target_path = test_project_dir / \"test_image.png\"\n        shutil.copy(test_image, target_path)\n    \n        # Create an initial snapshot\n        snapshot_id_1 = backup_engine.create_snapshot(test_project_dir)\n    \n        # Register the first version\n>       version_id_1 = timeline_manager.register_version(target_path, snapshot_id_1)\n\n../incremental_backup_system_digital_artist/tests/test_timeline_manager.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <creative_vault.timeline.timeline_manager.CreativeTimelineManager object at 0x7f8a9d4964d0>\nfile_path = PosixPath('/tmp/tmpzvpym5y6/test_project/test_image.png')\nsnapshot_id = 'version-creative_vault-1747351069043_170593', metadata = None\n\n    def register_version(\n        self,\n        file_path: Path,\n        snapshot_id: str,\n        metadata: Optional[Dict[str, Any]] = None\n    ) -> str:\n        \"\"\"Register a new version of a file in the timeline.\n    \n        Args:\n            file_path: Path to the file\n            snapshot_id: ID of the snapshot containing this version\n            metadata: Optional metadata about this version\n    \n        Returns:\n            str: Unique version ID\n    \n        Raises:\n            ValueError: If the snapshot does not exist\n        \"\"\"\n        snapshot_path = self.snapshots_path / snapshot_id\n        if not snapshot_path.exists():\n>           raise ValueError(f\"Snapshot {snapshot_id} does not exist\")\nE           ValueError: Snapshot version-creative_vault-1747351069043_170593 does not exist\n\ncreative_vault/timeline/timeline_manager.py:78: ValueError"}, "teardown": {"duration": 0.0009349940810352564, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_generate_image_diff", "lineno": 13, "outcome": "passed", "keywords": ["test_generate_image_diff", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.000551027012988925, "outcome": "passed"}, "call": {"duration": 0.022265737876296043, "outcome": "passed"}, "teardown": {"duration": 0.0003250420559197664, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_generate_model_diff", "lineno": 27, "outcome": "passed", "keywords": ["test_generate_model_diff", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0005471298936754465, "outcome": "passed"}, "call": {"duration": 0.20121774403378367, "outcome": "passed"}, "teardown": {"duration": 0.0003880478907376528, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_get_diff_stats_for_images", "lineno": 41, "outcome": "passed", "keywords": ["test_get_diff_stats_for_images", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0005846959538757801, "outcome": "passed"}, "call": {"duration": 0.011510713025927544, "outcome": "passed"}, "teardown": {"duration": 0.00032649002969264984, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_get_diff_stats_for_models", "lineno": 62, "outcome": "passed", "keywords": ["test_get_diff_stats_for_models", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0005612380336970091, "outcome": "passed"}, "call": {"duration": 0.0022391509264707565, "outcome": "passed"}, "teardown": {"duration": 0.00035421503707766533, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_diff_generation_with_custom_output_path", "lineno": 81, "outcome": "passed", "keywords": ["test_diff_generation_with_custom_output_path", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0005461431574076414, "outcome": "passed"}, "call": {"duration": 0.021373379975557327, "outcome": "passed"}, "teardown": {"duration": 0.0003577340394258499, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_error_handling_for_nonexistent_files", "lineno": 98, "outcome": "passed", "keywords": ["test_error_handling_for_nonexistent_files", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00034885015338659286, "outcome": "passed"}, "call": {"duration": 0.00020986516028642654, "outcome": "passed"}, "teardown": {"duration": 0.00025062798522412777, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_visual_diff.py::test_diff_for_different_image_sizes", "lineno": 111, "outcome": "passed", "keywords": ["test_diff_for_different_image_sizes", "test_visual_diff.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0003248529974371195, "outcome": "passed"}, "call": {"duration": 0.01046874700114131, "outcome": "passed"}, "teardown": {"duration": 0.0003093262203037739, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_get_supported_applications", "lineno": 14, "outcome": "passed", "keywords": ["test_get_supported_applications", "test_workspace_capture.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0003947899676859379, "outcome": "passed"}, "call": {"duration": 0.00014479411765933037, "outcome": "passed"}, "teardown": {"duration": 0.00024026678875088692, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_get_application_info", "lineno": 30, "outcome": "passed", "keywords": ["test_get_application_info", "test_workspace_capture.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0003589519765228033, "outcome": "passed"}, "call": {"duration": 0.00015160790644586086, "outcome": "passed"}, "teardown": {"duration": 0.00023053796030580997, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_capture_workspace_mock", "lineno": 53, "outcome": "passed", "keywords": ["test_capture_workspace_mock", "test_workspace_capture.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00042838510125875473, "outcome": "passed"}, "call": {"duration": 0.00222582696005702, "outcome": "passed"}, "teardown": {"duration": 0.00029946607537567616, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_restore_workspace_mock", "lineno": 113, "outcome": "passed", "keywords": ["test_restore_workspace_mock", "test_workspace_capture.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0006031079683452845, "outcome": "passed"}, "call": {"duration": 0.0025376160629093647, "outcome": "passed"}, "teardown": {"duration": 0.00029528001323342323, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_error_handling_for_nonexistent_workspace", "lineno": 167, "outcome": "passed", "keywords": ["test_error_handling_for_nonexistent_workspace", "test_workspace_capture.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.0003706540446728468, "outcome": "passed"}, "call": {"duration": 0.00018660305067896843, "outcome": "passed"}, "teardown": {"duration": 0.00023793289437890053, "outcome": "passed"}}, {"nodeid": "tests/digital_artist/test_workspace_capture.py::test_list_workspace_states", "lineno": 176, "outcome": "passed", "keywords": ["test_list_workspace_states", "test_workspace_capture.py", "digital_artist", "tests", "unified", ""], "setup": {"duration": 0.00041502504609525204, "outcome": "passed"}, "call": {"duration": 0.001928861951455474, "outcome": "passed"}, "teardown": {"duration": 0.0002885698340833187, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_base_chunker", "lineno": 62, "outcome": "passed", "keywords": ["test_base_chunker", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0006049370858818293, "outcome": "passed"}, "call": {"duration": 0.00014676409773528576, "outcome": "passed"}, "teardown": {"duration": 0.00014098291285336018, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_texture_chunker", "lineno": 84, "outcome": "passed", "keywords": ["test_texture_chunker", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0002547020558267832, "outcome": "passed"}, "call": {"duration": 0.00014422903768718243, "outcome": "passed"}, "teardown": {"duration": 0.0001401600893586874, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_audio_chunker", "lineno": 105, "outcome": "passed", "keywords": ["test_audio_chunker", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00024473806843161583, "outcome": "passed"}, "call": {"duration": 0.0001518630888313055, "outcome": "passed"}, "teardown": {"duration": 0.0001399409957230091, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_model_chunker", "lineno": 125, "outcome": "passed", "keywords": ["test_model_chunker", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.000245457049459219, "outcome": "passed"}, "call": {"duration": 0.00015445007011294365, "outcome": "passed"}, "teardown": {"duration": 0.00013890513218939304, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_chunker_factory", "lineno": 145, "outcome": "passed", "keywords": ["test_chunker_factory", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011277711018919945, "outcome": "passed"}, "call": {"duration": 0.0001626419834792614, "outcome": "passed"}, "teardown": {"duration": 0.00010547810234129429, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_chunker_edge_cases", "lineno": 170, "outcome": "passed", "keywords": ["test_chunker_edge_cases", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0001087880227714777, "outcome": "passed"}, "call": {"duration": 0.00013880804181098938, "outcome": "passed"}, "teardown": {"duration": 0.0001036559697240591, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_chunking.py::test_chunk_size_constraints", "lineno": 192, "outcome": "passed", "keywords": ["test_chunk_size_constraints", "test_chunking.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011762510985136032, "outcome": "passed"}, "call": {"duration": 0.8672729390673339, "outcome": "passed"}, "teardown": {"duration": 0.0002255360595881939, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_base_compressor", "lineno": 32, "outcome": "passed", "keywords": ["test_base_compressor", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00028951396234333515, "outcome": "passed"}, "call": {"duration": 0.0003032779786735773, "outcome": "passed"}, "teardown": {"duration": 0.00015867804177105427, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_texture_compressor", "lineno": 54, "outcome": "passed", "keywords": ["test_texture_compressor", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00021430803462862968, "outcome": "passed"}, "call": {"duration": 0.0002555639948695898, "outcome": "passed"}, "teardown": {"duration": 0.00013969000428915024, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_audio_compressor", "lineno": 69, "outcome": "passed", "keywords": ["test_audio_compressor", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00018141185864806175, "outcome": "passed"}, "call": {"duration": 0.00017579109407961369, "outcome": "passed"}, "teardown": {"duration": 0.0001335588749498129, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_model_compressor", "lineno": 84, "outcome": "passed", "keywords": ["test_model_compressor", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00018116598948836327, "outcome": "passed"}, "call": {"duration": 0.00022235792130231857, "outcome": "passed"}, "teardown": {"duration": 0.0001331721432507038, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_compressor_factory", "lineno": 99, "outcome": "passed", "keywords": ["test_compressor_factory", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011484394781291485, "outcome": "passed"}, "call": {"duration": 0.0001562819816172123, "outcome": "passed"}, "teardown": {"duration": 0.00010915985330939293, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_delta_compressor", "lineno": 124, "outcome": "passed", "keywords": ["test_delta_compressor", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0001860051415860653, "outcome": "passed"}, "call": {"duration": 0.001189264003187418, "outcome": "passed"}, "teardown": {"duration": 0.00015154993161559105, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_compressor.py::test_compression_levels", "lineno": 167, "outcome": "passed", "keywords": ["test_compression_levels", "test_compressor.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00012927502393722534, "outcome": "passed"}, "call": {"duration": 0.0006126370280981064, "outcome": "passed"}, "teardown": {"duration": 0.0001248351763933897, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_add_chunk", "lineno": 33, "outcome": "passed", "keywords": ["test_chunk_hash_index_add_chunk", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00019292510114610195, "outcome": "passed"}, "call": {"duration": 0.00015674997121095657, "outcome": "passed"}, "teardown": {"duration": 0.00013531814329326153, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_remove_chunk", "lineno": 63, "outcome": "passed", "keywords": ["test_chunk_hash_index_remove_chunk", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00016883108764886856, "outcome": "passed"}, "call": {"duration": 0.00013994285836815834, "outcome": "passed"}, "teardown": {"duration": 0.00014516105875372887, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_remove_file", "lineno": 97, "outcome": "passed", "keywords": ["test_chunk_hash_index_remove_file", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00017412402667105198, "outcome": "passed"}, "call": {"duration": 0.00014363904483616352, "outcome": "passed"}, "teardown": {"duration": 0.00013793911784887314, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_get_duplicate_chunks", "lineno": 126, "outcome": "passed", "keywords": ["test_chunk_hash_index_get_duplicate_chunks", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00016822107136249542, "outcome": "passed"}, "call": {"duration": 0.00014960020780563354, "outcome": "passed"}, "teardown": {"duration": 0.00012947502546012402, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_get_storage_savings", "lineno": 158, "outcome": "passed", "keywords": ["test_chunk_hash_index_get_storage_savings", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.000168144004419446, "outcome": "passed"}, "call": {"duration": 0.00014021806418895721, "outcome": "passed"}, "teardown": {"duration": 0.00013573886826634407, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_chunk_hash_index_get_file_sharing_stats", "lineno": 192, "outcome": "passed", "keywords": ["test_chunk_hash_index_get_file_sharing_stats", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00039268401451408863, "outcome": "passed"}, "call": {"duration": 0.00014717504382133484, "outcome": "passed"}, "teardown": {"duration": 0.00014196522533893585, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_deduplication.py::test_asset_deduplicator_deduplicate_file", "lineno": 217, "outcome": "passed", "keywords": ["test_asset_deduplicator_deduplicate_file", "test_deduplication.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0001785019412636757, "outcome": "passed"}, "call": {"duration": 0.00019362499006092548, "outcome": "passed"}, "teardown": {"duration": 0.00014429003931581974, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_optimize_text_file", "lineno": 65, "outcome": "passed", "keywords": ["test_optimize_text_file", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0009408609475940466, "outcome": "passed"}, "call": {"duration": 0.00047710095532238483, "outcome": "passed"}, "teardown": {"duration": 0.0004454660229384899, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_optimize_binary_file", "lineno": 77, "outcome": "passed", "keywords": ["test_optimize_binary_file", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007438231259584427, "outcome": "passed"}, "call": {"duration": 0.0016718590632081032, "outcome": "passed"}, "teardown": {"duration": 0.0007394130807369947, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_optimize_with_previous_version", "lineno": 95, "outcome": "passed", "keywords": ["test_optimize_with_previous_version", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007241321727633476, "outcome": "passed"}, "call": {"duration": 0.0014361029025167227, "outcome": "passed"}, "teardown": {"duration": 0.0004348380025476217, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_restore_asset", "lineno": 121, "outcome": "passed", "keywords": ["test_restore_asset", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007497922051697969, "outcome": "passed"}, "call": {"duration": 0.000963693019002676, "outcome": "passed"}, "teardown": {"duration": 0.00041020801290869713, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_get_optimization_stats", "lineno": 148, "outcome": "passed", "keywords": ["test_get_optimization_stats", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007187109440565109, "outcome": "passed"}, "call": {"duration": 0.0007942439988255501, "outcome": "passed"}, "teardown": {"duration": 0.0004262709990143776, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_get_shared_asset_analysis", "lineno": 164, "outcome": "passed", "keywords": ["test_get_shared_asset_analysis", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007125930860638618, "outcome": "passed"}, "call": {"duration": 0.0006804438307881355, "outcome": "passed"}, "teardown": {"duration": 0.00043458398431539536, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_delta_compression", "lineno": 177, "outcome": "passed", "keywords": ["test_delta_compression", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007129011210054159, "outcome": "passed"}, "call": {"duration": 0.0025322590954601765, "outcome": "passed"}, "teardown": {"duration": 0.00039712386205792427, "outcome": "passed"}}, {"nodeid": "tests/game_developer/asset_optimization/test_manager.py::test_get_base_version", "lineno": 264, "outcome": "failed", "keywords": ["test_get_base_version", "test_manager.py", "asset_optimization", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00041923695243895054, "outcome": "passed"}, "call": {"duration": 0.0004559881053864956, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/unittest/mock.py", "lineno": 1420, "message": "AttributeError: <gamevault.backup_engine.storage.StorageManager object at 0x7f8a9ceafc40> does not have the attribute 'get_chunks_for_file'"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/asset_optimization/test_manager.py", "lineno": 276, "message": ""}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/unittest/mock.py", "lineno": 1447, "message": "in __enter__"}, {"path": "../../../../.pyenv/versions/3.10.11/lib/python3.10/unittest/mock.py", "lineno": 1420, "message": "AttributeError"}], "longrepr": "optimization_manager = <gamevault.asset_optimization.manager.AssetOptimizationManager object at 0x7f8a9ceaf880>\n\n    def test_get_base_version(optimization_manager):\n        \"\"\"Test retrieving a base version using its hash.\"\"\"\n        # Setup mock for the storage manager methods\n        test_hash = \"test_base_version_hash\"\n        test_path = Path(\"/test/path/file.bin\")\n        test_size = 1024\n        test_mtime = 1600000000.0\n        test_chunks = [\"chunk1\", \"chunk2\", \"chunk3\"]\n    \n        # Test case 1: File exists in storage\n        with patch.object(optimization_manager.storage_manager, \"get_file_path_by_hash\") as mock_get_path:\n>           with patch.object(optimization_manager.storage_manager, \"get_chunks_for_file\") as mock_get_chunks:\n\n../incremental_backup_system_game_developer/tests/asset_optimization/test_manager.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.pyenv/versions/3.10.11/lib/python3.10/unittest/mock.py:1447: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x7f8a9cf28c70>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <gamevault.backup_engine.storage.StorageManager object at 0x7f8a9ceafc40> does not have the attribute 'get_chunks_for_file'\n\n../../../../.pyenv/versions/3.10.11/lib/python3.10/unittest/mock.py:1420: AttributeError"}, "teardown": {"duration": 0.0029282299801707268, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_fixed_size_chunker", "lineno": 32, "outcome": "passed", "keywords": ["test_fixed_size_chunker", "test_chunking.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.090412501944229, "outcome": "passed"}, "call": {"duration": 0.0004122599493712187, "outcome": "passed"}, "teardown": {"duration": 0.00014502601698040962, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_rolling_hash_chunker", "lineno": 62, "outcome": "passed", "keywords": ["test_rolling_hash_chunker", "test_chunking.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.09011710295453668, "outcome": "passed"}, "call": {"duration": 2.141408886993304, "outcome": "passed"}, "teardown": {"duration": 0.0002254289574921131, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_game_asset_chunker", "lineno": 98, "outcome": "passed", "keywords": ["test_game_asset_chunker", "test_chunking.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00013112882152199745, "outcome": "passed"}, "call": {"duration": 0.4920409598853439, "outcome": "passed"}, "teardown": {"duration": 0.00015617976896464825, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_chunker_edge_cases", "lineno": 132, "outcome": "passed", "keywords": ["test_chunker_edge_cases", "test_chunking.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0001274279784411192, "outcome": "passed"}, "call": {"duration": 0.00016645505093038082, "outcome": "passed"}, "teardown": {"duration": 0.0001251788344234228, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_chunking.py::test_chunker_consistency", "lineno": 153, "outcome": "passed", "keywords": ["test_chunker_consistency", "test_chunking.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011786399409174919, "outcome": "passed"}, "call": {"duration": 1.7874442799948156, "outcome": "passed"}, "teardown": {"duration": 0.00027268286794424057, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_create_backup", "lineno": 55, "outcome": "failed", "keywords": ["test_create_backup", "test_engine.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.001422944013029337, "outcome": "passed"}, "call": {"duration": 0.0030417819507420063, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nfiles.`file1.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`data.bin`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`file2.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`subdir/subfile.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py", "lineno": 59, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "backup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ad41ff0>\nproject_dir = PosixPath('/tmp/tmpaod3yfnx/test_project')\n\n    def test_create_backup(backup_engine, project_dir):\n        \"\"\"Test creating a backup of a project.\"\"\"\n        # Create a backup\n>       version = backup_engine.create_backup(\n            name=\"test backup\",\n            version_type=GameVersionType.DEVELOPMENT,\n            description=\"Test backup\",\n            is_milestone=False,\n            tags=[\"test\", \"initial\"]\n        )\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ad41ff0>\nname = 'test backup'\nversion_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = 'Test backup', is_milestone = False, tags = ['test', 'initial']\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nE       files.`file1.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`data.bin`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`file2.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`subdir/subfile.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.0007197600789368153, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_incremental_backup", "lineno": 81, "outcome": "failed", "keywords": ["test_incremental_backup", "test_engine.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.000736406072974205, "outcome": "passed"}, "call": {"duration": 0.0019882279448211193, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nfiles.`file1.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`data.bin`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`file2.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`subdir/subfile.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py", "lineno": 85, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "backup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ac77670>\nproject_dir = PosixPath('/tmp/tmpzy0aw_bw/test_project')\n\n    def test_incremental_backup(backup_engine, project_dir):\n        \"\"\"Test creating an incremental backup after changes.\"\"\"\n        # Create an initial backup\n>       initial_version = backup_engine.create_backup(name=\"initial\")\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ac77670>\nname = 'initial', version_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = None, is_milestone = False, tags = None\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nE       files.`file1.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`data.bin`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`file2.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`subdir/subfile.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.0006686791311949492, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_restore_version", "lineno": 119, "outcome": "failed", "keywords": ["test_restore_version", "test_engine.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007079639472067356, "outcome": "passed"}, "call": {"duration": 0.00194062408991158, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nfiles.`file1.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`data.bin`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`file2.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`subdir/subfile.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py", "lineno": 123, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "backup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ad46ec0>\nproject_dir = PosixPath('/tmp/tmpg94makzc/test_project')\n\n    def test_restore_version(backup_engine, project_dir):\n        \"\"\"Test restoring a backed up version.\"\"\"\n        # Create a backup\n>       version = backup_engine.create_backup(name=\"test\")\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ad46ec0>\nname = 'test', version_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = None, is_milestone = False, tags = None\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nE       files.`file1.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`data.bin`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`file2.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`subdir/subfile.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.0006678940262645483, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_restore_with_exclusions", "lineno": 151, "outcome": "failed", "keywords": ["test_restore_with_exclusions", "test_engine.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007236311212182045, "outcome": "passed"}, "call": {"duration": 0.001991639845073223, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nfiles.`file1.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`data.bin`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`file2.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`subdir/subfile.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py", "lineno": 155, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "backup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ac75ab0>\nproject_dir = PosixPath('/tmp/tmpvxoeonao/test_project')\n\n    def test_restore_with_exclusions(backup_engine, project_dir):\n        \"\"\"Test restoring a version with exclusions.\"\"\"\n        # Create a backup\n>       version = backup_engine.create_backup(name=\"test\")\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ac75ab0>\nname = 'test', version_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = None, is_milestone = False, tags = None\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nE       files.`file1.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`data.bin`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`file2.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`subdir/subfile.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.0007211209740489721, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_get_version_diff", "lineno": 174, "outcome": "failed", "keywords": ["test_get_version_diff", "test_engine.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007079399656504393, "outcome": "passed"}, "call": {"duration": 0.0019270149059593678, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nfiles.`file1.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`data.bin`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`file2.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`subdir/subfile.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py", "lineno": 178, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "backup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ace0ee0>\nproject_dir = PosixPath('/tmp/tmp3bzv6hm9/test_project')\n\n    def test_get_version_diff(backup_engine, project_dir):\n        \"\"\"Test getting differences between two versions.\"\"\"\n        # Create an initial backup\n>       initial_version = backup_engine.create_backup(name=\"initial\")\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ace0ee0>\nname = 'initial', version_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = None, is_milestone = False, tags = None\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nE       files.`file1.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`data.bin`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`file2.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`subdir/subfile.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.0007724619936197996, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_engine.py::test_get_storage_stats", "lineno": 198, "outcome": "failed", "keywords": ["test_get_storage_stats", "test_engine.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0007467828691005707, "outcome": "passed"}, "call": {"duration": 0.0021126680076122284, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nfiles.`file1.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`data.bin`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`file2.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`subdir/subfile.txt`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py", "lineno": 206, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "backup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ce8fa00>\nproject_dir = PosixPath('/tmp/tmpwpes2h34/test_project')\n\n    def test_get_storage_stats(backup_engine, project_dir):\n        \"\"\"Test getting storage statistics.\"\"\"\n        # Initially should have no storage used\n        stats_before = backup_engine.get_storage_stats()\n        assert stats_before[\"total\"] == 0\n    \n        # Create a backup\n>       backup_engine.create_backup(name=\"test\")\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_engine.py:206: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9ce8fa00>\nname = 'test', version_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = None, is_milestone = False, tags = None\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 4 validation errors for ProjectVersion\nE       files.`file1.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file1.txt'...232a09186', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`data.bin`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='data.bin',..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`file2.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='file2.txt'...7b3241512', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`subdir/subfile.txt`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='subdir/sub...a2608169c', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.000691374996677041, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_store_file", "lineno": 45, "outcome": "passed", "keywords": ["test_store_file", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004947059787809849, "outcome": "passed"}, "call": {"duration": 0.0004120729863643646, "outcome": "passed"}, "teardown": {"duration": 0.0003138489555567503, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_retrieve_file", "lineno": 58, "outcome": "passed", "keywords": ["test_retrieve_file", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004397949669510126, "outcome": "passed"}, "call": {"duration": 0.0014038251247256994, "outcome": "passed"}, "teardown": {"duration": 0.0003040351439267397, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_store_and_retrieve_chunks", "lineno": 82, "outcome": "passed", "keywords": ["test_store_and_retrieve_chunks", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0003585789818316698, "outcome": "passed"}, "call": {"duration": 0.0006027200724929571, "outcome": "passed"}, "teardown": {"duration": 0.00034044403582811356, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_remove_file", "lineno": 100, "outcome": "failed", "keywords": ["test_remove_file", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004307068884372711, "outcome": "passed"}, "call": {"duration": 0.00037012994289398193, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/backup_engine/test_storage.py", "lineno": 110, "message": "AttributeError: 'StorageManager' object has no attribute 'remove_file'. Did you mean: 'retrieve_file'?"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_storage.py", "lineno": 110, "message": "AttributeError"}], "longrepr": "storage_manager = <gamevault.backup_engine.storage.StorageManager object at 0x7f8a9d2fb8b0>\nsample_file = '/tmp/tmpvbu8mwqq'\n\n    def test_remove_file(storage_manager, sample_file):\n        \"\"\"Test removing a stored file.\"\"\"\n        # Store the file\n        file_id, _ = storage_manager.store_file(sample_file)\n    \n        # Verify it exists\n        assert storage_manager.file_exists(file_id)\n    \n        # Remove the file\n>       result = storage_manager.remove_file(file_id)\nE       AttributeError: 'StorageManager' object has no attribute 'remove_file'. Did you mean: 'retrieve_file'?\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_storage.py:110: AttributeError"}, "teardown": {"duration": 0.0003443099558353424, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_remove_chunk", "lineno": 120, "outcome": "failed", "keywords": ["test_remove_chunk", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00037308293394744396, "outcome": "passed"}, "call": {"duration": 0.00030739582143723965, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/backup_engine/test_storage.py", "lineno": 130, "message": "AttributeError: 'StorageManager' object has no attribute 'remove_chunk'. Did you mean: 'retrieve_chunk'?"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_storage.py", "lineno": 130, "message": "AttributeError"}], "longrepr": "storage_manager = <gamevault.backup_engine.storage.StorageManager object at 0x7f8a9ce8dcc0>\nsample_chunks = [b'Chunk 1 data', b'Chunk 2 data with more content', b'Another chunk with different content']\n\n    def test_remove_chunk(storage_manager, sample_chunks):\n        \"\"\"Test removing a stored chunk.\"\"\"\n        # Store a chunk\n        chunk_id = storage_manager.store_chunk(sample_chunks[0])\n    \n        # Verify it exists\n        assert storage_manager.chunk_exists(chunk_id)\n    \n        # Remove the chunk\n>       result = storage_manager.remove_chunk(chunk_id)\nE       AttributeError: 'StorageManager' object has no attribute 'remove_chunk'. Did you mean: 'retrieve_chunk'?\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_storage.py:130: AttributeError"}, "teardown": {"duration": 0.0003214299213141203, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_get_storage_size", "lineno": 140, "outcome": "passed", "keywords": ["test_get_storage_size", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004946650005877018, "outcome": "passed"}, "call": {"duration": 0.0007830758113414049, "outcome": "passed"}, "teardown": {"duration": 0.00042815087363123894, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_file_not_found", "lineno": 164, "outcome": "passed", "keywords": ["test_file_not_found", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0003164638765156269, "outcome": "passed"}, "call": {"duration": 0.00022039911709725857, "outcome": "passed"}, "teardown": {"duration": 0.0002514349762350321, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_chunk_not_found", "lineno": 170, "outcome": "passed", "keywords": ["test_chunk_not_found", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00030516181141138077, "outcome": "passed"}, "call": {"duration": 0.0002149499487131834, "outcome": "passed"}, "teardown": {"duration": 0.00024930411018431187, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_storage.py::test_idempotent_storage", "lineno": 176, "outcome": "passed", "keywords": ["test_idempotent_storage", "test_storage.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004393190611153841, "outcome": "passed"}, "call": {"duration": 0.0004227329045534134, "outcome": "passed"}, "teardown": {"duration": 0.00030744215473532677, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_create_version", "lineno": 53, "outcome": "failed", "keywords": ["test_create_version", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004475491587072611, "outcome": "passed"}, "call": {"duration": 0.0004481170326471329, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 78, "message": "TypeError: 'ProjectVersion' object is not subscriptable"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 78, "message": "TypeError"}], "longrepr": "version_tracker = <gamevault.backup_engine.version_tracker.VersionTracker object at 0x7f8a9d2fafb0>\nsample_files = {'file1.txt': FileInfo(path='file1.txt', size=100, hash='hash1', modified_time=1000.0, is_binary=False, chunks=None, s...=300, hash='hash3', modified_time=1002.0, is_binary=True, chunks=['chunk3', 'chunk4'], storage_path=None, metadata={})}\n\n    def test_create_version(version_tracker, sample_files):\n        \"\"\"Test creating a new version.\"\"\"\n        # Create a version\n        version = version_tracker.create_version(\n            name=\"test version\",\n            files=sample_files,\n            version_type=GameVersionType.DEVELOPMENT,\n            description=\"Test version\",\n            is_milestone=False,\n            tags=[\"test\", \"initial\"]\n        )\n    \n        # Verify the version was created\n        assert version.name == \"test version\"\n        assert version.type == GameVersionType.DEVELOPMENT\n        assert version.description == \"Test version\"\n        assert version.is_milestone is False\n        assert set(version.tags) == {\"test\", \"initial\"}\n        assert version.parent_id is None\n        assert len(version.files) == 3\n    \n        # Verify the version is stored in metadata\n        versions = version_tracker.list_versions()\n        assert len(versions) == 1\n>       assert versions[0][\"id\"] == version.id\nE       TypeError: 'ProjectVersion' object is not subscriptable\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py:78: TypeError"}, "teardown": {"duration": 0.00028203194960951805, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_create_version_with_parent", "lineno": 86, "outcome": "passed", "keywords": ["test_create_version_with_parent", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00046943407505750656, "outcome": "passed"}, "call": {"duration": 0.0008673188276588917, "outcome": "passed"}, "teardown": {"duration": 0.00026882789097726345, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_version", "lineno": 113, "outcome": "passed", "keywords": ["test_get_version", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00042661791667342186, "outcome": "passed"}, "call": {"duration": 0.00039689289405941963, "outcome": "passed"}, "teardown": {"duration": 0.00023817317560315132, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_list_versions", "lineno": 130, "outcome": "failed", "keywords": ["test_list_versions", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004288929048925638, "outcome": "passed"}, "call": {"duration": 0.0011926949955523014, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 143, "message": "TypeError: 'ProjectVersion' object is not subscriptable"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 143, "message": ""}, {"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 143, "message": "TypeError"}], "longrepr": "version_tracker = <gamevault.backup_engine.version_tracker.VersionTracker object at 0x7f8a9ce7fb80>\nsample_files = {'file1.txt': FileInfo(path='file1.txt', size=100, hash='hash1', modified_time=1000.0, is_binary=False, chunks=None, s...=300, hash='hash3', modified_time=1002.0, is_binary=True, chunks=['chunk3', 'chunk4'], storage_path=None, metadata={})}\n\n    def test_list_versions(version_tracker, sample_files):\n        \"\"\"Test listing all versions.\"\"\"\n        # Create multiple versions\n        v1 = version_tracker.create_version(name=\"v1\", files=sample_files)\n        v2 = version_tracker.create_version(name=\"v2\", files=sample_files)\n        v3 = version_tracker.create_version(name=\"v3\", files=sample_files)\n    \n        # List all versions\n        versions = version_tracker.list_versions()\n    \n        # Verify all versions are listed\n        assert len(versions) == 3\n>       assert {v[\"id\"] for v in versions} == {v1.id, v2.id, v3.id}\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n.0 = <list_iterator object at 0x7f8a9ce7c6d0>\n\n>   assert {v[\"id\"] for v in versions} == {v1.id, v2.id, v3.id}\nE   TypeError: 'ProjectVersion' object is not subscriptable\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py:143: TypeError"}, "teardown": {"duration": 0.0002874720375984907, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_version_history", "lineno": 145, "outcome": "passed", "keywords": ["test_get_version_history", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00044495100155472755, "outcome": "passed"}, "call": {"duration": 0.00122884102165699, "outcome": "passed"}, "teardown": {"duration": 0.0002682169433683157, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_milestones", "lineno": 162, "outcome": "passed", "keywords": ["test_get_milestones", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00047128391452133656, "outcome": "passed"}, "call": {"duration": 0.0015541368629783392, "outcome": "passed"}, "teardown": {"duration": 0.0002783301752060652, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_versions_by_tag", "lineno": 180, "outcome": "passed", "keywords": ["test_get_versions_by_tag", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004335809499025345, "outcome": "passed"}, "call": {"duration": 0.001217604847624898, "outcome": "passed"}, "teardown": {"duration": 0.0002605351619422436, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_get_versions_by_type", "lineno": 203, "outcome": "passed", "keywords": ["test_get_versions_by_type", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00042767496779561043, "outcome": "passed"}, "call": {"duration": 0.0013346769846975803, "outcome": "passed"}, "teardown": {"duration": 0.00027631199918687344, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_delete_version", "lineno": 238, "outcome": "failed", "keywords": ["test_delete_version", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004615839570760727, "outcome": "passed"}, "call": {"duration": 0.0007361960597336292, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 250, "message": "AttributeError: 'VersionTracker' object has no attribute 'delete_version'. Did you mean: 'create_version'?"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py", "lineno": 250, "message": "AttributeError"}], "longrepr": "version_tracker = <gamevault.backup_engine.version_tracker.VersionTracker object at 0x7f8a9ad46ec0>\nsample_files = {'file1.txt': FileInfo(path='file1.txt', size=100, hash='hash1', modified_time=1000.0, is_binary=False, chunks=None, s...=300, hash='hash3', modified_time=1002.0, is_binary=True, chunks=['chunk3', 'chunk4'], storage_path=None, metadata={})}\n\n    def test_delete_version(version_tracker, sample_files):\n        \"\"\"Test deleting a version.\"\"\"\n        # Create versions\n        v1 = version_tracker.create_version(name=\"v1\", files=sample_files)\n        v2 = version_tracker.create_version(name=\"v2\", files=sample_files)\n    \n        # Verify both versions exist\n        versions = version_tracker.list_versions()\n        assert len(versions) == 2\n    \n        # Delete a version\n>       result = version_tracker.delete_version(v1.id)\nE       AttributeError: 'VersionTracker' object has no attribute 'delete_version'. Did you mean: 'create_version'?\n\n../incremental_backup_system_game_developer/tests/backup_engine/test_version_tracker.py:250: AttributeError"}, "teardown": {"duration": 0.0002828740980476141, "outcome": "passed"}}, {"nodeid": "tests/game_developer/backup_engine/test_version_tracker.py::test_version_not_found", "lineno": 266, "outcome": "passed", "keywords": ["test_version_not_found", "test_version_tracker.py", "backup_engine", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00037769414484500885, "outcome": "passed"}, "call": {"duration": 0.0001867758110165596, "outcome": "passed"}, "teardown": {"duration": 0.00021874811500310898, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_common_terms", "lineno": 137, "outcome": "passed", "keywords": ["test_get_common_terms", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0013065049424767494, "outcome": "passed"}, "call": {"duration": 0.0004713139496743679, "outcome": "passed"}, "teardown": {"duration": 0.00017054006457328796, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_feedback_over_time", "lineno": 161, "outcome": "passed", "keywords": ["test_get_feedback_over_time", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0012370580807328224, "outcome": "passed"}, "call": {"duration": 0.00032484298571944237, "outcome": "passed"}, "teardown": {"duration": 0.0001800009049475193, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_identify_recurring_issues", "lineno": 180, "outcome": "passed", "keywords": ["test_identify_recurring_issues", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0011985739693045616, "outcome": "passed"}, "call": {"duration": 0.00029839714989066124, "outcome": "passed"}, "teardown": {"duration": 0.00018181605264544487, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_sentiment_distribution", "lineno": 198, "outcome": "passed", "keywords": ["test_get_sentiment_distribution", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0010366248898208141, "outcome": "passed"}, "call": {"duration": 0.0002082830760627985, "outcome": "passed"}, "teardown": {"duration": 0.0001751990057528019, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_analyze_feature_feedback", "lineno": 213, "outcome": "passed", "keywords": ["test_analyze_feature_feedback", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0011910558678209782, "outcome": "passed"}, "call": {"duration": 0.00032653193920850754, "outcome": "passed"}, "teardown": {"duration": 0.0001810360699892044, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_player_engagement", "lineno": 227, "outcome": "passed", "keywords": ["test_get_player_engagement", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0011654761619865894, "outcome": "passed"}, "call": {"duration": 0.0002761068753898144, "outcome": "passed"}, "teardown": {"duration": 0.0001797960139811039, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_analysis.py::test_get_player_engagement_no_feedback", "lineno": 247, "outcome": "passed", "keywords": ["test_get_player_engagement_no_feedback", "test_analysis.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0010715201497077942, "outcome": "passed"}, "call": {"duration": 0.00018738792277872562, "outcome": "passed"}, "teardown": {"duration": 0.00017618993297219276, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_add_feedback", "lineno": 37, "outcome": "passed", "keywords": ["test_add_feedback", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.026676744921132922, "outcome": "passed"}, "call": {"duration": 0.0028239658568054438, "outcome": "passed"}, "teardown": {"duration": 0.00029427511617541313, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_update_feedback", "lineno": 60, "outcome": "passed", "keywords": ["test_update_feedback", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.02254610788077116, "outcome": "passed"}, "call": {"duration": 0.005399453919380903, "outcome": "passed"}, "teardown": {"duration": 0.0002702530473470688, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_delete_feedback", "lineno": 87, "outcome": "passed", "keywords": ["test_delete_feedback", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.02336627012118697, "outcome": "passed"}, "call": {"duration": 0.005369904218241572, "outcome": "passed"}, "teardown": {"duration": 0.0002746719401329756, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_list_feedback", "lineno": 107, "outcome": "passed", "keywords": ["test_list_feedback", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.022649889113381505, "outcome": "passed"}, "call": {"duration": 0.010603868868201971, "outcome": "passed"}, "teardown": {"duration": 0.0002604769542813301, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_count_feedback", "lineno": 183, "outcome": "passed", "keywords": ["test_count_feedback", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.024729997850954533, "outcome": "passed"}, "call": {"duration": 0.0054192820098251104, "outcome": "passed"}, "teardown": {"duration": 0.00026094308122992516, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_get_feedback_by_versions", "lineno": 224, "outcome": "passed", "keywords": ["test_get_feedback_by_versions", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.02486947481520474, "outcome": "passed"}, "call": {"duration": 0.008233127184212208, "outcome": "passed"}, "teardown": {"duration": 0.00032381806522607803, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_get_feedback_stats", "lineno": 273, "outcome": "passed", "keywords": ["test_get_feedback_stats", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.023580929962918162, "outcome": "passed"}, "call": {"duration": 0.012041653972119093, "outcome": "passed"}, "teardown": {"duration": 0.0002721669152379036, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_database.py::test_update_nonexistent_feedback", "lineno": 313, "outcome": "passed", "keywords": ["test_update_nonexistent_feedback", "test_database.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.023086177185177803, "outcome": "passed"}, "call": {"duration": 0.0003616991452872753, "outcome": "passed"}, "teardown": {"duration": 0.00027540093287825584, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_feedback", "lineno": 44, "outcome": "passed", "keywords": ["test_add_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0234416329767555, "outcome": "passed"}, "call": {"duration": 0.0029977220110595226, "outcome": "passed"}, "teardown": {"duration": 0.0002848550211638212, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_feedback_invalid_version", "lineno": 73, "outcome": "passed", "keywords": ["test_add_feedback_invalid_version", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.02431014203466475, "outcome": "passed"}, "call": {"duration": 0.00039258087053894997, "outcome": "passed"}, "teardown": {"duration": 0.00027957302518188953, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_update_feedback", "lineno": 85, "outcome": "passed", "keywords": ["test_update_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.024424531031399965, "outcome": "passed"}, "call": {"duration": 0.005001958925276995, "outcome": "passed"}, "teardown": {"duration": 0.0002786279655992985, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_delete_feedback", "lineno": 110, "outcome": "passed", "keywords": ["test_delete_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.024142310954630375, "outcome": "passed"}, "call": {"duration": 0.005237851059064269, "outcome": "passed"}, "teardown": {"duration": 0.00029110279865562916, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_mark_feedback_resolved", "lineno": 131, "outcome": "passed", "keywords": ["test_mark_feedback_resolved", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.02463575708679855, "outcome": "passed"}, "call": {"duration": 0.00765853188931942, "outcome": "passed"}, "teardown": {"duration": 0.00028248014859855175, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_tags_to_feedback", "lineno": 159, "outcome": "passed", "keywords": ["test_add_tags_to_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.024289047811180353, "outcome": "passed"}, "call": {"duration": 0.007886053994297981, "outcome": "passed"}, "teardown": {"duration": 0.0002837679348886013, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_remove_tags_from_feedback", "lineno": 186, "outcome": "passed", "keywords": ["test_remove_tags_from_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.02475278195925057, "outcome": "passed"}, "call": {"duration": 0.005379446083679795, "outcome": "passed"}, "teardown": {"duration": 0.0002833269536495209, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_add_metadata_to_feedback", "lineno": 208, "outcome": "passed", "keywords": ["test_add_metadata_to_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.023783268174156547, "outcome": "passed"}, "call": {"duration": 0.0082379428204149, "outcome": "passed"}, "teardown": {"duration": 0.00028519495390355587, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_get_feedback_for_version", "lineno": 235, "outcome": "passed", "keywords": ["test_get_feedback_for_version", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.024102350929751992, "outcome": "passed"}, "call": {"duration": 0.015355705982074142, "outcome": "passed"}, "teardown": {"duration": 0.00028317305259406567, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_get_feedback_for_invalid_version", "lineno": 265, "outcome": "passed", "keywords": ["test_get_feedback_for_invalid_version", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.023999904049560428, "outcome": "passed"}, "call": {"duration": 0.0002501558046787977, "outcome": "passed"}, "teardown": {"duration": 0.0002930171322077513, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_get_feedback_for_player", "lineno": 271, "outcome": "passed", "keywords": ["test_get_feedback_for_player", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.023775374982506037, "outcome": "passed"}, "call": {"duration": 0.01312849298119545, "outcome": "passed"}, "teardown": {"duration": 0.00029833707958459854, "outcome": "passed"}}, {"nodeid": "tests/game_developer/feedback_system/test_manager.py::test_search_feedback", "lineno": 292, "outcome": "passed", "keywords": ["test_search_feedback", "test_manager.py", "feedback_system", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.023664777167141438, "outcome": "passed"}, "call": {"duration": 0.009679822949692607, "outcome": "passed"}, "teardown": {"duration": 0.00030357413925230503, "outcome": "passed"}}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_complete_game_development_cycle", "lineno": 110, "outcome": "failed", "keywords": ["test_complete_game_development_cycle", "test_game_development_workflow.py", "integration", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.042120985919609666, "outcome": "passed"}, "call": {"duration": 0.002294194186106324, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 3 validation errors for ProjectVersion\nfiles.`assets/sprite.png`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/spr..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`assets/sound.wav`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/sou..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`src/main.cpp`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='src/main.c...f6012ab62', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/integration/test_game_development_workflow.py", "lineno": 134, "message": ""}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "test_project_dir = PosixPath('/tmp/tmpgpi6uif1/test_game')\nstorage_dir = PosixPath('/tmp/tmpjcf0s63w')\nbackup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9d2dc5b0>\nfeedback_manager = <gamevault.feedback_system.manager.FeedbackManager object at 0x7f8a9d2dcdf0>\nmilestone_manager = <gamevault.milestone_management.manager.MilestoneManager object at 0x7f8a9d2dc4f0>\nplatform_config_manager = <gamevault.platform_config.manager.PlatformConfigManager object at 0x7f8a9d2de2c0>\nplaytest_recorder = <gamevault.playtest_recorder.recorder.PlaytestRecorder object at 0x7f8a9d2dfeb0>\n\n    def test_complete_game_development_cycle(\n        test_project_dir,\n        storage_dir,\n        backup_engine,\n        feedback_manager,\n        milestone_manager,\n        platform_config_manager,\n        playtest_recorder\n    ):\n        \"\"\"\n        Test a complete game development cycle from concept to release.\n    \n        This test simulates a full development cycle including:\n        - Creating initial backup\n        - Setting up platform configurations\n        - Creating a milestone\n        - Simulating changes to the game\n        - Recording playtest data\n        - Adding player feedback\n        - Creating a new milestone\n        - Comparing versions and configurations\n        \"\"\"\n        # Step 1: Initial backup of the project\n>       initial_version = backup_engine.create_backup(\n            name=\"Initial Commit\",\n            version_type=GameVersionType.DEVELOPMENT,\n            description=\"First backup of the project\"\n        )\n\n../incremental_backup_system_game_developer/tests/integration/test_game_development_workflow.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9d2dc5b0>\nname = 'Initial Commit'\nversion_type = <GameVersionType.DEVELOPMENT: 'development'>\ndescription = 'First backup of the project', is_milestone = False, tags = None\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 3 validation errors for ProjectVersion\nE       files.`assets/sprite.png`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/spr..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`assets/sound.wav`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/sou..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`src/main.cpp`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='src/main.c...f6012ab62', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.001088667195290327, "outcome": "passed"}}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_milestone_annotations", "lineno": 368, "outcome": "failed", "keywords": ["test_milestone_annotations", "test_game_development_workflow.py", "integration", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0010555479675531387, "outcome": "passed"}, "call": {"duration": 0.0016731990035623312, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/unified/gamevault/backup_engine/engine.py", "lineno": 119, "message": "pydantic_core._pydantic_core.ValidationError: 3 validation errors for ProjectVersion\nfiles.`assets/sprite.png`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/spr..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`assets/sound.wav`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/sou..._path=None, metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type\nfiles.`src/main.cpp`\n  Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='src/main.c...f6012ab62', metadata={}), input_type=FileInfo]\n    For further information visit https://errors.pydantic.dev/2.11/v/model_type"}, "traceback": [{"path": "../incremental_backup_system_game_developer/tests/integration/test_game_development_workflow.py", "lineno": 376, "message": ""}, {"path": "gamevault/milestone_management/manager.py", "lineno": 100, "message": "in create_milestone"}, {"path": "gamevault/backup_engine/engine.py", "lineno": 119, "message": "ValidationError"}], "longrepr": "test_project_dir = PosixPath('/tmp/tmpgaau4a0k/test_game')\nbackup_engine = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9d294940>\nmilestone_manager = <gamevault.milestone_management.manager.MilestoneManager object at 0x7f8a9d295b40>\n\n    def test_milestone_annotations(\n        test_project_dir,\n        backup_engine,\n        milestone_manager\n    ):\n        \"\"\"Test milestone annotations functionality.\"\"\"\n        # Create a milestone with annotations\n>       milestone = milestone_manager.create_milestone(\n            name=\"Test Milestone\",\n            version_type=GameVersionType.ALPHA,\n            description=\"Milestone with detailed annotations\",\n            annotations={\n                \"completion\": \"50%\",\n                \"core_mechanics\": [\"movement\", \"combat\"],\n                \"performance\": {\n                    \"fps\": 60,\n                    \"memory_usage\": \"128MB\"\n                },\n                \"notes\": \"This is a test milestone\"\n            },\n            tags=[\"test\", \"annotated\"]\n        )\n\n../incremental_backup_system_game_developer/tests/integration/test_game_development_workflow.py:376: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngamevault/milestone_management/manager.py:100: in create_milestone\n    version = self.backup_engine.create_backup(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <gamevault.backup_engine.engine.BackupEngine object at 0x7f8a9d294940>\nname = 'Test Milestone', version_type = <GameVersionType.ALPHA: 'alpha'>\ndescription = 'Milestone with detailed annotations', is_milestone = True\ntags = ['test', 'annotated']\n\n    def create_backup(\n        self,\n        name: str,\n        version_type: GameVersionType = GameVersionType.DEVELOPMENT,\n        description: Optional[str] = None,\n        is_milestone: bool = False,\n        tags: Optional[List[str]] = None\n    ) -> ProjectVersion:\n        \"\"\"\n        Create a backup of the project.\n    \n        Args:\n            name: Name of the backup version\n            version_type: Type of the version\n            description: Description of the version\n            is_milestone: Whether this version is a milestone\n            tags: List of tags for this version\n    \n        Returns:\n            ProjectVersion: The created version\n        \"\"\"\n        # Use the common engine to create the snapshot\n        metadata = {\n            \"description\": description,\n            \"tags\": tags or [],\n            \"is_milestone\": is_milestone,\n            \"version_type\": version_type\n        }\n    \n        # Create the snapshot\n        snapshot_id = self._engine.create_snapshot(self.project_path, metadata)\n    \n        # Get the version information\n        version_info = self._engine.version_tracker.get_version(snapshot_id)\n    \n        # Convert to ProjectVersion for API compatibility\n>       return ProjectVersion(\n            id=version_info.id,\n            timestamp=version_info.timestamp,\n            name=name,\n            parent_id=version_info.parent_id,\n            type=version_type,\n            tags=tags or [],\n            description=description,\n            files=version_info.files,\n            is_milestone=is_milestone\n        )\nE       pydantic_core._pydantic_core.ValidationError: 3 validation errors for ProjectVersion\nE       files.`assets/sprite.png`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/spr..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`assets/sound.wav`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='assets/sou..._path=None, metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\nE       files.`src/main.cpp`\nE         Input should be a valid dictionary or instance of FileInfo [type=model_type, input_value=FileInfo(path='src/main.c...f6012ab62', metadata={}), input_type=FileInfo]\nE           For further information visit https://errors.pydantic.dev/2.11/v/model_type\n\ngamevault/backup_engine/engine.py:119: ValidationError"}, "teardown": {"duration": 0.0007392519619315863, "outcome": "passed"}}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_platform_specific_features", "lineno": 422, "outcome": "passed", "keywords": ["test_platform_specific_features", "test_game_development_workflow.py", "integration", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.000938075128942728, "outcome": "passed"}, "call": {"duration": 0.0022400468587875366, "outcome": "passed"}, "teardown": {"duration": 0.000595160061493516, "outcome": "passed"}}, {"nodeid": "tests/game_developer/integration/test_game_development_workflow.py::test_configuration_management_across_platforms", "lineno": 487, "outcome": "passed", "keywords": ["test_configuration_management_across_platforms", "test_game_development_workflow.py", "integration", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0009488081559538841, "outcome": "passed"}, "call": {"duration": 0.0024300571531057358, "outcome": "passed"}, "teardown": {"duration": 0.0006052479147911072, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_create_milestone", "lineno": 137, "outcome": "passed", "keywords": ["test_create_milestone", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0026678580325096846, "outcome": "passed"}, "call": {"duration": 0.0004121009260416031, "outcome": "passed"}, "teardown": {"duration": 0.00032664998434484005, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_create_milestone_no_backup_engine", "lineno": 175, "outcome": "passed", "keywords": ["test_create_milestone_no_backup_engine", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0013860040344297886, "outcome": "passed"}, "call": {"duration": 0.0012017819099128246, "outcome": "passed"}, "teardown": {"duration": 0.00015743798576295376, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_get_milestone", "lineno": 227, "outcome": "passed", "keywords": ["test_get_milestone", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0024867739994078875, "outcome": "passed"}, "call": {"duration": 0.00038978015072643757, "outcome": "passed"}, "teardown": {"duration": 0.00032704882323741913, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_get_nonexistent_milestone", "lineno": 259, "outcome": "passed", "keywords": ["test_get_nonexistent_milestone", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0028358770068734884, "outcome": "passed"}, "call": {"duration": 0.00023951008915901184, "outcome": "passed"}, "teardown": {"duration": 0.0003083660267293453, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_update_milestone_annotations", "lineno": 265, "outcome": "passed", "keywords": ["test_update_milestone_annotations", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0024265339598059654, "outcome": "passed"}, "call": {"duration": 0.0004926719702780247, "outcome": "passed"}, "teardown": {"duration": 0.000316771911457181, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_update_nonexistent_milestone", "lineno": 303, "outcome": "passed", "keywords": ["test_update_nonexistent_milestone", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.002439355943351984, "outcome": "passed"}, "call": {"duration": 0.0001911770086735487, "outcome": "passed"}, "teardown": {"duration": 0.00029975688084959984, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_list_milestones", "lineno": 309, "outcome": "passed", "keywords": ["test_list_milestones", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0024132479447871447, "outcome": "passed"}, "call": {"duration": 0.0011067020241171122, "outcome": "passed"}, "teardown": {"duration": 0.00032424693927168846, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_restore_milestone", "lineno": 350, "outcome": "passed", "keywords": ["test_restore_milestone", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.002361648017540574, "outcome": "passed"}, "call": {"duration": 0.0004942759405821562, "outcome": "passed"}, "teardown": {"duration": 0.00030533503741025925, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_restore_without_backup_engine", "lineno": 374, "outcome": "passed", "keywords": ["test_restore_without_backup_engine", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0013232508208602667, "outcome": "passed"}, "call": {"duration": 0.0004204011056572199, "outcome": "passed"}, "teardown": {"duration": 0.00015198113396763802, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_compare_milestones", "lineno": 383, "outcome": "passed", "keywords": ["test_compare_milestones", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0033062470611184835, "outcome": "passed"}, "call": {"duration": 0.0004152609035372734, "outcome": "passed"}, "teardown": {"duration": 0.00030069705098867416, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_compare_with_annotation_changes", "lineno": 404, "outcome": "passed", "keywords": ["test_compare_with_annotation_changes", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.002378028817474842, "outcome": "passed"}, "call": {"duration": 0.0006797059904783964, "outcome": "passed"}, "teardown": {"duration": 0.00032745604403316975, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_delete_milestone", "lineno": 453, "outcome": "passed", "keywords": ["test_delete_milestone", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0023668468929827213, "outcome": "passed"}, "call": {"duration": 0.0007661539129912853, "outcome": "passed"}, "teardown": {"duration": 0.00030815904028713703, "outcome": "passed"}}, {"nodeid": "tests/game_developer/milestone_management/test_manager.py::test_get_milestone_timeline", "lineno": 481, "outcome": "passed", "keywords": ["test_get_milestone_timeline", "test_manager.py", "milestone_management", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.002403893042355776, "outcome": "passed"}, "call": {"duration": 0.000565666938200593, "outcome": "passed"}, "teardown": {"duration": 0.00033015594817698, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_initial_backup_performance[100-100]", "lineno": 139, "outcome": "skipped", "keywords": ["test_initial_backup_performance[100-100]", "parametrize", "pytestmark", "100-100", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00014285999350249767, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 140, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00012670899741351604, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_initial_backup_performance[500-200]", "lineno": 139, "outcome": "skipped", "keywords": ["test_initial_backup_performance[500-200]", "parametrize", "pytestmark", "500-200", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011887098662555218, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 140, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.000125048216432333, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_incremental_backup_performance", "lineno": 183, "outcome": "skipped", "keywords": ["test_incremental_backup_performance", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011329608969390392, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 184, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.0002426148857921362, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_asset_optimization_efficiency", "lineno": 216, "outcome": "skipped", "keywords": ["test_asset_optimization_efficiency", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011778203770518303, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 217, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00013061100617051125, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_build_feedback_correlation_performance", "lineno": 253, "outcome": "skipped", "keywords": ["test_build_feedback_correlation_performance", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011319899931550026, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 254, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00011618109419941902, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_milestone_snapshot_performance", "lineno": 311, "outcome": "skipped", "keywords": ["test_milestone_snapshot_performance", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011093402281403542, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 312, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00011510285548865795, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_backup_performance.py::test_platform_config_comparison_performance", "lineno": 351, "outcome": "skipped", "keywords": ["test_platform_config_comparison_performance", "skip", "test_backup_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00010913494043052197, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_backup_performance.py', 352, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.0001172930933535099, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_playtest_event_recording_performance", "lineno": 38, "outcome": "skipped", "keywords": ["test_playtest_event_recording_performance", "skip", "test_playtest_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00010795402340590954, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_playtest_performance.py', 39, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.0001283828169107437, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_checkpoint_storage_performance", "lineno": 99, "outcome": "skipped", "keywords": ["test_checkpoint_storage_performance", "skip", "test_playtest_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011454196646809578, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_playtest_performance.py', 100, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00026723509654402733, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_playtest_analysis_performance", "lineno": 141, "outcome": "skipped", "keywords": ["test_playtest_analysis_performance", "skip", "test_playtest_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011979206465184689, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_playtest_performance.py', 142, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.0001205869484692812, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_high_frequency_event_recording", "lineno": 225, "outcome": "skipped", "keywords": ["test_high_frequency_event_recording", "skip", "test_playtest_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00011766189709305763, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_playtest_performance.py', 226, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00011548586189746857, "outcome": "passed"}}, {"nodeid": "tests/game_developer/performance/test_playtest_performance.py::test_large_batch_processing", "lineno": 287, "outcome": "skipped", "keywords": ["test_large_batch_processing", "skip", "test_playtest_performance.py", "performance", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00010752910748124123, "outcome": "skipped", "longrepr": "('/home/justinchiu_cohere_com/librarybench/projects/incremental_backup_system/incremental_backup_system_game_developer/tests/performance/test_playtest_performance.py', 288, 'Skipped: Need --run-performance option to run')"}, "teardown": {"duration": 0.00011426000855863094, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_save_and_get_config", "lineno": 84, "outcome": "passed", "keywords": ["test_save_and_get_config", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0006890108343213797, "outcome": "passed"}, "call": {"duration": 0.0004974300973117352, "outcome": "passed"}, "teardown": {"duration": 0.0002955829259008169, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_list_platforms", "lineno": 107, "outcome": "passed", "keywords": ["test_list_platforms", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0005382047966122627, "outcome": "passed"}, "call": {"duration": 0.000701249111443758, "outcome": "passed"}, "teardown": {"duration": 0.00031141703948378563, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_list_versions", "lineno": 124, "outcome": "passed", "keywords": ["test_list_versions", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0006335070356726646, "outcome": "passed"}, "call": {"duration": 0.0007650721818208694, "outcome": "passed"}, "teardown": {"duration": 0.00030533596873283386, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_configs_same_platform", "lineno": 150, "outcome": "passed", "keywords": ["test_compare_configs_same_platform", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0004833980929106474, "outcome": "passed"}, "call": {"duration": 0.0008688578382134438, "outcome": "passed"}, "teardown": {"duration": 0.00030127796344459057, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_configs_different_platforms", "lineno": 193, "outcome": "passed", "keywords": ["test_compare_configs_different_platforms", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.000550893833860755, "outcome": "passed"}, "call": {"duration": 0.0008977239485830069, "outcome": "passed"}, "teardown": {"duration": 0.000332788098603487, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_platforms", "lineno": 236, "outcome": "passed", "keywords": ["test_compare_platforms", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0005280189216136932, "outcome": "passed"}, "call": {"duration": 0.0016468220856040716, "outcome": "passed"}, "teardown": {"duration": 0.0003281759563833475, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_compare_versions", "lineno": 289, "outcome": "passed", "keywords": ["test_compare_versions", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.000494855921715498, "outcome": "passed"}, "call": {"duration": 0.0008678091689944267, "outcome": "passed"}, "teardown": {"duration": 0.0002993750385940075, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_get_version_history", "lineno": 337, "outcome": "passed", "keywords": ["test_get_version_history", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00048469495959579945, "outcome": "passed"}, "call": {"duration": 0.0013424591161310673, "outcome": "passed"}, "teardown": {"duration": 0.0003141239285469055, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_delete_config", "lineno": 375, "outcome": "passed", "keywords": ["test_delete_config", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0005391559097915888, "outcome": "passed"}, "call": {"duration": 0.002052169991657138, "outcome": "passed"}, "teardown": {"duration": 0.0003138801548629999, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_create_config_template", "lineno": 403, "outcome": "passed", "keywords": ["test_create_config_template", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00041850702837109566, "outcome": "passed"}, "call": {"duration": 0.0002035088837146759, "outcome": "passed"}, "teardown": {"duration": 0.0002667370717972517, "outcome": "passed"}}, {"nodeid": "tests/game_developer/platform_config/test_manager.py::test_copy_config", "lineno": 428, "outcome": "passed", "keywords": ["test_copy_config", "test_manager.py", "platform_config", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.00046581984497606754, "outcome": "passed"}, "call": {"duration": 0.0008174041286110878, "outcome": "passed"}, "teardown": {"duration": 0.0002990700304508209, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_session_summary", "lineno": 155, "outcome": "passed", "keywords": ["test_get_session_summary", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0013966760598123074, "outcome": "passed"}, "call": {"duration": 0.00024001207202672958, "outcome": "passed"}, "teardown": {"duration": 0.00017051002942025661, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_session_summary_not_found", "lineno": 174, "outcome": "passed", "keywords": ["test_get_session_summary_not_found", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.001202707877382636, "outcome": "passed"}, "call": {"duration": 0.000201815040782094, "outcome": "passed"}, "teardown": {"duration": 0.0001695128157734871, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_compare_sessions", "lineno": 180, "outcome": "passed", "keywords": ["test_compare_sessions", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0010943720117211342, "outcome": "passed"}, "call": {"duration": 0.0008146599866449833, "outcome": "passed"}, "teardown": {"duration": 0.00023378804326057434, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_version_statistics", "lineno": 203, "outcome": "passed", "keywords": ["test_get_version_statistics", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0011906458530575037, "outcome": "passed"}, "call": {"duration": 0.00034920615144073963, "outcome": "passed"}, "teardown": {"duration": 0.00018563400954008102, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_version_statistics_no_sessions", "lineno": 229, "outcome": "passed", "keywords": ["test_get_version_statistics_no_sessions", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.001127817900851369, "outcome": "passed"}, "call": {"duration": 0.00018506217747926712, "outcome": "passed"}, "teardown": {"duration": 0.00017352495342493057, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_compare_versions", "lineno": 239, "outcome": "passed", "keywords": ["test_compare_versions", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.0012915690895169973, "outcome": "passed"}, "call": {"duration": 0.000595433171838522, "outcome": "passed"}, "teardown": {"duration": 0.0001958699431270361, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_player_statistics", "lineno": 279, "outcome": "passed", "keywords": ["test_get_player_statistics", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.001263139070942998, "outcome": "passed"}, "call": {"duration": 0.0003537049051374197, "outcome": "passed"}, "teardown": {"duration": 0.00018110917881131172, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_analysis.py::test_get_player_statistics_no_sessions", "lineno": 313, "outcome": "passed", "keywords": ["test_get_player_statistics_no_sessions", "test_analysis.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.001179585000500083, "outcome": "passed"}, "call": {"duration": 0.00018645217642188072, "outcome": "passed"}, "teardown": {"duration": 0.00017516990192234516, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_start_session", "lineno": 21, "outcome": "passed", "keywords": ["test_start_session", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.020153722958639264, "outcome": "passed"}, "call": {"duration": 0.0053028028924018145, "outcome": "passed"}, "teardown": {"duration": 0.0003235200420022011, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_end_session", "lineno": 43, "outcome": "passed", "keywords": ["test_end_session", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01926484191790223, "outcome": "passed"}, "call": {"duration": 0.0075645900797098875, "outcome": "passed"}, "teardown": {"duration": 0.0003308318555355072, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_record_event", "lineno": 64, "outcome": "passed", "keywords": ["test_record_event", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.019696074072271585, "outcome": "passed"}, "call": {"duration": 0.00790963601320982, "outcome": "passed"}, "teardown": {"duration": 0.0003242508973926306, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_update_metrics", "lineno": 101, "outcome": "passed", "keywords": ["test_update_metrics", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01886476995423436, "outcome": "passed"}, "call": {"duration": 0.005025241989642382, "outcome": "passed"}, "teardown": {"duration": 0.00030149007216095924, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_save_and_get_checkpoint", "lineno": 126, "outcome": "passed", "keywords": ["test_save_and_get_checkpoint", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01880596298724413, "outcome": "passed"}, "call": {"duration": 0.012279269052669406, "outcome": "passed"}, "teardown": {"duration": 0.0003094850108027458, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_list_sessions", "lineno": 167, "outcome": "passed", "keywords": ["test_list_sessions", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.018790489993989468, "outcome": "passed"}, "call": {"duration": 0.03114728513173759, "outcome": "passed"}, "teardown": {"duration": 0.0003205349203199148, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_delete_session", "lineno": 193, "outcome": "passed", "keywords": ["test_delete_session", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.019215575186535716, "outcome": "passed"}, "call": {"duration": 0.00723856408149004, "outcome": "passed"}, "teardown": {"duration": 0.00030194385908544064, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_get_analyzer", "lineno": 216, "outcome": "passed", "keywords": ["test_get_analyzer", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.018313057022169232, "outcome": "passed"}, "call": {"duration": 0.00015326892025768757, "outcome": "passed"}, "teardown": {"duration": 0.0002802899107336998, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_recorder.py::test_active_session_buffering", "lineno": 223, "outcome": "passed", "keywords": ["test_active_session_buffering", "test_recorder.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01944624399766326, "outcome": "passed"}, "call": {"duration": 0.005286760861054063, "outcome": "passed"}, "teardown": {"duration": 0.0003136640880256891, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_save_and_get_session", "lineno": 52, "outcome": "passed", "keywords": ["test_save_and_get_session", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.019538654945790768, "outcome": "passed"}, "call": {"duration": 0.0028762170113623142, "outcome": "passed"}, "teardown": {"duration": 0.00030667707324028015, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_delete_session", "lineno": 76, "outcome": "passed", "keywords": ["test_delete_session", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01894978992640972, "outcome": "passed"}, "call": {"duration": 0.004762045107781887, "outcome": "passed"}, "teardown": {"duration": 0.0003123548813164234, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_list_sessions", "lineno": 96, "outcome": "passed", "keywords": ["test_list_sessions", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01894320291467011, "outcome": "passed"}, "call": {"duration": 0.00932120205834508, "outcome": "passed"}, "teardown": {"duration": 0.00032396987080574036, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_save_and_get_checkpoint", "lineno": 181, "outcome": "passed", "keywords": ["test_save_and_get_checkpoint", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01877104793675244, "outcome": "passed"}, "call": {"duration": 0.0049715060740709305, "outcome": "passed"}, "teardown": {"duration": 0.00034995703026652336, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_save_checkpoint_invalid_session", "lineno": 209, "outcome": "passed", "keywords": ["test_save_checkpoint_invalid_session", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.019199671922251582, "outcome": "passed"}, "call": {"duration": 0.0003608760889619589, "outcome": "passed"}, "teardown": {"duration": 0.0002977200783789158, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_list_checkpoints", "lineno": 219, "outcome": "passed", "keywords": ["test_list_checkpoints", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.020041638053953648, "outcome": "passed"}, "call": {"duration": 0.009493727004155517, "outcome": "passed"}, "teardown": {"duration": 0.0003451169468462467, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_add_event_to_session", "lineno": 242, "outcome": "passed", "keywords": ["test_add_event_to_session", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01910959486849606, "outcome": "passed"}, "call": {"duration": 0.005291537148877978, "outcome": "passed"}, "teardown": {"duration": 0.0003320618998259306, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_update_session_metrics", "lineno": 265, "outcome": "passed", "keywords": ["test_update_session_metrics", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.018003424163907766, "outcome": "passed"}, "call": {"duration": 0.0052224500104784966, "outcome": "passed"}, "teardown": {"duration": 0.0003146801609545946, "outcome": "passed"}}, {"nodeid": "tests/game_developer/playtest_recorder/test_storage.py::test_mark_session_completed", "lineno": 288, "outcome": "passed", "keywords": ["test_mark_session_completed", "test_storage.py", "playtest_recorder", "game_developer", "tests", "unified", ""], "setup": {"duration": 0.01934514520689845, "outcome": "passed"}, "call": {"duration": 0.010177002055570483, "outcome": "passed"}, "teardown": {"duration": 0.00033846404403448105, "outcome": "passed"}}]}