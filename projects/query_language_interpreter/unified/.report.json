{"created": 1747353372.8587031, "duration": 1.9821336269378662, "exitcode": 1, "root": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified", "environment": {}, "summary": {"passed": 200, "failed": 13, "total": 213, "collected": 213}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "common/core", "outcome": "passed", "result": []}, {"nodeid": "common/logging", "outcome": "passed", "result": []}, {"nodeid": "common/models", "outcome": "passed", "result": []}, {"nodeid": "common/pattern", "outcome": "passed", "result": []}, {"nodeid": "common/policy", "outcome": "passed", "result": []}, {"nodeid": "common/utils", "outcome": "passed", "result": []}, {"nodeid": "common", "outcome": "passed", "result": [{"nodeid": "common/core", "type": "Package"}, {"nodeid": "common/logging", "type": "Package"}, {"nodeid": "common/models", "type": "Package"}, {"nodeid": "common/pattern", "type": "Package"}, {"nodeid": "common/policy", "type": "Package"}, {"nodeid": "common/utils", "type": "Package"}]}, {"nodeid": "legal_discovery_interpreter/communication_analysis", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/core", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/document_analysis", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/ontology", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/privilege", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/query_engine", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/temporal", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter/utils", "outcome": "passed", "result": []}, {"nodeid": "legal_discovery_interpreter", "outcome": "passed", "result": [{"nodeid": "legal_discovery_interpreter/communication_analysis", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/core", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/document_analysis", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/ontology", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/privilege", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/query_engine", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/temporal", "type": "Package"}, {"nodeid": "legal_discovery_interpreter/utils", "type": "Package"}]}, {"nodeid": "privacy_query_interpreter/access_logging", "outcome": "passed", "result": []}, {"nodeid": "privacy_query_interpreter/anonymization", "outcome": "passed", "result": []}, {"nodeid": "privacy_query_interpreter/data_minimization", "outcome": "passed", "result": []}, {"nodeid": "privacy_query_interpreter/pii_detection", "outcome": "passed", "result": []}, {"nodeid": "privacy_query_interpreter/policy_enforcement", "outcome": "passed", "result": []}, {"nodeid": "privacy_query_interpreter/query_engine", "outcome": "passed", "result": []}, {"nodeid": "privacy_query_interpreter", "outcome": "passed", "result": [{"nodeid": "privacy_query_interpreter/access_logging", "type": "Package"}, {"nodeid": "privacy_query_interpreter/anonymization", "type": "Package"}, {"nodeid": "privacy_query_interpreter/data_minimization", "type": "Package"}, {"nodeid": "privacy_query_interpreter/pii_detection", "type": "Package"}, {"nodeid": "privacy_query_interpreter/policy_enforcement", "type": "Package"}, {"nodeid": "privacy_query_interpreter/query_engine", "type": "Package"}]}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_initialization", "type": "Function", "lineno": 20}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_access", "type": "Function", "lineno": 44}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_query", "type": "Function", "lineno": 83}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_field_access", "type": "Function", "lineno": 120}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_export", "type": "Function", "lineno": 152}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_policy_violation", "type": "Function", "lineno": 189}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_verify_log_integrity", "type": "Function", "lineno": 223}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_search_logs", "type": "Function", "lineno": 260}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_get_log_statistics", "type": "Function", "lineno": 346}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_sensitive_field_handling", "type": "Function", "lineno": 433}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_rotation", "type": "Function", "lineno": 508}]}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/access_logging", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_initialization", "type": "Function", "lineno": 15}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymization_method_enum", "type": "Function", "lineno": 40}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_hash_value", "type": "Function", "lineno": 51}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_pseudonymize_value", "type": "Function", "lineno": 88}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_mask_value", "type": "Function", "lineno": 115}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_redact_value", "type": "Function", "lineno": 157}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_generalize_value", "type": "Function", "lineno": 174}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_perturb_value", "type": "Function", "lineno": 199}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_tokenize_value", "type": "Function", "lineno": 232}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_value", "type": "Function", "lineno": 252}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dataframe", "type": "Function", "lineno": 283}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dict", "type": "Function", "lineno": 331}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_list_of_dicts", "type": "Function", "lineno": 365}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_auto_anonymize_dataframe", "type": "Function", "lineno": 400}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_get_field_type", "type": "Function", "lineno": 431}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_guess_anonymization_method", "type": "Function", "lineno": 455}]}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/anonymization", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_initialization", "type": "Function", "lineno": 14}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_allowed_fields", "type": "Function", "lineno": 34}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dataframe", "type": "Function", "lineno": 67}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dict", "type": "Function", "lineno": 95}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_list_of_dicts", "type": "Function", "lineno": 134}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_field_category", "type": "Function", "lineno": 171}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_field_category", "type": "Function", "lineno": 187}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_purpose_category", "type": "Function", "lineno": 203}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_set_purpose_categories", "type": "Function", "lineno": 225}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_with_pii_detector", "type": "Function", "lineno": 256}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_purpose_enum", "type": "Function", "lineno": 280}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_data_category_enum", "type": "Function", "lineno": 294}]}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/data_minimization", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_protection_impact_assessment", "type": "Function", "lineno": 134}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_subject_access_request", "type": "Function", "lineno": 193}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_compliance_audit", "type": "Function", "lineno": 257}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_investigation", "type": "Function", "lineno": 328}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_privacy_compliance_report", "type": "Function", "lineno": 386}]}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/integration", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_initialization", "type": "Function", "lineno": 12}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_string", "type": "Function", "lineno": 24}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_series", "type": "Function", "lineno": 51}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dataframe", "type": "Function", "lineno": 72}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dict", "type": "Function", "lineno": 91}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_is_pii_field", "type": "Function", "lineno": 113}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_luhn_check", "type": "Function", "lineno": 139}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_field_context_scores", "type": "Function", "lineno": 158}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_custom_patterns", "type": "Function", "lineno": 174}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_pattern_info", "type": "Function", "lineno": 211}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_all_patterns", "type": "Function", "lineno": 225}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_initialization", "type": "Function", "lineno": 16}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_dataframe", "type": "Function", "lineno": 30}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_csv_file", "type": "Function", "lineno": 62}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_nonexistent_csv_file", "type": "Function", "lineno": 90}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_dataframes", "type": "Function", "lineno": 98}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_csv_files", "type": "Function", "lineno": 127}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_generate_summary_report", "type": "Function", "lineno": 153}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_error_handling", "type": "Function", "lineno": 186}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_parallel_execution", "type": "Function", "lineno": 205}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/pii_detection", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py", "type": "Module"}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_initialization", "type": "Function", "lineno": 18}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_query", "type": "Function", "lineno": 46}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_field_access", "type": "Function", "lineno": 164}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_combination", "type": "Function", "lineno": 225}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_source_access", "type": "Function", "lineno": 316}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_categorize_fields", "type": "Function", "lineno": 393}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_field_category", "type": "Function", "lineno": 459}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_policy", "type": "Function", "lineno": 484}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_load_policies", "type": "Function", "lineno": 504}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_type_enum", "type": "Function", "lineno": 14}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_action_enum", "type": "Function", "lineno": 26}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_category_enum", "type": "Function", "lineno": 36}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_combination_validation", "type": "Function", "lineno": 52}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_creation", "type": "Function", "lineno": 75}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_to_dict", "type": "Function", "lineno": 129}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_from_dict", "type": "Function", "lineno": 155}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_creation", "type": "Function", "lineno": 180}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_to_dict", "type": "Function", "lineno": 229}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_from_dict", "type": "Function", "lineno": 258}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_add_remove", "type": "Function", "lineno": 286}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_get_by_type", "type": "Function", "lineno": 351}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py", "type": "Module"}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_initialization", "type": "Function", "lineno": 19}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_simple_query", "type": "Function", "lineno": 55}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_join", "type": "Function", "lineno": 95}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_policy_enforcement", "type": "Function", "lineno": 129}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_minimization", "type": "Function", "lineno": 176}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_anonymization", "type": "Function", "lineno": 212}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_privacy_functions", "type": "Function", "lineno": 277}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_query_with_logging", "type": "Function", "lineno": 317}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_error_handling", "type": "Function", "lineno": 352}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_add_remove_data_source", "type": "Function", "lineno": 384}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_get_query_history", "type": "Function", "lineno": 419}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_initialization", "type": "Function", "lineno": 12}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_privacy_function_enum", "type": "Function", "lineno": 17}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_simple_query", "type": "Function", "lineno": 33}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_join", "type": "Function", "lineno": 56}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_privacy_functions", "type": "Function", "lineno": 83}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_various_clauses", "type": "Function", "lineno": 123}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_has_privacy_functions", "type": "Function", "lineno": 163}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_extract_table_relationships", "type": "Function", "lineno": 175}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_select_star", "type": "Function", "lineno": 193}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_subqueries", "type": "Function", "lineno": 205}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_different_join_types", "type": "Function", "lineno": 230}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/query_engine", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py", "type": "Module"}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/anonymization", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/data_minimization", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/integration", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/pii_detection", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/policy_enforcement", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/query_engine", "type": "Package"}]}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyzer_initialization", "type": "Function", "lineno": 98}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_email_address", "type": "Function", "lineno": 105}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_participant_string", "type": "Function", "lineno": 120}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_email_document", "type": "Function", "lineno": 149}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_messages_from_collection", "type": "Function", "lineno": 183}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_communications", "type": "Function", "lineno": 209}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyze_communication", "type": "Function", "lineno": 251}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_key_participants", "type": "Function", "lineno": 299}]}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_participant_info", "type": "Function", "lineno": 18}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_participant", "type": "Function", "lineno": 35}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message", "type": "Function", "lineno": 51}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_sender", "type": "Function", "lineno": 88}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_recipients", "type": "Function", "lineno": 114}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_thread", "type": "Function", "lineno": 162}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_graph", "type": "Function", "lineno": 250}]}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_metadata_creation", "type": "Function", "lineno": 12}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_creation", "type": "Function", "lineno": 28}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_get_content_preview", "type": "Function", "lineno": 47}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_email_document_creation", "type": "Function", "lineno": 76}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_collection", "type": "Function", "lineno": 105}]}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_query_execution_context", "type": "Function", "lineno": 62}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_query_interpreter_initialization", "type": "Function", "lineno": 83}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_parse_query", "type": "Function", "lineno": 96}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_full_text", "type": "Function", "lineno": 129}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_metadata", "type": "Function", "lineno": 152}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_composite", "type": "Function", "lineno": 173}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_string", "type": "Function", "lineno": 204}]}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_query_operators", "type": "Function", "lineno": 24}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_distance_units", "type": "Function", "lineno": 33}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_query_types", "type": "Function", "lineno": 40}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_full_text_query", "type": "Function", "lineno": 51}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_metadata_query", "type": "Function", "lineno": 67}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_proximity_query", "type": "Function", "lineno": 81}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_communication_query", "type": "Function", "lineno": 98}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_temporal_query", "type": "Function", "lineno": 116}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_privilege_query", "type": "Function", "lineno": 132}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_composite_query", "type": "Function", "lineno": 147}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_query_result", "type": "Function", "lineno": 172}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_legal_discovery_query", "type": "Function", "lineno": 213}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_legal_discovery_query_to_sql_like", "type": "Function", "lineno": 255}]}, {"nodeid": "tests/legal_discovery_specialist/test_core", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_document_analyzer_initialization", "type": "Function", "lineno": 90}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_document", "type": "Function", "lineno": 99}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_collection", "type": "Function", "lineno": 115}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search", "type": "Function", "lineno": 134}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_proximity", "type": "Function", "lineno": 153}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search_proximity", "type": "Function", "lineno": 170}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_similarity", "type": "Function", "lineno": 194}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_find_similar_documents", "type": "Function", "lineno": 216}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_extract_metadata", "type": "Function", "lineno": 232}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_classify_content", "type": "Function", "lineno": 247}]}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_tokenize_document", "type": "Function", "lineno": 28}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_word_positions", "type": "Function", "lineno": 52}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance", "type": "Function", "lineno": 66}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance_ordered", "type": "Function", "lineno": 84}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_positions_to_unit", "type": "Function", "lineno": 101}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_basic", "type": "Function", "lineno": 121}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_legal_terms", "type": "Function", "lineno": 143}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_find_proximity_matches", "type": "Function", "lineno": 167}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_highlight_proximity_matches", "type": "Function", "lineno": 191}]}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_full_text_search", "type": "Function", "lineno": 132}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_proximity_search", "type": "Function", "lineno": 174}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_communication_search", "type": "Function", "lineno": 196}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_temporal_search", "type": "Function", "lineno": 217}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_privilege_search", "type": "Function", "lineno": 238}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_composite_search", "type": "Function", "lineno": 267}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_query_string_execution", "type": "Function", "lineno": 316}]}, {"nodeid": "tests/legal_discovery_specialist/test_integration", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_term_relation", "type": "Function", "lineno": 12}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_term", "type": "Function", "lineno": 29}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_ontology", "type": "Function", "lineno": 58}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_ontology_collection", "type": "Function", "lineno": 128}]}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_ontology_service_initialization", "type": "Function", "lineno": 67}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_create_simple_ontology", "type": "Function", "lineno": 74}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_load_ontology_from_file", "type": "Function", "lineno": 108}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_terms", "type": "Function", "lineno": 128}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_query", "type": "Function", "lineno": 165}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_get_related_documents", "type": "Function", "lineno": 195}]}, {"nodeid": "tests/legal_discovery_specialist/test_ontology", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detector_initialization", "type": "Function", "lineno": 158}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_privilege_indicator", "type": "Function", "lineno": 166}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_attorney", "type": "Function", "lineno": 192}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_load_attorneys_from_file", "type": "Function", "lineno": 214}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_is_attorney", "type": "Function", "lineno": 232}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_indicators", "type": "Function", "lineno": 252}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_attorneys", "type": "Function", "lineno": 278}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_calculate_privilege_score", "type": "Function", "lineno": 310}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_determine_privilege_status", "type": "Function", "lineno": 355}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege", "type": "Function", "lineno": 363}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_in_collection", "type": "Function", "lineno": 399}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_generate_privilege_log", "type": "Function", "lineno": 430}]}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_indicator", "type": "Function", "lineno": 14}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_attorney", "type": "Function", "lineno": 39}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_detection_result", "type": "Function", "lineno": 62}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_log", "type": "Function", "lineno": 90}]}, {"nodeid": "tests/legal_discovery_specialist/test_privilege", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_temporal_manager_initialization", "type": "Function", "lineno": 96}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_date", "type": "Function", "lineno": 111}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_dates_in_document", "type": "Function", "lineno": 148}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_load_timeframes_from_file", "type": "Function", "lineno": 174}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_resolve_timeframe", "type": "Function", "lineno": 198}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_custom_timeframe", "type": "Function", "lineno": 231}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_date", "type": "Function", "lineno": 253}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_timeframe", "type": "Function", "lineno": 300}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_timeline", "type": "Function", "lineno": 322}]}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_time_period", "type": "Function", "lineno": 14}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe", "type": "Function", "lineno": 41}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe_calculate_dates", "type": "Function", "lineno": 83}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_timeframe_catalog", "type": "Function", "lineno": 123}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_date_normalization_format", "type": "Function", "lineno": 181}]}, {"nodeid": "tests/legal_discovery_specialist/test_temporal", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_core", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_integration", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_ontology", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_privilege", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_temporal", "type": "Package"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist", "type": "Package"}]}, {"nodeid": "unified_query_language_interpreter.egg-info", "outcome": "passed", "result": []}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "common", "type": "Package"}, {"nodeid": "legal_discovery_interpreter", "type": "Package"}, {"nodeid": "privacy_query_interpreter", "type": "Package"}, {"nodeid": "tests", "type": "Package"}, {"nodeid": "unified_query_language_interpreter.egg-info", "type": "Dir"}]}], "tests": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_initialization", "lineno": 20, "outcome": "passed", "keywords": ["test_initialization", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0008074010256677866, "outcome": "passed"}, "call": {"duration": 0.00034961290657520294, "outcome": "passed"}, "teardown": {"duration": 0.0001791550312191248, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_access", "lineno": 44, "outcome": "passed", "keywords": ["test_log_access", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0002453560009598732, "outcome": "passed"}, "call": {"duration": 0.0006507381331175566, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.102749\", \"user_id\": \"user123\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": true, \"fields_accessed\": [\"name\", \"email\", \"phone\"], \"purpose\": \"compliance_audit\", \"entry_id\": \"1747353372102-86c4ae2b524b3728\", \"hmac\": \"39d132880c73d304cef3cd489e9e7a789124b44f597afd1bf02d87e23cb45269\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1028755, "msecs": 102.0, "relativeCreated": 1353.3453941345215, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00017127604223787785, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_query", "lineno": 83, "outcome": "passed", "keywords": ["test_log_query", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0002452521584928036, "outcome": "passed"}, "call": {"duration": 0.0005096441600471735, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.104394\", \"user_id\": \"user123\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"warning\", \"contains_pii\": true, \"query\": \"SELECT name, email FROM customers\", \"fields_accessed\": [\"name\", \"email\"], \"purpose\": \"compliance_audit\", \"metadata\": {\"execution_time_ms\": 150, \"query_id\": \"query123\"}, \"entry_id\": \"1747353372104-89ba343547bd0508\", \"hmac\": \"670d3a04541c768d5a74d07094e14ca69733cab4c2317d229038f6a522a01cfb\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1044893, "msecs": 104.0, "relativeCreated": 1354.95924949646, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00015976093709468842, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_field_access", "lineno": 120, "outcome": "passed", "keywords": ["test_log_field_access", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00025364290922880173, "outcome": "passed"}, "call": {"duration": 0.00045266211964190006, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.105800\", \"user_id\": \"user123\", \"access_type\": \"field_access\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"warning\", \"contains_pii\": true, \"fields_accessed\": [\"name\", \"email\", \"phone\"], \"records_accessed\": 5, \"purpose\": \"data_subject_request\", \"entry_id\": \"1747353372105-9668a6a76b14e104\", \"hmac\": \"f924662da4c602a91be69c8934a6342901a9f195c17d8033f49aea28d63f7dfd\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.10588, "msecs": 105.0, "relativeCreated": 1356.3499450683594, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00015987292863428593, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_export", "lineno": 152, "outcome": "passed", "keywords": ["test_log_export", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00023345486260950565, "outcome": "passed"}, "call": {"duration": 0.00045246188528835773, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.107136\", \"user_id\": \"user123\", \"access_type\": \"export\", \"data_source\": \"customers\", \"outcome\": \"anonymized\", \"level\": \"warning\", \"contains_pii\": true, \"fields_accessed\": [\"name\", \"email\"], \"records_accessed\": 10, \"purpose\": \"regulatory_reporting\", \"metadata\": {\"export_format\": \"CSV\", \"destination\": \"/exports/report.csv\"}, \"entry_id\": \"1747353372107-0b4698e7d6bf5e44\", \"hmac\": \"71683ce0f861d99400b2308f8524805e1792320eccec3406de5f705b4a96b022\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1072226, "msecs": 107.0, "relativeCreated": 1357.6924800872803, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.0001652478240430355, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_policy_violation", "lineno": 189, "outcome": "passed", "keywords": ["test_log_policy_violation", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0002693070564419031, "outcome": "passed"}, "call": {"duration": 0.0004475228488445282, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.108537\", \"user_id\": \"user123\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT ssn FROM customers\", \"fields_accessed\": [\"ssn\"], \"metadata\": {\"policy_id\": \"policy456\", \"violation_details\": \"Unauthorized access to SSN field\"}, \"entry_id\": \"1747353372108-fad67e6402ecef02\", \"hmac\": \"61101b891b33be30193c26f112cc501d0360a556f961a373aca4a9c77d016afb\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1086223, "msecs": 108.0, "relativeCreated": 1359.0922355651855, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00015469500795006752, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_verify_log_integrity", "lineno": 223, "outcome": "passed", "keywords": ["test_verify_log_integrity", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.000225042924284935, "outcome": "passed"}, "call": {"duration": 0.0010411120019853115, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.109844\", \"user_id\": \"user0\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"purpose\": \"compliance_audit\", \"entry_id\": \"1747353372109-61518a17eba95309\", \"hmac\": \"d12f0303108f0ef988374c3ccfac8c54a734a4214fe88c875fd3360a01180af2\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1099133, "msecs": 109.0, "relativeCreated": 1360.3832721710205, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.109985\", \"user_id\": \"user1\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"purpose\": \"compliance_audit\", \"entry_id\": \"1747353372110-aa60c492d0f0dbe9\", \"previous_hash\": \"d12f0303108f0ef988374c3ccfac8c54a734a4214fe88c875fd3360a01180af2\", \"hmac\": \"23b10c39806c69a986d8647d274ac496e609093727b14f1b9ac18fc2bed10111\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1100328, "msecs": 110.0, "relativeCreated": 1360.5027198791504, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.110081\", \"user_id\": \"user2\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"purpose\": \"compliance_audit\", \"entry_id\": \"1747353372110-794dc713a168ce67\", \"previous_hash\": \"23b10c39806c69a986d8647d274ac496e609093727b14f1b9ac18fc2bed10111\", \"hmac\": \"11c552f4cd88f84025925a49212828725e54db7cca7e5b0949db88b502963aa8\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1101227, "msecs": 110.0, "relativeCreated": 1360.5926036834717, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.110167\", \"user_id\": \"user3\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"purpose\": \"compliance_audit\", \"entry_id\": \"1747353372110-213704717855ad66\", \"previous_hash\": \"11c552f4cd88f84025925a49212828725e54db7cca7e5b0949db88b502963aa8\", \"hmac\": \"36d98934ab7fba9ee906012baf49575d6eaf5a4274b4dd3a7c6d6026dc2d62d3\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1102078, "msecs": 110.0, "relativeCreated": 1360.677719116211, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.110252\", \"user_id\": \"user4\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"purpose\": \"compliance_audit\", \"entry_id\": \"1747353372110-03b84d15aeeecc78\", \"previous_hash\": \"36d98934ab7fba9ee906012baf49575d6eaf5a4274b4dd3a7c6d6026dc2d62d3\", \"hmac\": \"fa93ae5061e41fd25d2796900c17ac5d9a7b589ef75fd381e3d38fc8bfb85c19\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.110292, "msecs": 110.0, "relativeCreated": 1360.7618808746338, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00017908401787281036, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_search_logs", "lineno": 260, "outcome": "passed", "keywords": ["test_search_logs", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00023960508406162262, "outcome": "passed"}, "call": {"duration": 0.0007800611201673746, "outcome": "passed"}, "teardown": {"duration": 0.00016160914674401283, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_get_log_statistics", "lineno": 346, "outcome": "passed", "keywords": ["test_get_log_statistics", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00023262598551809788, "outcome": "passed"}, "call": {"duration": 0.000767087796702981, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.113497\", \"user_id\": \"user1\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": true, \"fields_accessed\": [\"name\", \"email\"], \"entry_id\": \"1747353372113-445fd48b81e143fa\", \"hmac\": \"55b159bee61b26c5709702c4d7066b5965ac83696d1f5cbbd9a61a211bc0417d\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.113582, "msecs": 113.0, "relativeCreated": 1364.0518188476562, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.113656\", \"user_id\": \"user2\", \"access_type\": \"field_access\", \"data_source\": \"orders\", \"outcome\": \"denied\", \"level\": \"alert\", \"contains_pii\": true, \"fields_accessed\": [\"credit_card\"], \"entry_id\": \"1747353372113-c598268a6dcca3c0\", \"previous_hash\": \"55b159bee61b26c5709702c4d7066b5965ac83696d1f5cbbd9a61a211bc0417d\", \"hmac\": \"daf4f8957261c79acb8f07aecd3f3613e2836a17ab964d5816b224c60a22dac6\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.113709, "msecs": 113.0, "relativeCreated": 1364.1788959503174, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.113758\", \"user_id\": \"user1\", \"access_type\": \"export\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"warning\", \"contains_pii\": true, \"fields_accessed\": [\"name\", \"email\", \"phone\"], \"entry_id\": \"1747353372113-1d777cf7997648b4\", \"previous_hash\": \"daf4f8957261c79acb8f07aecd3f3613e2836a17ab964d5816b224c60a22dac6\", \"hmac\": \"1e6f4fc722ab49e8e85b0d9362553ee749a1f9fc7483c29b83f3122c8b7e563d\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.113804, "msecs": 113.0, "relativeCreated": 1364.274024963379, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.113849\", \"user_id\": \"user3\", \"access_type\": \"policy_check\", \"data_source\": \"sensitive_data\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"entry_id\": \"1747353372113-71cf9926f1c4e698\", \"previous_hash\": \"1e6f4fc722ab49e8e85b0d9362553ee749a1f9fc7483c29b83f3122c8b7e563d\", \"hmac\": \"2e617970bb4d6f3f0897b0d20d2388170dd2719dacd39bf6c3c9ece7fd8cd1f2\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.113891, "msecs": 113.0, "relativeCreated": 1364.3608093261719, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.0001621448900550604, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_sensitive_field_handling", "lineno": 433, "outcome": "passed", "keywords": ["test_sensitive_field_handling", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0002311051357537508, "outcome": "passed"}, "call": {"duration": 0.0008748238906264305, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.115147\", \"user_id\": \"user1\", \"access_type\": \"field_access\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"ssn\", \"credit_card\", \"income\"], \"entry_id\": \"1747353372115-255132dbe168c18c\", \"hmac\": \"424a86f018a7af650bdd6840f86c7a1f33383eaed2935107c3b72f177d5084bb\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1152143, "msecs": 115.0, "relativeCreated": 1365.6842708587646, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.115405\", \"user_id\": \"user1\", \"access_type\": \"field_access\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"ssn\", \"credit_card\", \"income\"], \"entry_id\": \"1747353372115-333319aaa0f240f3\", \"hmac\": \"bac859b1774891818b6ae57e0af82218b339f8cef24cf1572265c8b75f8ff1de\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1154652, "msecs": 115.0, "relativeCreated": 1365.9350872039795, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.115639\", \"user_id\": \"user1\", \"access_type\": \"field_access\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"ssn\", \"credit_card\", \"income\"], \"entry_id\": \"1747353372115-dc9d1eefaca025d8\", \"hmac\": \"72cab620838689327c24c87cfedf6f10d2b9f667078e31ff3fb7fc78b0a452bc\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1156938, "msecs": 115.0, "relativeCreated": 1366.163730621338, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00019753305241465569, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_rotation", "lineno": 508, "outcome": "passed", "keywords": ["test_log_rotation", "TestAccessLogger", "test_logger.py", "access_logging", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.001510108821094036, "outcome": "passed"}, "call": {"duration": 0.002050521085038781, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.118311\", \"user_id\": \"user0\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372118-f888ae77559c45d8\", \"hmac\": \"8201efb634bae6335b151ef9b3b3146ef9ba799848f773d293b2253fabe33151\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1183949, "msecs": 118.0, "relativeCreated": 1368.8647747039795, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.118483\", \"user_id\": \"user1\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372118-7b54946b1d634a27\", \"previous_hash\": \"8201efb634bae6335b151ef9b3b3146ef9ba799848f773d293b2253fabe33151\", \"hmac\": \"fc435a8a28e68f9dfe68f23f8525bdeed6ac6bfa101a5cfc6b34550113f2de97\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1185412, "msecs": 118.0, "relativeCreated": 1369.0111637115479, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.118602\", \"user_id\": \"user2\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372118-db0ae3ba3e27f95e\", \"previous_hash\": \"fc435a8a28e68f9dfe68f23f8525bdeed6ac6bfa101a5cfc6b34550113f2de97\", \"hmac\": \"193947992f2029493dc9ee85419645a7eeed7220ea8b88a58881d0ac63b6a728\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1187425, "msecs": 118.0, "relativeCreated": 1369.2123889923096, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.118802\", \"user_id\": \"user3\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372118-42040bd4c99562f1\", \"previous_hash\": \"193947992f2029493dc9ee85419645a7eeed7220ea8b88a58881d0ac63b6a728\", \"hmac\": \"e75405be3f1ec89ef9ea056dcc5a777e428548d323dc5ffcec72c35b590e67f3\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.118858, "msecs": 118.0, "relativeCreated": 1369.3280220031738, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.118905\", \"user_id\": \"user4\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372118-a5d64d40b73644ed\", \"previous_hash\": \"e75405be3f1ec89ef9ea056dcc5a777e428548d323dc5ffcec72c35b590e67f3\", \"hmac\": \"4e1884684e7267c6080fda6446a9827b49680effff5683b3913952b36013da87\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1190681, "msecs": 119.0, "relativeCreated": 1369.5380687713623, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.119127\", \"user_id\": \"user5\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372119-c7afa07e7b2e2835\", \"previous_hash\": \"4e1884684e7267c6080fda6446a9827b49680effff5683b3913952b36013da87\", \"hmac\": \"ea3b48a9d2c2c8444ceabc7ca2693b6a3e70ac9a3d62f9fcbf26524baa9b446d\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1191874, "msecs": 119.0, "relativeCreated": 1369.657278060913, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.119234\", \"user_id\": \"user6\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372119-1a2dda100f73450a\", \"previous_hash\": \"ea3b48a9d2c2c8444ceabc7ca2693b6a3e70ac9a3d62f9fcbf26524baa9b446d\", \"hmac\": \"57fd4c2e5c32ae5e872690f9cde23312851bafaa745f615511b0134c39c7fd42\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.11951, "msecs": 119.0, "relativeCreated": 1369.9798583984375, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.119580\", \"user_id\": \"user7\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372119-d785cfc708b7a359\", \"previous_hash\": \"57fd4c2e5c32ae5e872690f9cde23312851bafaa745f615511b0134c39c7fd42\", \"hmac\": \"e18d5e23e61e2b63eac421ad8c07bbc6e81d020b862432a488cd15f717f679d7\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.119641, "msecs": 119.0, "relativeCreated": 1370.1109886169434, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.119699\", \"user_id\": \"user8\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372119-f66ec8870341abd8\", \"previous_hash\": \"e18d5e23e61e2b63eac421ad8c07bbc6e81d020b862432a488cd15f717f679d7\", \"hmac\": \"99ee32033abc4e3ed65355a478827ba763ce19c3acda4b7f60716d9990ec9e82\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1198537, "msecs": 119.0, "relativeCreated": 1370.323657989502, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.119913\", \"user_id\": \"user9\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"success\", \"level\": \"info\", \"contains_pii\": false, \"fields_accessed\": [\"field1\", \"field2\", \"field3\"], \"purpose\": \"testing\", \"metadata\": {\"test_data\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}, \"entry_id\": \"1747353372119-fe3ab913ac2ca87e\", \"previous_hash\": \"99ee32033abc4e3ed65355a478827ba763ce19c3acda4b7f60716d9990ec9e82\", \"hmac\": \"7169159cb96b97a0cdc4ce07aa25f8b1c1f2dcee8c2e446138b201cbf104d076\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1199687, "msecs": 119.0, "relativeCreated": 1370.438575744629, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00016684806905686855, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_initialization", "lineno": 15, "outcome": "passed", "keywords": ["test_initialization", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0003038989380002022, "outcome": "passed"}, "call": {"duration": 0.006056707818061113, "outcome": "passed"}, "teardown": {"duration": 0.00013550207950174809, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymization_method_enum", "lineno": 40, "outcome": "passed", "keywords": ["test_anonymization_method_enum", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012135319411754608, "outcome": "passed"}, "call": {"duration": 0.0001508940476924181, "outcome": "passed"}, "teardown": {"duration": 0.00011082412675023079, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_hash_value", "lineno": 51, "outcome": "passed", "keywords": ["test_hash_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011247186921536922, "outcome": "passed"}, "call": {"duration": 0.00027220509946346283, "outcome": "passed"}, "teardown": {"duration": 0.00011661904864013195, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_pseudonymize_value", "lineno": 88, "outcome": "passed", "keywords": ["test_pseudonymize_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011557294055819511, "outcome": "passed"}, "call": {"duration": 0.00020168512128293514, "outcome": "passed"}, "teardown": {"duration": 0.00010621803812682629, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_mask_value", "lineno": 115, "outcome": "passed", "keywords": ["test_mask_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011223414912819862, "outcome": "passed"}, "call": {"duration": 0.00028080306947231293, "outcome": "passed"}, "teardown": {"duration": 0.00010676216334104538, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_redact_value", "lineno": 157, "outcome": "passed", "keywords": ["test_redact_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011531705968081951, "outcome": "passed"}, "call": {"duration": 0.0001455449964851141, "outcome": "passed"}, "teardown": {"duration": 0.00013257400132715702, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_generalize_value", "lineno": 174, "outcome": "passed", "keywords": ["test_generalize_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011052098125219345, "outcome": "passed"}, "call": {"duration": 0.00015971390530467033, "outcome": "passed"}, "teardown": {"duration": 0.00010137003846466541, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_perturb_value", "lineno": 199, "outcome": "passed", "keywords": ["test_perturb_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010356400161981583, "outcome": "passed"}, "call": {"duration": 0.00016780593432486057, "outcome": "passed"}, "teardown": {"duration": 0.00010408507660031319, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_tokenize_value", "lineno": 232, "outcome": "passed", "keywords": ["test_tokenize_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010410998947918415, "outcome": "passed"}, "call": {"duration": 0.0001792609691619873, "outcome": "passed"}, "teardown": {"duration": 0.0001072778832167387, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_value", "lineno": 252, "outcome": "passed", "keywords": ["test_anonymize_value", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001044559758156538, "outcome": "passed"}, "call": {"duration": 0.0001908221747726202, "outcome": "passed"}, "teardown": {"duration": 0.00010465690866112709, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dataframe", "lineno": 283, "outcome": "passed", "keywords": ["test_anonymize_dataframe", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0015979919116944075, "outcome": "passed"}, "call": {"duration": 0.002843582071363926, "outcome": "passed"}, "teardown": {"duration": 0.00016158586367964745, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dict", "lineno": 331, "outcome": "passed", "keywords": ["test_anonymize_dict", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012891204096376896, "outcome": "passed"}, "call": {"duration": 0.00020177499391138554, "outcome": "passed"}, "teardown": {"duration": 0.00011314894072711468, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_list_of_dicts", "lineno": 365, "outcome": "passed", "keywords": ["test_anonymize_list_of_dicts", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011360901407897472, "outcome": "passed"}, "call": {"duration": 0.00020070094615221024, "outcome": "passed"}, "teardown": {"duration": 0.00010883202776312828, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_auto_anonymize_dataframe", "lineno": 400, "outcome": "passed", "keywords": ["test_auto_anonymize_dataframe", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.001152662094682455, "outcome": "passed"}, "call": {"duration": 0.0015622659120708704, "outcome": "passed"}, "teardown": {"duration": 0.0001528069842606783, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_get_field_type", "lineno": 431, "outcome": "passed", "keywords": ["test_get_field_type", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012183794751763344, "outcome": "passed"}, "call": {"duration": 0.00017356988973915577, "outcome": "passed"}, "teardown": {"duration": 0.00011404580436646938, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_guess_anonymization_method", "lineno": 455, "outcome": "passed", "keywords": ["test_guess_anonymization_method", "TestDataAnonymizer", "test_anonymizer.py", "anonymization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011346605606377125, "outcome": "passed"}, "call": {"duration": 0.00025103799998760223, "outcome": "passed"}, "teardown": {"duration": 0.00012103281915187836, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_initialization", "lineno": 14, "outcome": "passed", "keywords": ["test_initialization", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00038163294084370136, "outcome": "passed"}, "call": {"duration": 0.00024040392599999905, "outcome": "passed"}, "teardown": {"duration": 0.00011162692680954933, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_allowed_fields", "lineno": 34, "outcome": "passed", "keywords": ["test_get_allowed_fields", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011380412615835667, "outcome": "passed"}, "call": {"duration": 0.0001543050166219473, "outcome": "passed"}, "teardown": {"duration": 0.00010391208343207836, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dataframe", "lineno": 67, "outcome": "passed", "keywords": ["test_apply_to_dataframe", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0018352430779486895, "outcome": "passed"}, "call": {"duration": 0.0012348908931016922, "outcome": "passed"}, "teardown": {"duration": 0.00016322103329002857, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dict", "lineno": 95, "outcome": "passed", "keywords": ["test_apply_to_dict", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001356140710413456, "outcome": "passed"}, "call": {"duration": 0.0001685118768364191, "outcome": "passed"}, "teardown": {"duration": 0.00011093192733824253, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_list_of_dicts", "lineno": 134, "outcome": "passed", "keywords": ["test_apply_to_list_of_dicts", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011070910841226578, "outcome": "passed"}, "call": {"duration": 0.0001549171283841133, "outcome": "passed"}, "teardown": {"duration": 0.0001162670087069273, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_field_category", "lineno": 171, "outcome": "passed", "keywords": ["test_get_field_category", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.000110602006316185, "outcome": "passed"}, "call": {"duration": 0.00014819600619375706, "outcome": "passed"}, "teardown": {"duration": 0.00011703884229063988, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_field_category", "lineno": 187, "outcome": "passed", "keywords": ["test_add_field_category", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011072098277509212, "outcome": "passed"}, "call": {"duration": 0.0001360441092401743, "outcome": "passed"}, "teardown": {"duration": 0.00010148691944777966, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_purpose_category", "lineno": 203, "outcome": "passed", "keywords": ["test_add_purpose_category", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001050429418683052, "outcome": "passed"}, "call": {"duration": 0.0001367279328405857, "outcome": "passed"}, "teardown": {"duration": 0.00010023685172200203, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_set_purpose_categories", "lineno": 225, "outcome": "passed", "keywords": ["test_set_purpose_categories", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010442896746098995, "outcome": "passed"}, "call": {"duration": 0.00014090701006352901, "outcome": "passed"}, "teardown": {"duration": 0.00010611698962748051, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_with_pii_detector", "lineno": 256, "outcome": "passed", "keywords": ["test_with_pii_detector", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011447751894593239, "outcome": "passed"}, "call": {"duration": 0.00027173012495040894, "outcome": "passed"}, "teardown": {"duration": 0.00015228288248181343, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_purpose_enum", "lineno": 280, "outcome": "passed", "keywords": ["test_purpose_enum", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012114690616726875, "outcome": "passed"}, "call": {"duration": 0.00013632699847221375, "outcome": "passed"}, "teardown": {"duration": 0.00011379318311810493, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_data_category_enum", "lineno": 294, "outcome": "passed", "keywords": ["test_data_category_enum", "TestDataMinimizer", "test_minimizer.py", "data_minimization", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001092841848731041, "outcome": "passed"}, "call": {"duration": 0.0001341488678008318, "outcome": "passed"}, "teardown": {"duration": 0.00010689208284020424, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_protection_impact_assessment", "lineno": 134, "outcome": "passed", "keywords": ["test_scenario_data_protection_impact_assessment", "TestUserScenarios", "test_scenarios.py", "integration", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0057739990297704935, "outcome": "passed"}, "call": {"duration": 0.011284551117569208, "outcome": "passed"}, "teardown": {"duration": 0.0002255819272249937, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_subject_access_request", "lineno": 193, "outcome": "passed", "keywords": ["test_scenario_data_subject_access_request", "TestUserScenarios", "test_scenarios.py", "integration", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0019268188625574112, "outcome": "passed"}, "call": {"duration": 0.0027801941614598036, "outcome": "passed"}, "teardown": {"duration": 0.00022144988179206848, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_compliance_audit", "lineno": 257, "outcome": "passed", "keywords": ["test_scenario_compliance_audit", "TestUserScenarios", "test_scenarios.py", "integration", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.002028729999437928, "outcome": "passed"}, "call": {"duration": 0.017530336044728756, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.195675\", \"user_id\": \"auditor\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT COUNT(*) as count FROM customers WHERE ssn IS NOT NULL\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['compliance_auditor'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372195-da4aaa6918e6a0a1\", \"hmac\": \"966bf7647cb4acc583414333ae5bb15b3bf6f9bc7ecade03473daf1074830cf3\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1957679, "msecs": 195.0, "relativeCreated": 1446.2378025054932, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.196527\", \"user_id\": \"auditor\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT COUNT(*) as count FROM customers WHERE ssn IS NOT NULL\", \"fields_accessed\": [\"id\", \"name\", \"email\", \"phone\", \"ssn\", \"address\", \"credit_card\", \"customer_segment\", \"join_date\"], \"purpose\": \"compliance_audit\", \"metadata\": {\"execution_time_ms\": 8, \"query_id\": \"3f408d28-73a9-43a6-9c56-a2b05c03d4d2\"}, \"entry_id\": \"1747353372196-7408742f7de31751\", \"previous_hash\": \"966bf7647cb4acc583414333ae5bb15b3bf6f9bc7ecade03473daf1074830cf3\", \"hmac\": \"5543071d6eb3de643c3c31dff3c798aa1cd29e9a627f20a3121912ce808660c3\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1966255, "msecs": 196.0, "relativeCreated": 1447.0953941345215, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.198881\", \"user_id\": \"auditor\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT name FROM customers LIMIT 5\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['compliance_auditor'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372198-a79736e96bbf346b\", \"previous_hash\": \"5543071d6eb3de643c3c31dff3c798aa1cd29e9a627f20a3121912ce808660c3\", \"hmac\": \"10e8c94e1f9ae44438571a25a0c35efd0fc02752462ed28ef812e6d2367dd5c1\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1989698, "msecs": 198.0, "relativeCreated": 1449.4397640228271, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.199484\", \"user_id\": \"auditor\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT name FROM customers LIMIT 5\", \"fields_accessed\": [\"id\", \"name\", \"email\", \"phone\", \"ssn\", \"address\", \"credit_card\", \"customer_segment\", \"join_date\"], \"purpose\": \"compliance_audit\", \"metadata\": {\"execution_time_ms\": 1, \"query_id\": \"8aa85c6a-e144-49dc-a6a3-5212734f7674\"}, \"entry_id\": \"1747353372199-f3b80cfd9cb49eaa\", \"previous_hash\": \"10e8c94e1f9ae44438571a25a0c35efd0fc02752462ed28ef812e6d2367dd5c1\", \"hmac\": \"9eb0cfb5b4b1e8c7452621c8d50fe04cd22e00f1b3d8923b48827820a095e15c\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.1995766, "msecs": 199.0, "relativeCreated": 1450.0465393066406, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.201318\", \"user_id\": \"auditor\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT name FROM customers LIMIT 5\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['compliance_auditor'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372201-f5ca898fd9d494c2\", \"previous_hash\": \"9eb0cfb5b4b1e8c7452621c8d50fe04cd22e00f1b3d8923b48827820a095e15c\", \"hmac\": \"75f9540ac7a1dc72976c58e049f14bb3646ecb850545cb46483e771b04683c36\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2014017, "msecs": 201.0, "relativeCreated": 1451.871633529663, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.201914\", \"user_id\": \"auditor\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT name FROM customers LIMIT 5\", \"fields_accessed\": [\"id\", \"name\", \"email\", \"phone\", \"ssn\", \"address\", \"credit_card\", \"customer_segment\", \"join_date\"], \"purpose\": \"compliance_audit\", \"metadata\": {\"execution_time_ms\": 1, \"query_id\": \"67e9ef81-ca5b-46c8-9d3d-675887ba533e\"}, \"entry_id\": \"1747353372201-7475553fc532deaa\", \"previous_hash\": \"75f9540ac7a1dc72976c58e049f14bb3646ecb850545cb46483e771b04683c36\", \"hmac\": \"8ef552b7fd02ff555802964100bc83a920cfdbbedfa3e168d0e0ea7d9566d576\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2020035, "msecs": 202.0, "relativeCreated": 1452.4734020233154, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.203819\", \"user_id\": \"auditor\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT name FROM customers LIMIT 5\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['compliance_auditor'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372203-ea60c5923952d445\", \"previous_hash\": \"8ef552b7fd02ff555802964100bc83a920cfdbbedfa3e168d0e0ea7d9566d576\", \"hmac\": \"6c4fcee93892e4c633beee36d67303ecbb059ed864185ce3ff42b79704e8909e\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2038999, "msecs": 203.0, "relativeCreated": 1454.3697834014893, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.204438\", \"user_id\": \"auditor\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT name FROM customers LIMIT 5\", \"fields_accessed\": [\"id\", \"name\", \"email\", \"phone\", \"ssn\", \"address\", \"credit_card\", \"customer_segment\", \"join_date\"], \"purpose\": \"compliance_audit\", \"metadata\": {\"execution_time_ms\": 1, \"query_id\": \"440116d9-40bf-4d57-9b5f-cbdd3a7819b0\"}, \"entry_id\": \"1747353372204-4ae44cc34d67ebbb\", \"previous_hash\": \"6c4fcee93892e4c633beee36d67303ecbb059ed864185ce3ff42b79704e8909e\", \"hmac\": \"b0bf3f63f6547db4f7eff34972448c295c17922daddc689ae98c57f9f091d549\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2045326, "msecs": 204.0, "relativeCreated": 1455.0025463104248, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00021101580932736397, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_investigation", "lineno": 328, "outcome": "passed", "keywords": ["test_scenario_investigation", "TestUserScenarios", "test_scenarios.py", "integration", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0026342591736465693, "outcome": "passed"}, "call": {"duration": 0.018383454997092485, "outcome": "passed", "log": [{"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.210963\", \"user_id\": \"analyst\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT customer_segment, COUNT(*) as count FROM customers GROUP BY customer_segment\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['data_analyst'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372210-346c9bcdaf2e637d\", \"hmac\": \"93fcee8f23d7bbfd836c5b2db8288fda4db92eb46ddeeec0810bb9199b27a6d0\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2110512, "msecs": 211.0, "relativeCreated": 1461.5211486816406, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.213049\", \"user_id\": \"analyst\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT customer_segment, COUNT(*) as count FROM customers GROUP BY customer_segment\", \"fields_accessed\": [\"customer_segment\", \"join_date\"], \"purpose\": \"analytics\", \"metadata\": {\"execution_time_ms\": 2, \"query_id\": \"b6d77272-37f1-4f49-9b53-ccf8fd6f5d1d\"}, \"entry_id\": \"1747353372213-454ac56814be7171\", \"previous_hash\": \"93fcee8f23d7bbfd836c5b2db8288fda4db92eb46ddeeec0810bb9199b27a6d0\", \"hmac\": \"9ee1fe91b46a347eea95cf45591979c62813d1b6dfac2d348eb6905c1753df03\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2131407, "msecs": 213.0, "relativeCreated": 1463.6106491088867, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.215375\", \"user_id\": \"analyst\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT customer_segment, COUNT(*) as count FROM customers GROUP BY customer_segment\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['data_analyst'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372215-32f58fe167e9bc71\", \"previous_hash\": \"9ee1fe91b46a347eea95cf45591979c62813d1b6dfac2d348eb6905c1753df03\", \"hmac\": \"703cc6a97ea8ebb77e51b2cbd0f4d736438ae0b627ae1d757580229e1a3bd62c\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2154589, "msecs": 215.0, "relativeCreated": 1465.9287929534912, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.217483\", \"user_id\": \"analyst\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT customer_segment, COUNT(*) as count FROM customers GROUP BY customer_segment\", \"fields_accessed\": [\"customer_segment\", \"join_date\"], \"purpose\": \"analytics\", \"metadata\": {\"execution_time_ms\": 2, \"query_id\": \"f65517c6-ea94-45d6-af1a-6bf669081d46\"}, \"entry_id\": \"1747353372217-aa4cc1eb8f441b80\", \"previous_hash\": \"703cc6a97ea8ebb77e51b2cbd0f4d736438ae0b627ae1d757580229e1a3bd62c\", \"hmac\": \"563cbfbd929afa788de1bf2b62cf3b8a48bf05c505fbf4d15864826ddbebe5e3\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2175744, "msecs": 217.0, "relativeCreated": 1468.0442810058594, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.219833\", \"user_id\": \"analyst\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT customer_segment, COUNT(*) as count FROM customers GROUP BY customer_segment\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['data_analyst'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372219-1d56aa8c12001043\", \"previous_hash\": \"563cbfbd929afa788de1bf2b62cf3b8a48bf05c505fbf4d15864826ddbebe5e3\", \"hmac\": \"60430626dc311f5ce42d5432b9caaf9795696f37d12c135ffe82ae8d1cbd373e\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.219914, "msecs": 219.0, "relativeCreated": 1470.383882522583, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.221802\", \"user_id\": \"analyst\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT customer_segment, COUNT(*) as count FROM customers GROUP BY customer_segment\", \"fields_accessed\": [\"customer_segment\", \"join_date\"], \"purpose\": \"analytics\", \"metadata\": {\"execution_time_ms\": 2, \"query_id\": \"ffb08668-19dc-4cb2-b870-21b0785489b5\"}, \"entry_id\": \"1747353372221-0335f7756df76222\", \"previous_hash\": \"60430626dc311f5ce42d5432b9caaf9795696f37d12c135ffe82ae8d1cbd373e\", \"hmac\": \"666ac5d9d4d405937324d5c58f42b9f5c8ecce8a1b158726e7bf92dbaba12661\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2218983, "msecs": 221.0, "relativeCreated": 1472.3682403564453, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.223509\", \"user_id\": \"analyst\", \"access_type\": \"policy_check\", \"data_source\": \"customers\", \"outcome\": \"violation\", \"level\": \"alert\", \"contains_pii\": true, \"query\": \"SELECT name, ssn, credit_card FROM customers\", \"metadata\": {\"policy_id\": \"dsar_policy\", \"violation_details\": \"None of the user's roles ['data_analyst'] are in the allowed list: data_privacy_officer\"}, \"entry_id\": \"1747353372223-2998032814a43bbe\", \"previous_hash\": \"666ac5d9d4d405937324d5c58f42b9f5c8ecce8a1b158726e7bf92dbaba12661\", \"hmac\": \"9bbea82bffabc5b210717a153cf2ecd1c4d726d12ab846da7709e2c08f996928\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.223588, "msecs": 223.0, "relativeCreated": 1474.057912826538, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.225479\", \"user_id\": \"analyst\", \"access_type\": \"query_execution\", \"data_source\": \"customers\", \"outcome\": \"minimized\", \"level\": \"attention\", \"contains_pii\": true, \"query\": \"SELECT name, ssn, credit_card FROM customers\", \"fields_accessed\": [\"customer_segment\", \"join_date\"], \"purpose\": \"analytics\", \"metadata\": {\"execution_time_ms\": 2, \"query_id\": \"083600dc-4d59-4992-9bc1-4df0fe52d97a\"}, \"entry_id\": \"1747353372225-d1e318cb92f5127d\", \"previous_hash\": \"9bbea82bffabc5b210717a153cf2ecd1c4d726d12ab846da7709e2c08f996928\", \"hmac\": \"ee880ca0ede04616304d827f0c06012561bb5ab7877e764698d0bdf049c2a312\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.225572, "msecs": 225.0, "relativeCreated": 1476.0420322418213, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "privacy_access_logger", "msg": "{\"timestamp\": \"2025-05-15T23:56:12.227120\", \"user_id\": \"privacy_officer\", \"access_type\": \"query_execution\", \"data_source\": \"\", \"outcome\": \"error\", \"level\": \"info\", \"contains_pii\": false, \"query\": \"SELECT entry_id, timestamp, user_id, outcome FROM access_logs WHERE outcome = 'violation'\", \"purpose\": \"compliance_audit\", \"metadata\": {\"error\": \"Tables not found: access_logs\", \"execution_time_ms\": 1, \"query_id\": \"58570c90-0e12-4d99-b354-c6d4f8ef14c9\"}, \"entry_id\": \"1747353372227-9e141191083b8e6e\", \"previous_hash\": \"ee880ca0ede04616304d827f0c06012561bb5ab7877e764698d0bdf049c2a312\", \"hmac\": \"0a495e305574679a6cd6677485cfc2e219851979ff8d67897a046e5165ea8dd1\"}", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/access_logging/logger.py", "filename": "logger.py", "module": "logger", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 787, "funcName": "_write_log_entry", "created": 1747353372.2272048, "msecs": 227.0, "relativeCreated": 1477.6747226715088, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00020768307149410248, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_privacy_compliance_report", "lineno": 386, "outcome": "passed", "keywords": ["test_scenario_privacy_compliance_report", "TestUserScenarios", "test_scenarios.py", "integration", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.01035633496940136, "outcome": "passed"}, "call": {"duration": 0.011479118838906288, "outcome": "passed"}, "teardown": {"duration": 0.0002152649685740471, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_initialization", "lineno": 12, "outcome": "passed", "keywords": ["test_initialization", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0003117069136351347, "outcome": "passed"}, "call": {"duration": 0.0002930669579654932, "outcome": "passed"}, "teardown": {"duration": 0.0001119889784604311, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_detect_in_string", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011188792996108532, "outcome": "passed"}, "call": {"duration": 0.00023346906527876854, "outcome": "passed"}, "teardown": {"duration": 0.00010772212408483028, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_series", "lineno": 51, "outcome": "passed", "keywords": ["test_detect_in_series", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011289077810943127, "outcome": "passed"}, "call": {"duration": 0.00040999287739396095, "outcome": "passed"}, "teardown": {"duration": 0.00015781400725245476, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dataframe", "lineno": 72, "outcome": "passed", "keywords": ["test_detect_in_dataframe", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011209850199520588, "outcome": "passed"}, "call": {"duration": 0.00029261992312967777, "outcome": "passed"}, "teardown": {"duration": 0.00016165897250175476, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dict", "lineno": 91, "outcome": "passed", "keywords": ["test_detect_in_dict", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012700608931481838, "outcome": "passed"}, "call": {"duration": 0.0002199260052293539, "outcome": "passed"}, "teardown": {"duration": 0.00010624900460243225, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_is_pii_field", "lineno": 113, "outcome": "passed", "keywords": ["test_is_pii_field", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010720407590270042, "outcome": "passed"}, "call": {"duration": 0.00019878288730978966, "outcome": "passed"}, "teardown": {"duration": 0.00010344292968511581, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_luhn_check", "lineno": 139, "outcome": "passed", "keywords": ["test_luhn_check", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010467902757227421, "outcome": "passed"}, "call": {"duration": 0.00012664101086556911, "outcome": "passed"}, "teardown": {"duration": 0.00010392884723842144, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_field_context_scores", "lineno": 158, "outcome": "passed", "keywords": ["test_field_context_scores", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010607508011162281, "outcome": "passed"}, "call": {"duration": 0.0007314030081033707, "outcome": "passed"}, "teardown": {"duration": 0.0001145701389759779, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_custom_patterns", "lineno": 174, "outcome": "passed", "keywords": ["test_custom_patterns", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001110199373215437, "outcome": "passed"}, "call": {"duration": 0.00045430613681674004, "outcome": "passed"}, "teardown": {"duration": 0.00011103693395853043, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_pattern_info", "lineno": 211, "outcome": "passed", "keywords": ["test_get_pattern_info", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011554406955838203, "outcome": "passed"}, "call": {"duration": 0.00019765296019613743, "outcome": "passed"}, "teardown": {"duration": 0.00010372302494943142, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_all_patterns", "lineno": 225, "outcome": "passed", "keywords": ["test_get_all_patterns", "TestPIIDetector", "test_detector.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010883202776312828, "outcome": "passed"}, "call": {"duration": 0.0002211621031165123, "outcome": "passed"}, "teardown": {"duration": 0.00010603689588606358, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_initialization", "lineno": 16, "outcome": "passed", "keywords": ["test_initialization", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012569199316203594, "outcome": "passed"}, "call": {"duration": 0.0002685319632291794, "outcome": "passed"}, "teardown": {"duration": 0.00010792911052703857, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_dataframe", "lineno": 30, "outcome": "passed", "keywords": ["test_scan_dataframe", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011419199872761965, "outcome": "passed"}, "call": {"duration": 0.0003517521545290947, "outcome": "passed"}, "teardown": {"duration": 0.00015076599083840847, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_csv_file", "lineno": 62, "outcome": "passed", "keywords": ["test_scan_csv_file", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.003570802975445986, "outcome": "passed"}, "call": {"duration": 0.0026077311486005783, "outcome": "passed"}, "teardown": {"duration": 0.00017578317783772945, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_nonexistent_csv_file", "lineno": 90, "outcome": "passed", "keywords": ["test_scan_nonexistent_csv_file", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012188893742859364, "outcome": "passed"}, "call": {"duration": 0.00024635205045342445, "outcome": "passed"}, "teardown": {"duration": 0.00010848091915249825, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_dataframes", "lineno": 98, "outcome": "passed", "keywords": ["test_scan_multiple_dataframes", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011693639680743217, "outcome": "passed"}, "call": {"duration": 0.006351028103381395, "outcome": "passed"}, "teardown": {"duration": 0.00015097297728061676, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_csv_files", "lineno": 127, "outcome": "passed", "keywords": ["test_scan_multiple_csv_files", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0014874839689582586, "outcome": "passed"}, "call": {"duration": 0.011841111117973924, "outcome": "passed"}, "teardown": {"duration": 0.00017073494382202625, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_generate_summary_report", "lineno": 153, "outcome": "passed", "keywords": ["test_generate_summary_report", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011455591302365065, "outcome": "passed"}, "call": {"duration": 0.0056965649127960205, "outcome": "passed"}, "teardown": {"duration": 0.00015091500245034695, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_error_handling", "lineno": 186, "outcome": "passed", "keywords": ["test_error_handling", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012175203301012516, "outcome": "passed"}, "call": {"duration": 0.0008825650438666344, "outcome": "passed"}, "teardown": {"duration": 0.00012108497321605682, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_parallel_execution", "lineno": 205, "outcome": "passed", "keywords": ["test_parallel_execution", "TestPIIScanner", "test_scanner.py", "pii_detection", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.001134553924202919, "outcome": "passed"}, "call": {"duration": 0.011528094997629523, "outcome": "passed"}, "teardown": {"duration": 0.00015699979849159718, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_initialization", "lineno": 18, "outcome": "passed", "keywords": ["test_initialization", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00035111699253320694, "outcome": "passed"}, "call": {"duration": 0.00036735390312969685, "outcome": "passed"}, "teardown": {"duration": 0.00011931615881621838, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_query", "lineno": 46, "outcome": "passed", "keywords": ["test_enforce_query", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001169079914689064, "outcome": "passed"}, "call": {"duration": 0.0007526858244091272, "outcome": "passed"}, "teardown": {"duration": 0.00012101884931325912, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_field_access", "lineno": 164, "outcome": "passed", "keywords": ["test_enforce_field_access", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011481018736958504, "outcome": "passed"}, "call": {"duration": 0.00015981518663465977, "outcome": "passed"}, "teardown": {"duration": 0.00010842294432222843, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_combination", "lineno": 225, "outcome": "passed", "keywords": ["test_enforce_data_combination", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010869116522371769, "outcome": "passed"}, "call": {"duration": 0.0002027079463005066, "outcome": "passed"}, "teardown": {"duration": 0.00011898903176188469, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_source_access", "lineno": 316, "outcome": "passed", "keywords": ["test_enforce_data_source_access", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011135195381939411, "outcome": "passed"}, "call": {"duration": 0.0001804218627512455, "outcome": "passed"}, "teardown": {"duration": 0.00010909698903560638, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_categorize_fields", "lineno": 393, "outcome": "passed", "keywords": ["test_categorize_fields", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011142902076244354, "outcome": "passed"}, "call": {"duration": 0.0007154310587793589, "outcome": "passed"}, "teardown": {"duration": 0.00012095598503947258, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_field_category", "lineno": 459, "outcome": "passed", "keywords": ["test_add_field_category", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011407001875340939, "outcome": "passed"}, "call": {"duration": 0.00014043203555047512, "outcome": "passed"}, "teardown": {"duration": 0.00011386792175471783, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_policy", "lineno": 484, "outcome": "passed", "keywords": ["test_add_policy", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001086678821593523, "outcome": "passed"}, "call": {"duration": 0.00014555081725120544, "outcome": "passed"}, "teardown": {"duration": 0.00010932586155831814, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_load_policies", "lineno": 504, "outcome": "passed", "keywords": ["test_load_policies", "TestPolicyEnforcer", "test_enforcer.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011587701737880707, "outcome": "passed"}, "call": {"duration": 0.0001607039012014866, "outcome": "passed"}, "teardown": {"duration": 0.00011194194667041302, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_type_enum", "lineno": 14, "outcome": "passed", "keywords": ["test_policy_type_enum", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012587499804794788, "outcome": "passed"}, "call": {"duration": 0.00013412395492196083, "outcome": "passed"}, "teardown": {"duration": 0.00010262709110975266, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_action_enum", "lineno": 26, "outcome": "passed", "keywords": ["test_policy_action_enum", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011619599536061287, "outcome": "passed"}, "call": {"duration": 0.00013274303637444973, "outcome": "passed"}, "teardown": {"duration": 0.00010233116336166859, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_category_enum", "lineno": 36, "outcome": "passed", "keywords": ["test_field_category_enum", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010573118925094604, "outcome": "passed"}, "call": {"duration": 0.00012742308899760246, "outcome": "passed"}, "teardown": {"duration": 0.00010180403478443623, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_combination_validation", "lineno": 52, "outcome": "passed", "keywords": ["test_field_combination_validation", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010732794180512428, "outcome": "passed"}, "call": {"duration": 0.00018806499429047108, "outcome": "passed"}, "teardown": {"duration": 0.00011114007793366909, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_creation", "lineno": 75, "outcome": "passed", "keywords": ["test_data_policy_creation", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010822596959769726, "outcome": "passed"}, "call": {"duration": 0.00016398285515606403, "outcome": "passed"}, "teardown": {"duration": 0.00010535214096307755, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_to_dict", "lineno": 129, "outcome": "passed", "keywords": ["test_data_policy_to_dict", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010924483649432659, "outcome": "passed"}, "call": {"duration": 0.0001774949487298727, "outcome": "passed"}, "teardown": {"duration": 0.00010372488759458065, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_from_dict", "lineno": 155, "outcome": "passed", "keywords": ["test_data_policy_from_dict", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011660484597086906, "outcome": "passed"}, "call": {"duration": 0.00015077483840286732, "outcome": "passed"}, "teardown": {"duration": 0.00010305899195373058, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_creation", "lineno": 180, "outcome": "passed", "keywords": ["test_policy_set_creation", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0001048319973051548, "outcome": "passed"}, "call": {"duration": 0.00016197306104004383, "outcome": "passed"}, "teardown": {"duration": 0.00010372302494943142, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_to_dict", "lineno": 229, "outcome": "passed", "keywords": ["test_policy_set_to_dict", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010411790572106838, "outcome": "passed"}, "call": {"duration": 0.00018278718926012516, "outcome": "passed"}, "teardown": {"duration": 0.00011549401096999645, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_from_dict", "lineno": 258, "outcome": "passed", "keywords": ["test_policy_set_from_dict", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011291704140603542, "outcome": "passed"}, "call": {"duration": 0.0001516460906714201, "outcome": "passed"}, "teardown": {"duration": 0.00010449998080730438, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_add_remove", "lineno": 286, "outcome": "passed", "keywords": ["test_policy_set_add_remove", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010641897097229958, "outcome": "passed"}, "call": {"duration": 0.0002973501104861498, "outcome": "passed"}, "teardown": {"duration": 0.00011742697097361088, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_get_by_type", "lineno": 351, "outcome": "passed", "keywords": ["test_policy_set_get_by_type", "TestPolicyDefinitions", "test_policy.py", "policy_enforcement", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011541997082531452, "outcome": "passed"}, "call": {"duration": 0.00016283802688121796, "outcome": "passed"}, "teardown": {"duration": 0.00010936800390481949, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_initialization", "lineno": 19, "outcome": "passed", "keywords": ["test_initialization", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0003001950681209564, "outcome": "passed"}, "call": {"duration": 0.0008464029524475336, "outcome": "passed"}, "teardown": {"duration": 0.00012104492634534836, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_simple_query", "lineno": 55, "outcome": "passed", "keywords": ["test_execute_simple_query", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011406729463487864, "outcome": "passed"}, "call": {"duration": 0.0039347209967672825, "outcome": "passed"}, "teardown": {"duration": 0.00016999198123812675, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_join", "lineno": 95, "outcome": "passed", "keywords": ["test_execute_query_with_join", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.001147913048043847, "outcome": "passed"}, "call": {"duration": 0.008176838047802448, "outcome": "passed"}, "teardown": {"duration": 0.0001669649500399828, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_policy_enforcement", "lineno": 129, "outcome": "passed", "keywords": ["test_execute_query_with_policy_enforcement", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011374091263860464, "outcome": "passed"}, "call": {"duration": 0.0019156960770487785, "outcome": "passed"}, "teardown": {"duration": 0.0001506961416453123, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_minimization", "lineno": 176, "outcome": "passed", "keywords": ["test_execute_query_with_minimization", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011356240138411522, "outcome": "passed"}, "call": {"duration": 0.0029709881637245417, "outcome": "passed"}, "teardown": {"duration": 0.00017597293481230736, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_anonymization", "lineno": 212, "outcome": "passed", "keywords": ["test_execute_query_with_anonymization", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011308931279927492, "outcome": "passed"}, "call": {"duration": 0.0037032589316368103, "outcome": "passed"}, "teardown": {"duration": 0.00015107705257833004, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_privacy_functions", "lineno": 277, "outcome": "passed", "keywords": ["test_execute_query_with_privacy_functions", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011502299457788467, "outcome": "passed"}, "call": {"duration": 0.0033402228727936745, "outcome": "passed"}, "teardown": {"duration": 0.0001707670744508505, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_query_with_logging", "lineno": 317, "outcome": "passed", "keywords": ["test_query_with_logging", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011303001083433628, "outcome": "passed"}, "call": {"duration": 0.0025837807916104794, "outcome": "passed"}, "teardown": {"duration": 0.00016901502385735512, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_error_handling", "lineno": 352, "outcome": "passed", "keywords": ["test_error_handling", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012186495587229729, "outcome": "passed"}, "call": {"duration": 0.0012133701238781214, "outcome": "passed"}, "teardown": {"duration": 0.00011869496665894985, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_add_remove_data_source", "lineno": 384, "outcome": "passed", "keywords": ["test_add_remove_data_source", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.0011217358987778425, "outcome": "passed"}, "call": {"duration": 0.001980399014428258, "outcome": "passed"}, "teardown": {"duration": 0.00015571597032248974, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_get_query_history", "lineno": 419, "outcome": "passed", "keywords": ["test_get_query_history", "TestPrivacyQueryEngine", "test_engine.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012132595293223858, "outcome": "passed"}, "call": {"duration": 0.0032901540398597717, "outcome": "passed"}, "teardown": {"duration": 0.0001378620509058237, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_initialization", "lineno": 12, "outcome": "passed", "keywords": ["test_initialization", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00013744994066655636, "outcome": "passed"}, "call": {"duration": 0.00023646396584808826, "outcome": "passed"}, "teardown": {"duration": 0.00011106301099061966, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_privacy_function_enum", "lineno": 17, "outcome": "passed", "keywords": ["test_privacy_function_enum", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011055916547775269, "outcome": "passed"}, "call": {"duration": 0.00014367979019880295, "outcome": "passed"}, "teardown": {"duration": 0.00010754796676337719, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_simple_query", "lineno": 33, "outcome": "passed", "keywords": ["test_parse_simple_query", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011028698645532131, "outcome": "passed"}, "call": {"duration": 0.0010413429699838161, "outcome": "passed"}, "teardown": {"duration": 0.000117819057777524, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_join", "lineno": 56, "outcome": "passed", "keywords": ["test_parse_query_with_join", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.000118291936814785, "outcome": "passed"}, "call": {"duration": 0.0028153930325061083, "outcome": "passed"}, "teardown": {"duration": 0.00012180395424365997, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_privacy_functions", "lineno": 83, "outcome": "passed", "keywords": ["test_parse_query_with_privacy_functions", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011419993825256824, "outcome": "passed"}, "call": {"duration": 0.0029456578195095062, "outcome": "passed"}, "teardown": {"duration": 0.00012419489212334156, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_various_clauses", "lineno": 123, "outcome": "passed", "keywords": ["test_parse_query_with_various_clauses", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00012078485451638699, "outcome": "passed"}, "call": {"duration": 0.004442419158294797, "outcome": "passed"}, "teardown": {"duration": 0.0001283849123865366, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_has_privacy_functions", "lineno": 163, "outcome": "passed", "keywords": ["test_has_privacy_functions", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011511798948049545, "outcome": "passed"}, "call": {"duration": 0.00023149000480771065, "outcome": "passed"}, "teardown": {"duration": 0.00011599715799093246, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_extract_table_relationships", "lineno": 175, "outcome": "passed", "keywords": ["test_extract_table_relationships", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00010951003059744835, "outcome": "passed"}, "call": {"duration": 0.00022571301087737083, "outcome": "passed"}, "teardown": {"duration": 0.00011673499830067158, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_select_star", "lineno": 193, "outcome": "passed", "keywords": ["test_parse_select_star", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011357502080500126, "outcome": "passed"}, "call": {"duration": 0.0005733598954975605, "outcome": "passed"}, "teardown": {"duration": 0.00011898903176188469, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_subqueries", "lineno": 205, "outcome": "passed", "keywords": ["test_parse_query_with_subqueries", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011256011202931404, "outcome": "passed"}, "call": {"duration": 0.0031116839963942766, "outcome": "passed"}, "teardown": {"duration": 0.00012646988034248352, "outcome": "passed"}}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_different_join_types", "lineno": 230, "outcome": "passed", "keywords": ["test_parse_query_with_different_join_types", "TestQueryParser", "test_parser.py", "query_engine", "data_privacy_officer", "tests", "unified", ""], "setup": {"duration": 0.00011402205564081669, "outcome": "passed"}, "call": {"duration": 0.003344109980389476, "outcome": "passed"}, "teardown": {"duration": 0.00013212207704782486, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyzer_initialization", "lineno": 98, "outcome": "passed", "keywords": ["test_analyzer_initialization", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0006629480049014091, "outcome": "passed"}, "call": {"duration": 0.00014235195703804493, "outcome": "passed"}, "teardown": {"duration": 0.00013242708519101143, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_email_address", "lineno": 105, "outcome": "passed", "keywords": ["test_extract_email_address", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00019258493557572365, "outcome": "passed"}, "call": {"duration": 0.00013674888759851456, "outcome": "passed"}, "teardown": {"duration": 0.0001263038720935583, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_participant_string", "lineno": 120, "outcome": "passed", "keywords": ["test_parse_participant_string", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00018456089310348034, "outcome": "passed"}, "call": {"duration": 0.0003098519518971443, "outcome": "passed"}, "teardown": {"duration": 0.00013621710240840912, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_email_document", "lineno": 149, "outcome": "failed", "keywords": ["test_parse_email_document", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002882210537791252, "outcome": "passed"}, "call": {"duration": 0.0003444280009716749, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 155, "message": "assert None is not None"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 155, "message": "AssertionError"}], "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.4216802, "msecs": 421.0, "relativeCreated": 1672.1501350402832, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}], "longrepr": "communication_analyzer = <legal_discovery_interpreter.communication_analysis.analyzer.CommunicationAnalyzer object at 0x7f80fa71a170>\nsample_email_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f80fa71a200>\n\n    def test_parse_email_document(communication_analyzer, sample_email_collection):\n        \"\"\"Test parsing an email document into a message.\"\"\"\n        email = sample_email_collection.get_document(\"email001\")\n        message = communication_analyzer.parse_email_document(email)\n    \n>       assert message is not None\nE       assert None is not None\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py:155: AssertionError"}, "teardown": {"duration": 0.00019778520800173283, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_messages_from_collection", "lineno": 183, "outcome": "failed", "keywords": ["test_extract_messages_from_collection", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002980469726026058, "outcome": "passed"}, "call": {"duration": 0.00046801893040537834, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 188, "message": "assert 0 == 3\n +  where 0 = len([])"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 188, "message": "AssertionError"}], "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5188167, "msecs": 518.0, "relativeCreated": 1769.2866325378418, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5188959, "msecs": 518.0, "relativeCreated": 1769.3657875061035, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5189383, "msecs": 518.0, "relativeCreated": 1769.4082260131836, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}], "longrepr": "communication_analyzer = <legal_discovery_interpreter.communication_analysis.analyzer.CommunicationAnalyzer object at 0x7f81a1d73a90>\nsample_email_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f81a1d73910>\n\n    def test_extract_messages_from_collection(communication_analyzer, sample_email_collection):\n        \"\"\"Test extracting messages from a document collection.\"\"\"\n        messages = communication_analyzer.extract_messages_from_collection(sample_email_collection)\n    \n>       assert len(messages) == 3\nE       assert 0 == 3\nE        +  where 0 = len([])\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py:188: AssertionError"}, "teardown": {"duration": 0.0001884510274976492, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_communications", "lineno": 209, "outcome": "failed", "keywords": ["test_find_communications", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002792859449982643, "outcome": "passed"}, "call": {"duration": 0.00042769708670675755, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 218, "message": "assert 0 == 3\n +  where 0 = len([])"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 218, "message": "AssertionError"}], "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.526296, "msecs": 526.0, "relativeCreated": 1776.7658233642578, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5263777, "msecs": 526.0, "relativeCreated": 1776.8476009368896, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5264199, "msecs": 526.0, "relativeCreated": 1776.8898010253906, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}], "longrepr": "communication_analyzer = <legal_discovery_interpreter.communication_analysis.analyzer.CommunicationAnalyzer object at 0x7f80fa772740>\nsample_email_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f80fa771330>\n\n    def test_find_communications(communication_analyzer, sample_email_collection):\n        \"\"\"Test finding communications involving specific participants.\"\"\"\n        # Extract messages to build the graph\n        communication_analyzer.extract_messages_from_collection(sample_email_collection)\n    \n        # Find communications involving alice\n        alice_communications = communication_analyzer.find_communications([\"alice@companyA.com\"])\n    \n>       assert len(alice_communications) == 3  # All three emails involve Alice\nE       assert 0 == 3\nE        +  where 0 = len([])\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py:218: AssertionError"}, "teardown": {"duration": 0.00019778008572757244, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyze_communication", "lineno": 251, "outcome": "failed", "keywords": ["test_analyze_communication", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002757301554083824, "outcome": "passed"}, "call": {"duration": 0.0003080118913203478, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 264, "message": "KeyError: 'thread123'"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 264, "message": "KeyError"}], "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5328987, "msecs": 532.0, "relativeCreated": 1783.3685874938965, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5329661, "msecs": 532.0, "relativeCreated": 1783.4360599517822, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5330067, "msecs": 533.0, "relativeCreated": 1783.4765911102295, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}], "longrepr": "communication_analyzer = <legal_discovery_interpreter.communication_analysis.analyzer.CommunicationAnalyzer object at 0x7f81a1d715a0>\nsample_email_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f81a1d70b80>\n\n    def test_analyze_communication(communication_analyzer, sample_email_collection):\n        \"\"\"Test analyzing communication patterns in a set of messages.\"\"\"\n        # Extract messages to build the graph\n        communication_analyzer.extract_messages_from_collection(sample_email_collection)\n    \n        # Find communications for thread123\n        thread_communications = communication_analyzer.find_communications(\n            [], date_range=None, analyze_threads=True\n        )\n    \n        # Since find_communications may return an empty list in some test environments,\n        # let's extract and analyze all communications directly\n>       all_messages = list(communication_analyzer.communication_graph.threads[\"thread123\"].messages.keys())\nE       KeyError: 'thread123'\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py:264: KeyError"}, "teardown": {"duration": 0.0001841259654611349, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_key_participants", "lineno": 299, "outcome": "failed", "keywords": ["test_find_key_participants", "test_analyzer.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002730309497565031, "outcome": "passed"}, "call": {"duration": 0.0003990128170698881, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 313, "message": "assert 0 > 0\n +  where 0 = len([])"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py", "lineno": 313, "message": "AssertionError"}], "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.539427, "msecs": 539.0, "relativeCreated": 1789.8969650268555, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5394938, "msecs": 539.0, "relativeCreated": 1789.963722229004, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.5395348, "msecs": 539.0, "relativeCreated": 1790.0047302246094, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}], "longrepr": "communication_analyzer = <legal_discovery_interpreter.communication_analysis.analyzer.CommunicationAnalyzer object at 0x7f80fa771b10>\nsample_email_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f80fa771840>\n\n    def test_find_key_participants(communication_analyzer, sample_email_collection):\n        \"\"\"Test finding key participants in a set of messages.\"\"\"\n        # Extract messages to build the graph\n        communication_analyzer.extract_messages_from_collection(sample_email_collection)\n    \n        # Get all message IDs directly from the graph\n        all_messages = []\n        for thread in communication_analyzer.communication_graph.threads.values():\n            all_messages.extend(thread.messages.keys())\n    \n        # Find key participants\n        key_participants = communication_analyzer.find_key_participants(all_messages)\n    \n>       assert len(key_participants) > 0\nE       assert 0 > 0\nE        +  where 0 = len([])\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_communication_analysis/test_analyzer.py:313: AssertionError"}, "teardown": {"duration": 0.00018686288967728615, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_participant_info", "lineno": 18, "outcome": "passed", "keywords": ["test_participant_info", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00013323500752449036, "outcome": "passed"}, "call": {"duration": 0.00014353101141750813, "outcome": "passed"}, "teardown": {"duration": 0.00010761292651295662, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_participant", "lineno": 35, "outcome": "passed", "keywords": ["test_communication_participant", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011066091246902943, "outcome": "passed"}, "call": {"duration": 0.00015218695625662804, "outcome": "passed"}, "teardown": {"duration": 0.00010531186126172543, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message", "lineno": 51, "outcome": "passed", "keywords": ["test_message", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001160989049822092, "outcome": "passed"}, "call": {"duration": 0.00016981386579573154, "outcome": "passed"}, "teardown": {"duration": 0.0001048108097165823, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_sender", "lineno": 88, "outcome": "passed", "keywords": ["test_message_get_sender", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010893912985920906, "outcome": "passed"}, "call": {"duration": 0.00015365192666649818, "outcome": "passed"}, "teardown": {"duration": 0.00010225712321698666, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_recipients", "lineno": 114, "outcome": "passed", "keywords": ["test_message_get_recipients", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010560499504208565, "outcome": "passed"}, "call": {"duration": 0.0001618030946701765, "outcome": "passed"}, "teardown": {"duration": 0.0001064471434801817, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_thread", "lineno": 162, "outcome": "passed", "keywords": ["test_message_thread", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010534795001149178, "outcome": "passed"}, "call": {"duration": 0.00021433993242681026, "outcome": "passed"}, "teardown": {"duration": 0.00010976893827319145, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_graph", "lineno": 250, "outcome": "passed", "keywords": ["test_communication_graph", "test_models.py", "test_communication_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010594399645924568, "outcome": "passed"}, "call": {"duration": 0.0002087489701807499, "outcome": "passed"}, "teardown": {"duration": 0.00010540406219661236, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_metadata_creation", "lineno": 12, "outcome": "passed", "keywords": ["test_document_metadata_creation", "test_document.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.000299595994874835, "outcome": "passed"}, "call": {"duration": 0.00015037506818771362, "outcome": "passed"}, "teardown": {"duration": 0.0001108730211853981, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_creation", "lineno": 28, "outcome": "passed", "keywords": ["test_document_creation", "test_document.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011142785660922527, "outcome": "passed"}, "call": {"duration": 0.00014043296687304974, "outcome": "passed"}, "teardown": {"duration": 0.00010289903730154037, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_get_content_preview", "lineno": 47, "outcome": "passed", "keywords": ["test_document_get_content_preview", "test_document.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011354591697454453, "outcome": "passed"}, "call": {"duration": 0.0001405118964612484, "outcome": "passed"}, "teardown": {"duration": 0.00010079005733132362, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_email_document_creation", "lineno": 76, "outcome": "failed", "keywords": ["test_email_document_creation", "test_document.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010403105989098549, "outcome": "passed"}, "call": {"duration": 0.0003453260287642479, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_core/test_document.py", "lineno": 97, "message": "AssertionError: assert FieldInfo(annotation=NoneType, required=True, description='Email sender') == 'sender@example.com'\n +  where FieldInfo(annotation=NoneType, required=True, description='Email sender') = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f81a1d707c0>.sender"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_core/test_document.py", "lineno": 97, "message": "AssertionError"}], "longrepr": "def test_email_document_creation():\n        \"\"\"Test creating an email document.\"\"\"\n        metadata = DocumentMetadata(\n            document_id=\"email001\",\n            title=\"Test Email\",\n            document_type=\"email\",\n            date_created=datetime(2020, 1, 1)\n        )\n    \n        email = EmailDocument(\n            metadata=metadata,\n            content=\"This is an email content.\",\n            sender=\"sender@example.com\",\n            recipients=[\"recipient1@example.com\", \"recipient2@example.com\"],\n            subject=\"Test Email Subject\",\n            sent_date=datetime(2020, 1, 1, 10, 30)\n        )\n    \n        assert email.metadata.document_id == \"email001\"\n        assert email.content == \"This is an email content.\"\n>       assert email.sender == \"sender@example.com\"\nE       AssertionError: assert FieldInfo(annotation=NoneType, required=True, description='Email sender') == 'sender@example.com'\nE        +  where FieldInfo(annotation=NoneType, required=True, description='Email sender') = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f81a1d707c0>.sender\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_core/test_document.py:97: AssertionError"}, "teardown": {"duration": 0.0001441489439457655, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_collection", "lineno": 105, "outcome": "passed", "keywords": ["test_document_collection", "test_document.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011871010065078735, "outcome": "passed"}, "call": {"duration": 0.0001669079065322876, "outcome": "passed"}, "teardown": {"duration": 0.00011176406405866146, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_query_execution_context", "lineno": 62, "outcome": "passed", "keywords": ["test_query_execution_context", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00012473086826503277, "outcome": "passed"}, "call": {"duration": 0.0001474770251661539, "outcome": "passed"}, "teardown": {"duration": 0.00010637892410159111, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_query_interpreter_initialization", "lineno": 83, "outcome": "passed", "keywords": ["test_query_interpreter_initialization", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002564711030572653, "outcome": "passed"}, "call": {"duration": 0.00014514382928609848, "outcome": "passed"}, "teardown": {"duration": 0.00015014410018920898, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_parse_query", "lineno": 96, "outcome": "passed", "keywords": ["test_parse_query", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00029385602101683617, "outcome": "passed"}, "call": {"duration": 0.0002978330012410879, "outcome": "passed"}, "teardown": {"duration": 0.00017949403263628483, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_full_text", "lineno": 129, "outcome": "passed", "keywords": ["test_execute_query_full_text", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002964299637824297, "outcome": "passed"}, "call": {"duration": 0.00025292509235441685, "outcome": "passed"}, "teardown": {"duration": 0.0001775131095200777, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_metadata", "lineno": 152, "outcome": "passed", "keywords": ["test_execute_query_metadata", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0003149861004203558, "outcome": "passed"}, "call": {"duration": 0.00022920314222574234, "outcome": "passed"}, "teardown": {"duration": 0.00017105997540056705, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_composite", "lineno": 173, "outcome": "passed", "keywords": ["test_execute_query_composite", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00030928407795727253, "outcome": "passed"}, "call": {"duration": 0.00032521109096705914, "outcome": "passed"}, "teardown": {"duration": 0.00019013998098671436, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_string", "lineno": 204, "outcome": "passed", "keywords": ["test_execute_query_string", "test_interpreter.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00030264887027442455, "outcome": "passed"}, "call": {"duration": 0.0002412500325590372, "outcome": "passed"}, "teardown": {"duration": 0.0001752590760588646, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_query_operators", "lineno": 24, "outcome": "passed", "keywords": ["test_query_operators", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00012138206511735916, "outcome": "passed"}, "call": {"duration": 0.00013496004976332188, "outcome": "passed"}, "teardown": {"duration": 0.00010637287050485611, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_distance_units", "lineno": 33, "outcome": "passed", "keywords": ["test_distance_units", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001062280498445034, "outcome": "passed"}, "call": {"duration": 0.00012214784510433674, "outcome": "passed"}, "teardown": {"duration": 0.00010036188177764416, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_query_types", "lineno": 40, "outcome": "passed", "keywords": ["test_query_types", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010649114847183228, "outcome": "passed"}, "call": {"duration": 0.00012182001955807209, "outcome": "passed"}, "teardown": {"duration": 9.870203211903572e-05, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_full_text_query", "lineno": 51, "outcome": "passed", "keywords": ["test_full_text_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010302313603460789, "outcome": "passed"}, "call": {"duration": 0.00013940013013780117, "outcome": "passed"}, "teardown": {"duration": 9.927409701049328e-05, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_metadata_query", "lineno": 67, "outcome": "passed", "keywords": ["test_metadata_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010212906636297703, "outcome": "passed"}, "call": {"duration": 0.00012728688307106495, "outcome": "passed"}, "teardown": {"duration": 0.00010631605982780457, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_proximity_query", "lineno": 81, "outcome": "passed", "keywords": ["test_proximity_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001049279235303402, "outcome": "passed"}, "call": {"duration": 0.00013181916438043118, "outcome": "passed"}, "teardown": {"duration": 0.00011367187835276127, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_communication_query", "lineno": 98, "outcome": "passed", "keywords": ["test_communication_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010679708793759346, "outcome": "passed"}, "call": {"duration": 0.00013914704322814941, "outcome": "passed"}, "teardown": {"duration": 0.00010198703967034817, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_temporal_query", "lineno": 116, "outcome": "passed", "keywords": ["test_temporal_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010242289863526821, "outcome": "passed"}, "call": {"duration": 0.00014278199523687363, "outcome": "passed"}, "teardown": {"duration": 0.00010204082354903221, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_privilege_query", "lineno": 132, "outcome": "passed", "keywords": ["test_privilege_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010387389920651913, "outcome": "passed"}, "call": {"duration": 0.00013093301095068455, "outcome": "passed"}, "teardown": {"duration": 0.00010632514022290707, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_composite_query", "lineno": 147, "outcome": "passed", "keywords": ["test_composite_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010325619950890541, "outcome": "passed"}, "call": {"duration": 0.00013870908878743649, "outcome": "passed"}, "teardown": {"duration": 9.984802454710007e-05, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_query_result", "lineno": 172, "outcome": "failed", "keywords": ["test_query_result", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010356097482144833, "outcome": "passed"}, "call": {"duration": 0.00018282304517924786, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/tests/legal_discovery_specialist/test_core/test_query.py", "lineno": 189, "message": "NameError: name 'LegalQueryResult' is not defined"}, "traceback": [{"path": "tests/legal_discovery_specialist/test_core/test_query.py", "lineno": 189, "message": "NameError"}], "longrepr": "def test_query_result():\n        \"\"\"Test creating a query result.\"\"\"\n        query_id = str(uuid.uuid4())\n    \n        # Create a mock query\n        query = LegalDiscoveryQuery(\n            query_id=query_id,\n            clauses=[\n                FullTextQuery(\n                    terms=[\"test\"],\n                    operator=QueryOperator.AND\n                )\n            ]\n        )\n    \n        # Create the result\n>       result = LegalQueryResult(\n            query=query,\n            data=[\n                {\"document_id\": \"doc001\", \"title\": \"Test Document 1\"},\n                {\"document_id\": \"doc002\", \"title\": \"Test Document 2\"},\n            ],\n            success=True,\n            metadata={\n                \"document_ids\": [\"doc001\", \"doc002\"],\n                \"total_hits\": 2,\n                \"relevance_scores\": {\"doc001\": 0.8, \"doc002\": 0.6},\n                \"execution_time\": 0.05\n            }\n        )\nE       NameError: name 'LegalQueryResult' is not defined\n\ntests/legal_discovery_specialist/test_core/test_query.py:189: NameError"}, "teardown": {"duration": 0.00018896395340561867, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_legal_discovery_query", "lineno": 213, "outcome": "passed", "keywords": ["test_legal_discovery_query", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001267299521714449, "outcome": "passed"}, "call": {"duration": 0.0002329680137336254, "outcome": "passed"}, "teardown": {"duration": 0.00012029195204377174, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py::test_legal_discovery_query_to_sql_like", "lineno": 255, "outcome": "passed", "keywords": ["test_legal_discovery_query_to_sql_like", "test_query.py", "test_core", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011274614371359348, "outcome": "passed"}, "call": {"duration": 0.0002036860678344965, "outcome": "passed"}, "teardown": {"duration": 0.0001161620020866394, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_document_analyzer_initialization", "lineno": 90, "outcome": "passed", "keywords": ["test_document_analyzer_initialization", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0007309562060981989, "outcome": "passed"}, "call": {"duration": 0.00014294683933258057, "outcome": "passed"}, "teardown": {"duration": 0.00015827384777367115, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_document", "lineno": 99, "outcome": "passed", "keywords": ["test_index_document", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0003639620263129473, "outcome": "passed"}, "call": {"duration": 0.00023977411910891533, "outcome": "passed"}, "teardown": {"duration": 0.00016727694310247898, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_collection", "lineno": 115, "outcome": "passed", "keywords": ["test_index_collection", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00036171218380331993, "outcome": "passed"}, "call": {"duration": 0.0002204549964517355, "outcome": "passed"}, "teardown": {"duration": 0.00016455701552331448, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search", "lineno": 134, "outcome": "passed", "keywords": ["test_search", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00033690501004457474, "outcome": "passed"}, "call": {"duration": 0.00021833297796547413, "outcome": "passed"}, "teardown": {"duration": 0.00018031615763902664, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_proximity", "lineno": 153, "outcome": "passed", "keywords": ["test_calculate_proximity", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00034086196683347225, "outcome": "passed"}, "call": {"duration": 0.019838528940454125, "outcome": "passed"}, "teardown": {"duration": 0.0001984999980777502, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search_proximity", "lineno": 170, "outcome": "passed", "keywords": ["test_search_proximity", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00036254688166081905, "outcome": "passed"}, "call": {"duration": 0.0030186788644641638, "outcome": "passed"}, "teardown": {"duration": 0.00019194604828953743, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_similarity", "lineno": 194, "outcome": "passed", "keywords": ["test_calculate_similarity", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0003580490592867136, "outcome": "passed"}, "call": {"duration": 0.00029451213777065277, "outcome": "passed"}, "teardown": {"duration": 0.00016780896112322807, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_find_similar_documents", "lineno": 216, "outcome": "passed", "keywords": ["test_find_similar_documents", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00035510212182998657, "outcome": "passed"}, "call": {"duration": 0.00027492991648614407, "outcome": "passed"}, "teardown": {"duration": 0.00016897614113986492, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_extract_metadata", "lineno": 232, "outcome": "passed", "keywords": ["test_extract_metadata", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00035642716102302074, "outcome": "passed"}, "call": {"duration": 0.0001828859094530344, "outcome": "passed"}, "teardown": {"duration": 0.00016366085037589073, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_classify_content", "lineno": 247, "outcome": "passed", "keywords": ["test_classify_content", "test_analyzer.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0003475549165159464, "outcome": "passed"}, "call": {"duration": 0.00015538721345365047, "outcome": "passed"}, "teardown": {"duration": 0.0001648450270295143, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_tokenize_document", "lineno": 28, "outcome": "passed", "keywords": ["test_tokenize_document", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00026907213032245636, "outcome": "passed"}, "call": {"duration": 0.00104051292873919, "outcome": "passed"}, "teardown": {"duration": 0.00016538402996957302, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_word_positions", "lineno": 52, "outcome": "passed", "keywords": ["test_calculate_word_positions", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.000229906989261508, "outcome": "passed"}, "call": {"duration": 0.00014295894652605057, "outcome": "passed"}, "teardown": {"duration": 0.0001301569864153862, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance", "lineno": 66, "outcome": "passed", "keywords": ["test_within_distance", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00022607692517340183, "outcome": "passed"}, "call": {"duration": 0.00013507017865777016, "outcome": "passed"}, "teardown": {"duration": 0.00012548407539725304, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance_ordered", "lineno": 84, "outcome": "passed", "keywords": ["test_within_distance_ordered", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00021072803065180779, "outcome": "passed"}, "call": {"duration": 0.0001286040060222149, "outcome": "passed"}, "teardown": {"duration": 0.00014178105629980564, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_positions_to_unit", "lineno": 101, "outcome": "passed", "keywords": ["test_positions_to_unit", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002575828693807125, "outcome": "passed"}, "call": {"duration": 0.00099178496748209, "outcome": "passed"}, "teardown": {"duration": 0.0001538780052214861, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_basic", "lineno": 121, "outcome": "passed", "keywords": ["test_calculate_proximity_basic", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00023294705897569656, "outcome": "passed"}, "call": {"duration": 0.0005731801502406597, "outcome": "passed"}, "teardown": {"duration": 0.00013676006346940994, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_legal_terms", "lineno": 143, "outcome": "passed", "keywords": ["test_calculate_proximity_legal_terms", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00026435800828039646, "outcome": "passed"}, "call": {"duration": 0.005827287910506129, "outcome": "passed"}, "teardown": {"duration": 0.00015957793220877647, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_find_proximity_matches", "lineno": 167, "outcome": "passed", "keywords": ["test_find_proximity_matches", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002819651272147894, "outcome": "passed"}, "call": {"duration": 0.0026515619829297066, "outcome": "passed"}, "teardown": {"duration": 0.00015284609980881214, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_highlight_proximity_matches", "lineno": 191, "outcome": "passed", "keywords": ["test_highlight_proximity_matches", "test_proximity.py", "test_document_analysis", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002708430401980877, "outcome": "passed"}, "call": {"duration": 0.0026888460852205753, "outcome": "passed"}, "teardown": {"duration": 0.00015993393026292324, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_full_text_search", "lineno": 132, "outcome": "passed", "keywords": ["test_full_text_search", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0015070810914039612, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6788578, "msecs": 678.0, "relativeCreated": 1929.3277263641357, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6789443, "msecs": 678.0, "relativeCreated": 1929.4142723083496, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6789882, "msecs": 678.0, "relativeCreated": 1929.4581413269043, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.00041704694740474224, "outcome": "passed"}, "teardown": {"duration": 0.0013847469817847013, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_proximity_search", "lineno": 174, "outcome": "passed", "keywords": ["test_proximity_search", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0013334311079233885, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6828194, "msecs": 682.0, "relativeCreated": 1933.2892894744873, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6829138, "msecs": 682.0, "relativeCreated": 1933.3837032318115, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6829545, "msecs": 682.0, "relativeCreated": 1933.424472808838, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.0023987481836229563, "outcome": "passed"}, "teardown": {"duration": 0.00028856005519628525, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_communication_search", "lineno": 196, "outcome": "failed", "keywords": ["test_communication_search", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0010572648607194424, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.687187, "msecs": 687.0, "relativeCreated": 1937.6568794250488, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.687256, "msecs": 687.0, "relativeCreated": 1937.7260208129883, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.687299, "msecs": 687.0, "relativeCreated": 1937.7689361572266, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.00038713798858225346, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py", "lineno": 213, "message": "assert 0 > 0\n +  where 0 = <legal_discovery_interpreter.core.query.LegalQueryResult object at 0x7f81a1e5e860>.total_hits"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py", "lineno": 213, "message": "AssertionError"}], "longrepr": "integrated_interpreter = <legal_discovery_interpreter.core.interpreter.LegalQueryInterpreter object at 0x7f81a1e5ed70>\n\n    def test_communication_search(integrated_interpreter):\n        \"\"\"Test communication pattern search.\"\"\"\n        # Create a query for communications involving a specific email\n        query = LegalDiscoveryQuery(\n            query_id=str(uuid.uuid4()),\n            clauses=[\n                CommunicationQuery(\n                    participants=[\"john.lawyer@lawfirm.com\"],\n                    direction=None,\n                    thread_analysis=True\n                )\n            ]\n        )\n    \n        result = integrated_interpreter.execute_query(query)\n    \n>       assert result.total_hits > 0\nE       assert 0 > 0\nE        +  where 0 = <legal_discovery_interpreter.core.query.LegalQueryResult object at 0x7f81a1e5e860>.total_hits\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py:213: AssertionError"}, "teardown": {"duration": 0.0002951419446617365, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_temporal_search", "lineno": 217, "outcome": "passed", "keywords": ["test_temporal_search", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0010591258760541677, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6971016, "msecs": 697.0, "relativeCreated": 1947.5715160369873, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6971724, "msecs": 697.0, "relativeCreated": 1947.6423263549805, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6972132, "msecs": 697.0, "relativeCreated": 1947.6830959320068, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.0003009021747857332, "outcome": "passed"}, "teardown": {"duration": 0.0002451229374855757, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_privilege_search", "lineno": 238, "outcome": "failed", "keywords": ["test_privilege_search", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.001038799062371254, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6992226, "msecs": 699.0, "relativeCreated": 1949.6924877166748, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.69929, "msecs": 699.0, "relativeCreated": 1949.7599601745605, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.6993377, "msecs": 699.0, "relativeCreated": 1949.8076438903809, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.002338174032047391, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError: 'FieldInfo' object is not iterable"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py", "lineno": 253, "message": ""}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 234, "message": "in execute"}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 347, "message": "in _execute_clause"}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 592, "message": "in _execute_privilege_query"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 477, "message": "in detect_privilege"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError"}], "longrepr": "integrated_interpreter = <legal_discovery_interpreter.core.interpreter.LegalQueryInterpreter object at 0x7f81a1e24f70>\n\n    def test_privilege_search(integrated_interpreter):\n        \"\"\"Test privilege detection search.\"\"\"\n        # Create a query for privileged documents\n        query = LegalDiscoveryQuery(\n            query_id=str(uuid.uuid4()),\n            clauses=[\n                PrivilegeQuery(\n                    privilege_type=None,\n                    threshold=0.7,\n                    include_potentially_privileged=False\n                )\n            ]\n        )\n    \n>       result = integrated_interpreter.execute_query(query)\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py:253: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlegal_discovery_interpreter/core/interpreter.py:234: in execute\n    self._execute_clause(clause, context)\nlegal_discovery_interpreter/core/interpreter.py:347: in _execute_clause\n    self._execute_privilege_query(clause, context)\nlegal_discovery_interpreter/core/interpreter.py:592: in _execute_privilege_query\n    privilege_info = context.detect_privilege_func(\nlegal_discovery_interpreter/privilege/detector.py:477: in detect_privilege\n    attorneys_involved = self.detect_attorneys(document)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f81a1e27d00>\ndocument = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f81a1e251b0>\n\n    def detect_attorneys(self, document: Document) -> List[str]:\n        \"\"\"Detect attorneys involved in a document.\n    \n        Args:\n            document: Document to analyze\n    \n        Returns:\n            List of attorney IDs or emails\n        \"\"\"\n        detected_attorneys = set()\n    \n        # Check email fields for EmailDocument\n        if isinstance(document, EmailDocument):\n            # Check sender\n            if self.is_attorney(document.sender):\n                detected_attorneys.add(document.sender.lower())\n    \n            # Check recipients\n>           for recipient in document.recipients:\nE           TypeError: 'FieldInfo' object is not iterable\n\nlegal_discovery_interpreter/privilege/detector.py:353: TypeError"}, "teardown": {"duration": 0.0002940441481769085, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_composite_search", "lineno": 267, "outcome": "failed", "keywords": ["test_composite_search", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0010510289575904608, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.7324982, "msecs": 732.0, "relativeCreated": 1982.9680919647217, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.732571, "msecs": 732.0, "relativeCreated": 1983.0408096313477, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.7326117, "msecs": 732.0, "relativeCreated": 1983.081579208374, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.0006250229198485613, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError: 'FieldInfo' object is not iterable"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py", "lineno": 300, "message": ""}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 234, "message": "in execute"}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 349, "message": "in _execute_clause"}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 656, "message": "in _execute_composite_query"}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 347, "message": "in _execute_clause"}, {"path": "legal_discovery_interpreter/core/interpreter.py", "lineno": 592, "message": "in _execute_privilege_query"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 477, "message": "in detect_privilege"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError"}], "longrepr": "integrated_interpreter = <legal_discovery_interpreter.core.interpreter.LegalQueryInterpreter object at 0x7f81a1d71090>\n\n    def test_composite_search(integrated_interpreter):\n        \"\"\"Test composite query combining multiple clauses.\"\"\"\n        # Create a composite query for:\n        # - Documents containing \"legal\" AND\n        # - Created after January 1, 2020 AND\n        # - Potentially privileged\n        query = LegalDiscoveryQuery(\n            query_id=str(uuid.uuid4()),\n            clauses=[\n                CompositeQuery(\n                    operator=QueryOperator.AND,\n                    clauses=[\n                        FullTextQuery(\n                            terms=[\"legal\"],\n                            operator=QueryOperator.AND,\n                            expand_terms=False\n                        ),\n                        TemporalQuery(\n                            date_field=\"date_created\",\n                            operator=QueryOperator.GREATER_THAN,\n                            value=datetime(2020, 1, 1)\n                        ),\n                        PrivilegeQuery(\n                            privilege_type=None,\n                            threshold=0.3,\n                            include_potentially_privileged=True\n                        )\n                    ]\n                )\n            ]\n        )\n    \n>       result = integrated_interpreter.execute_query(query)\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlegal_discovery_interpreter/core/interpreter.py:234: in execute\n    self._execute_clause(clause, context)\nlegal_discovery_interpreter/core/interpreter.py:349: in _execute_clause\n    self._execute_composite_query(clause, context)\nlegal_discovery_interpreter/core/interpreter.py:656: in _execute_composite_query\n    self._execute_clause(subclause, subcontext)\nlegal_discovery_interpreter/core/interpreter.py:347: in _execute_clause\n    self._execute_privilege_query(clause, context)\nlegal_discovery_interpreter/core/interpreter.py:592: in _execute_privilege_query\n    privilege_info = context.detect_privilege_func(\nlegal_discovery_interpreter/privilege/detector.py:477: in detect_privilege\n    attorneys_involved = self.detect_attorneys(document)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f81a1d718a0>\ndocument = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f81a1d71450>\n\n    def detect_attorneys(self, document: Document) -> List[str]:\n        \"\"\"Detect attorneys involved in a document.\n    \n        Args:\n            document: Document to analyze\n    \n        Returns:\n            List of attorney IDs or emails\n        \"\"\"\n        detected_attorneys = set()\n    \n        # Check email fields for EmailDocument\n        if isinstance(document, EmailDocument):\n            # Check sender\n            if self.is_attorney(document.sender):\n                detected_attorneys.add(document.sender.lower())\n    \n            # Check recipients\n>           for recipient in document.recipients:\nE           TypeError: 'FieldInfo' object is not iterable\n\nlegal_discovery_interpreter/privilege/detector.py:353: TypeError"}, "teardown": {"duration": 0.0002869248855859041, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py::test_query_string_execution", "lineno": 316, "outcome": "passed", "keywords": ["test_query_string_execution", "test_integration.py", "test_integration", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.001027768012136221, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email001: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.7706742, "msecs": 770.0, "relativeCreated": 2021.144151687622, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email002: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.7707453, "msecs": 770.0, "relativeCreated": 2021.2152004241943, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}, {"name": "legal_discovery_interpreter.communication_analysis.analyzer", "msg": "Error parsing email document email003: expected string or bytes-like object", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/communication_analysis/analyzer.py", "filename": "analyzer.py", "module": "analyzer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 205, "funcName": "parse_email_document", "created": 1747353372.7707863, "msecs": 770.0, "relativeCreated": 2021.2562084197998, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "call": {"duration": 0.002347203902900219, "outcome": "passed"}, "teardown": {"duration": 0.00025767297483980656, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_term_relation", "lineno": 12, "outcome": "passed", "keywords": ["test_term_relation", "test_models.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0003364800941199064, "outcome": "passed"}, "call": {"duration": 0.0001577718649059534, "outcome": "passed"}, "teardown": {"duration": 0.00010776217095553875, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_term", "lineno": 29, "outcome": "passed", "keywords": ["test_legal_term", "test_models.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011552288196980953, "outcome": "passed"}, "call": {"duration": 0.00015213293954730034, "outcome": "passed"}, "teardown": {"duration": 0.00010262802243232727, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_ontology", "lineno": 58, "outcome": "passed", "keywords": ["test_legal_ontology", "test_models.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011952687054872513, "outcome": "passed"}, "call": {"duration": 0.00017712591215968132, "outcome": "passed"}, "teardown": {"duration": 0.00010499288327991962, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_ontology_collection", "lineno": 128, "outcome": "passed", "keywords": ["test_ontology_collection", "test_models.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010484503582119942, "outcome": "passed"}, "call": {"duration": 0.00014662998728454113, "outcome": "passed"}, "teardown": {"duration": 0.00010839407332241535, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_ontology_service_initialization", "lineno": 67, "outcome": "passed", "keywords": ["test_ontology_service_initialization", "test_service.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00019363407045602798, "outcome": "passed"}, "call": {"duration": 0.00012747105211019516, "outcome": "passed"}, "teardown": {"duration": 0.00012227403931319714, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_create_simple_ontology", "lineno": 74, "outcome": "passed", "keywords": ["test_create_simple_ontology", "test_service.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00016723107546567917, "outcome": "passed"}, "call": {"duration": 0.00016569998115301132, "outcome": "passed"}, "teardown": {"duration": 0.00012751109898090363, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_load_ontology_from_file", "lineno": 108, "outcome": "passed", "keywords": ["test_load_ontology_from_file", "test_service.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0004112569149583578, "outcome": "passed"}, "call": {"duration": 0.0002685678191483021, "outcome": "passed"}, "teardown": {"duration": 0.00017877202481031418, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_terms", "lineno": 128, "outcome": "passed", "keywords": ["test_expand_terms", "test_service.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001843031495809555, "outcome": "passed"}, "call": {"duration": 0.00019265897572040558, "outcome": "passed"}, "teardown": {"duration": 0.00012478302232921124, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_query", "lineno": 165, "outcome": "passed", "keywords": ["test_expand_query", "test_service.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001691831275820732, "outcome": "passed"}, "call": {"duration": 0.00019009900279343128, "outcome": "passed"}, "teardown": {"duration": 0.0001267041079699993, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_get_related_documents", "lineno": 195, "outcome": "passed", "keywords": ["test_get_related_documents", "test_service.py", "test_ontology", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00017119315452873707, "outcome": "passed"}, "call": {"duration": 0.00017787795513868332, "outcome": "passed"}, "teardown": {"duration": 0.00012726685963571072, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detector_initialization", "lineno": 158, "outcome": "passed", "keywords": ["test_detector_initialization", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00043470202945172787, "outcome": "passed"}, "call": {"duration": 0.00013584201224148273, "outcome": "passed"}, "teardown": {"duration": 0.00012640305794775486, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_privilege_indicator", "lineno": 166, "outcome": "passed", "keywords": ["test_add_privilege_indicator", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002094500232487917, "outcome": "passed"}, "call": {"duration": 0.00014761998318135738, "outcome": "passed"}, "teardown": {"duration": 0.0001227380707859993, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_attorney", "lineno": 192, "outcome": "passed", "keywords": ["test_add_attorney", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00020290305837988853, "outcome": "passed"}, "call": {"duration": 0.00015206984244287014, "outcome": "passed"}, "teardown": {"duration": 0.00011966214515268803, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_load_attorneys_from_file", "lineno": 214, "outcome": "passed", "keywords": ["test_load_attorneys_from_file", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0003968819510191679, "outcome": "passed"}, "call": {"duration": 0.00021022092550992966, "outcome": "passed"}, "teardown": {"duration": 0.00017110304906964302, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_is_attorney", "lineno": 232, "outcome": "passed", "keywords": ["test_is_attorney", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00022497284226119518, "outcome": "passed"}, "call": {"duration": 0.00013633491471409798, "outcome": "passed"}, "teardown": {"duration": 0.00012266403064131737, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_indicators", "lineno": 252, "outcome": "passed", "keywords": ["test_detect_privilege_indicators", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002875840291380882, "outcome": "passed"}, "call": {"duration": 0.0002563709858804941, "outcome": "passed"}, "teardown": {"duration": 0.00014265021309256554, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_attorneys", "lineno": 278, "outcome": "failed", "keywords": ["test_detect_attorneys", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00029004504904150963, "outcome": "passed"}, "call": {"duration": 0.00014921394176781178, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError: 'FieldInfo' object is not iterable"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_privilege/test_detector.py", "lineno": 297, "message": ""}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError"}], "longrepr": "privilege_detector = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f80fa8829b0>\nsample_document_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f80fa882530>\n\n    def test_detect_attorneys(privilege_detector, sample_document_collection):\n        \"\"\"Test detecting attorneys involved in a document.\"\"\"\n        # Add an attorney\n        attorney = Attorney(\n            attorney_id=\"atty001\",\n            name=\"John Smith\",\n            email=\"john.smith@lawfirm.com\",\n            organization=\"Smith & Associates\",\n            role=\"External Counsel\",\n            is_internal=False\n        )\n    \n        privilege_detector.add_attorney(attorney)\n    \n        # Get a document with attorney involvement\n        document = sample_document_collection.get_document(\"doc002\")\n    \n        # Detect attorneys\n>       attorneys = privilege_detector.detect_attorneys(document)\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_privilege/test_detector.py:297: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f80fa8829b0>\ndocument = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f80fa883c40>\n\n    def detect_attorneys(self, document: Document) -> List[str]:\n        \"\"\"Detect attorneys involved in a document.\n    \n        Args:\n            document: Document to analyze\n    \n        Returns:\n            List of attorney IDs or emails\n        \"\"\"\n        detected_attorneys = set()\n    \n        # Check email fields for EmailDocument\n        if isinstance(document, EmailDocument):\n            # Check sender\n            if self.is_attorney(document.sender):\n                detected_attorneys.add(document.sender.lower())\n    \n            # Check recipients\n>           for recipient in document.recipients:\nE           TypeError: 'FieldInfo' object is not iterable\n\nlegal_discovery_interpreter/privilege/detector.py:353: TypeError"}, "teardown": {"duration": 0.00018512899987399578, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_calculate_privilege_score", "lineno": 310, "outcome": "passed", "keywords": ["test_calculate_privilege_score", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002368700224906206, "outcome": "passed"}, "call": {"duration": 0.0001549560111016035, "outcome": "passed"}, "teardown": {"duration": 0.00012949202209711075, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_determine_privilege_status", "lineno": 355, "outcome": "passed", "keywords": ["test_determine_privilege_status", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00021648104302585125, "outcome": "passed"}, "call": {"duration": 0.000132350018247962, "outcome": "passed"}, "teardown": {"duration": 0.0001418539322912693, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege", "lineno": 363, "outcome": "passed", "keywords": ["test_detect_privilege", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.000282960943877697, "outcome": "passed"}, "call": {"duration": 0.00028651999309659004, "outcome": "passed"}, "teardown": {"duration": 0.00015035993419587612, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_in_collection", "lineno": 399, "outcome": "failed", "keywords": ["test_detect_privilege_in_collection", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00028109410777688026, "outcome": "passed"}, "call": {"duration": 0.0002786470577120781, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError: 'FieldInfo' object is not iterable"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_privilege/test_detector.py", "lineno": 415, "message": ""}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 534, "message": "in detect_privilege_in_collection"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 477, "message": "in detect_privilege"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError"}], "longrepr": "privilege_detector = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f80f8798670>\nsample_document_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f80f8798700>\n\n    def test_detect_privilege_in_collection(privilege_detector, sample_document_collection):\n        \"\"\"Test detecting privilege in a collection of documents.\"\"\"\n        # Add an attorney\n        attorney = Attorney(\n            attorney_id=\"atty001\",\n            name=\"John Smith\",\n            email=\"john.smith@lawfirm.com\",\n            organization=\"Smith & Associates\",\n            role=\"External Counsel\",\n            is_internal=False\n        )\n    \n        privilege_detector.add_attorney(attorney)\n    \n        # Detect privilege in the collection\n>       results = privilege_detector.detect_privilege_in_collection(sample_document_collection)\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_privilege/test_detector.py:415: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlegal_discovery_interpreter/privilege/detector.py:534: in detect_privilege_in_collection\n    results[doc_id] = self.detect_privilege(document, privilege_type, attorneys)\nlegal_discovery_interpreter/privilege/detector.py:477: in detect_privilege\n    attorneys_involved = self.detect_attorneys(document)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f80f8798670>\ndocument = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f80f8798070>\n\n    def detect_attorneys(self, document: Document) -> List[str]:\n        \"\"\"Detect attorneys involved in a document.\n    \n        Args:\n            document: Document to analyze\n    \n        Returns:\n            List of attorney IDs or emails\n        \"\"\"\n        detected_attorneys = set()\n    \n        # Check email fields for EmailDocument\n        if isinstance(document, EmailDocument):\n            # Check sender\n            if self.is_attorney(document.sender):\n                detected_attorneys.add(document.sender.lower())\n    \n            # Check recipients\n>           for recipient in document.recipients:\nE           TypeError: 'FieldInfo' object is not iterable\n\nlegal_discovery_interpreter/privilege/detector.py:353: TypeError"}, "teardown": {"duration": 0.00018377997912466526, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_generate_privilege_log", "lineno": 430, "outcome": "failed", "keywords": ["test_generate_privilege_log", "test_detector.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00030677998438477516, "outcome": "passed"}, "call": {"duration": 0.00028000003658235073, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError: 'FieldInfo' object is not iterable"}, "traceback": [{"path": "../query_language_interpreter_legal_discovery_specialist/tests/test_privilege/test_detector.py", "lineno": 434, "message": ""}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 534, "message": "in detect_privilege_in_collection"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 477, "message": "in detect_privilege"}, {"path": "legal_discovery_interpreter/privilege/detector.py", "lineno": 353, "message": "TypeError"}], "longrepr": "privilege_detector = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f80fa7711b0>\nsample_document_collection = <legal_discovery_interpreter.core.document.DocumentCollection object at 0x7f80fa772680>\n\n    def test_generate_privilege_log(privilege_detector, sample_document_collection):\n        \"\"\"Test generating a privilege log.\"\"\"\n        # Detect privilege in the collection\n>       privilege_detector.detect_privilege_in_collection(sample_document_collection)\n\n../query_language_interpreter_legal_discovery_specialist/tests/test_privilege/test_detector.py:434: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlegal_discovery_interpreter/privilege/detector.py:534: in detect_privilege_in_collection\n    results[doc_id] = self.detect_privilege(document, privilege_type, attorneys)\nlegal_discovery_interpreter/privilege/detector.py:477: in detect_privilege\n    attorneys_involved = self.detect_attorneys(document)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <legal_discovery_interpreter.privilege.detector.PrivilegeDetector object at 0x7f80fa7711b0>\ndocument = <legal_discovery_interpreter.core.document.EmailDocument object at 0x7f80fa770a60>\n\n    def detect_attorneys(self, document: Document) -> List[str]:\n        \"\"\"Detect attorneys involved in a document.\n    \n        Args:\n            document: Document to analyze\n    \n        Returns:\n            List of attorney IDs or emails\n        \"\"\"\n        detected_attorneys = set()\n    \n        # Check email fields for EmailDocument\n        if isinstance(document, EmailDocument):\n            # Check sender\n            if self.is_attorney(document.sender):\n                detected_attorneys.add(document.sender.lower())\n    \n            # Check recipients\n>           for recipient in document.recipients:\nE           TypeError: 'FieldInfo' object is not iterable\n\nlegal_discovery_interpreter/privilege/detector.py:353: TypeError"}, "teardown": {"duration": 0.00018551084212958813, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_indicator", "lineno": 14, "outcome": "passed", "keywords": ["test_privilege_indicator", "test_models.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001285690814256668, "outcome": "passed"}, "call": {"duration": 0.00014390191063284874, "outcome": "passed"}, "teardown": {"duration": 0.00010551302693784237, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_attorney", "lineno": 39, "outcome": "passed", "keywords": ["test_attorney", "test_models.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.000106387073174119, "outcome": "passed"}, "call": {"duration": 0.00013500498607754707, "outcome": "passed"}, "teardown": {"duration": 0.00010019401088356972, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_detection_result", "lineno": 62, "outcome": "passed", "keywords": ["test_privilege_detection_result", "test_models.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001073798630386591, "outcome": "passed"}, "call": {"duration": 0.00013877195306122303, "outcome": "passed"}, "teardown": {"duration": 0.00010085897520184517, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_log", "lineno": 90, "outcome": "passed", "keywords": ["test_privilege_log", "test_models.py", "test_privilege", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011131004430353642, "outcome": "passed"}, "call": {"duration": 0.0001644529402256012, "outcome": "passed"}, "teardown": {"duration": 0.00010653818026185036, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_temporal_manager_initialization", "lineno": 96, "outcome": "passed", "keywords": ["test_temporal_manager_initialization", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0004293159581720829, "outcome": "passed"}, "call": {"duration": 0.00013750302605330944, "outcome": "passed"}, "teardown": {"duration": 0.00012430199421942234, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_date", "lineno": 111, "outcome": "passed", "keywords": ["test_normalize_date", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002548210322856903, "outcome": "passed"}, "call": {"duration": 0.0008254179265350103, "outcome": "passed", "log": [{"name": "legal_discovery_interpreter.temporal.manager", "msg": "Failed to normalize date string: not a date", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/temporal/manager.py", "filename": "manager.py", "module": "manager", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 260, "funcName": "normalize_date", "created": 1747353372.846327, "msecs": 846.0, "relativeCreated": 2096.796989440918, "thread": 140197715498816, "threadName": "MainThread", "processName": "MainProcess", "process": 2524093}]}, "teardown": {"duration": 0.00014345603995025158, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_dates_in_document", "lineno": 148, "outcome": "passed", "keywords": ["test_normalize_dates_in_document", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002406928688287735, "outcome": "passed"}, "call": {"duration": 0.00025626784190535545, "outcome": "passed"}, "teardown": {"duration": 0.00013130903244018555, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_load_timeframes_from_file", "lineno": 174, "outcome": "passed", "keywords": ["test_load_timeframes_from_file", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0004267510958015919, "outcome": "passed"}, "call": {"duration": 0.0002220429014414549, "outcome": "passed"}, "teardown": {"duration": 0.00016758195124566555, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_resolve_timeframe", "lineno": 198, "outcome": "passed", "keywords": ["test_resolve_timeframe", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00023169885389506817, "outcome": "passed"}, "call": {"duration": 0.00019291299395263195, "outcome": "passed"}, "teardown": {"duration": 0.00012574903666973114, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_custom_timeframe", "lineno": 231, "outcome": "passed", "keywords": ["test_create_custom_timeframe", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00023155193775892258, "outcome": "passed"}, "call": {"duration": 0.0001557741779834032, "outcome": "passed"}, "teardown": {"duration": 0.00012274598702788353, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_date", "lineno": 253, "outcome": "passed", "keywords": ["test_filter_documents_by_date", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002679689787328243, "outcome": "passed"}, "call": {"duration": 0.0002518750261515379, "outcome": "passed"}, "teardown": {"duration": 0.00014296802692115307, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_timeframe", "lineno": 300, "outcome": "passed", "keywords": ["test_filter_documents_by_timeframe", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0002773639280349016, "outcome": "passed"}, "call": {"duration": 0.00017811800353229046, "outcome": "passed"}, "teardown": {"duration": 0.00014531216584146023, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_timeline", "lineno": 322, "outcome": "passed", "keywords": ["test_create_timeline", "test_manager.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00026594079099595547, "outcome": "passed"}, "call": {"duration": 0.00012949085794389248, "outcome": "passed"}, "teardown": {"duration": 0.00013626203872263432, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_time_period", "lineno": 14, "outcome": "passed", "keywords": ["test_time_period", "test_models.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00012909783981740475, "outcome": "passed"}, "call": {"duration": 0.00015373807400465012, "outcome": "passed"}, "teardown": {"duration": 0.00010356307029724121, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe", "lineno": 41, "outcome": "passed", "keywords": ["test_legal_timeframe", "test_models.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.0001064441166818142, "outcome": "passed"}, "call": {"duration": 0.00014566094614565372, "outcome": "passed"}, "teardown": {"duration": 0.00010044407099485397, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe_calculate_dates", "lineno": 83, "outcome": "passed", "keywords": ["test_legal_timeframe_calculate_dates", "test_models.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00011163298040628433, "outcome": "passed"}, "call": {"duration": 0.0001478409394621849, "outcome": "passed"}, "teardown": {"duration": 0.00010238587856292725, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_timeframe_catalog", "lineno": 123, "outcome": "passed", "keywords": ["test_timeframe_catalog", "test_models.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010217307135462761, "outcome": "passed"}, "call": {"duration": 0.00016348413191735744, "outcome": "passed"}, "teardown": {"duration": 0.00010449602268636227, "outcome": "passed"}}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_date_normalization_format", "lineno": 181, "outcome": "passed", "keywords": ["test_date_normalization_format", "test_models.py", "test_temporal", "legal_discovery_specialist", "tests", "unified", ""], "setup": {"duration": 0.00010369601659476757, "outcome": "passed"}, "call": {"duration": 0.000125624006614089, "outcome": "passed"}, "teardown": {"duration": 0.00026676012203097343, "outcome": "passed"}}], "warnings": [{"message": "Pydantic V1 style `@root_validator` validators are deprecated. You should migrate to Pydantic V2 style `@model_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/policy_enforcement/policy.py", "lineno": 60}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/policy_enforcement/policy.py", "lineno": 112}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/policy_enforcement/policy.py", "lineno": 135}, {"message": "The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/policy_enforcement/policy.py", "lineno": 135}, {"message": "The `parse_obj` method is deprecated; use `model_validate` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "runtest", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/ontology/service.py", "lineno": 49}]}