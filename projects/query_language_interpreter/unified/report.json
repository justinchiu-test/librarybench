{"created": 1747352643.3347952, "duration": 1.437608003616333, "exitcode": 2, "root": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified", "environment": {}, "summary": {"total": 0, "collected": 186}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_initialization", "type": "Function", "lineno": 20}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_access", "type": "Function", "lineno": 44}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_query", "type": "Function", "lineno": 83}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_field_access", "type": "Function", "lineno": 120}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_export", "type": "Function", "lineno": 152}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_policy_violation", "type": "Function", "lineno": 189}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_verify_log_integrity", "type": "Function", "lineno": 223}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_search_logs", "type": "Function", "lineno": 260}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_get_log_statistics", "type": "Function", "lineno": 346}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_sensitive_field_handling", "type": "Function", "lineno": 433}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_rotation", "type": "Function", "lineno": 508}]}, {"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/access_logging", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging/test_logger.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_initialization", "type": "Function", "lineno": 15}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymization_method_enum", "type": "Function", "lineno": 40}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_hash_value", "type": "Function", "lineno": 51}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_pseudonymize_value", "type": "Function", "lineno": 88}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_mask_value", "type": "Function", "lineno": 115}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_redact_value", "type": "Function", "lineno": 157}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_generalize_value", "type": "Function", "lineno": 174}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_perturb_value", "type": "Function", "lineno": 199}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_tokenize_value", "type": "Function", "lineno": 232}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_value", "type": "Function", "lineno": 252}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dataframe", "type": "Function", "lineno": 283}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dict", "type": "Function", "lineno": 331}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_list_of_dicts", "type": "Function", "lineno": 365}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_auto_anonymize_dataframe", "type": "Function", "lineno": 400}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_get_field_type", "type": "Function", "lineno": 431}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_guess_anonymization_method", "type": "Function", "lineno": 455}]}, {"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/anonymization", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/anonymization/test_anonymizer.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_initialization", "type": "Function", "lineno": 14}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_allowed_fields", "type": "Function", "lineno": 34}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dataframe", "type": "Function", "lineno": 67}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dict", "type": "Function", "lineno": 95}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_list_of_dicts", "type": "Function", "lineno": 134}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_field_category", "type": "Function", "lineno": 171}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_field_category", "type": "Function", "lineno": 187}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_purpose_category", "type": "Function", "lineno": 203}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_set_purpose_categories", "type": "Function", "lineno": 225}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_with_pii_detector", "type": "Function", "lineno": 256}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_purpose_enum", "type": "Function", "lineno": 280}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_data_category_enum", "type": "Function", "lineno": 294}]}, {"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/data_minimization", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/data_minimization/test_minimizer.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_protection_impact_assessment", "type": "Function", "lineno": 134}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_subject_access_request", "type": "Function", "lineno": 193}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_compliance_audit", "type": "Function", "lineno": 257}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_investigation", "type": "Function", "lineno": 328}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_privacy_compliance_report", "type": "Function", "lineno": 386}]}, {"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/integration", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/integration/test_scenarios.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_initialization", "type": "Function", "lineno": 12}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_string", "type": "Function", "lineno": 24}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_series", "type": "Function", "lineno": 51}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dataframe", "type": "Function", "lineno": 72}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dict", "type": "Function", "lineno": 91}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_is_pii_field", "type": "Function", "lineno": 113}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_luhn_check", "type": "Function", "lineno": 139}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_field_context_scores", "type": "Function", "lineno": 158}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_custom_patterns", "type": "Function", "lineno": 174}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_pattern_info", "type": "Function", "lineno": 211}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_all_patterns", "type": "Function", "lineno": 225}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_initialization", "type": "Function", "lineno": 16}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_dataframe", "type": "Function", "lineno": 30}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_csv_file", "type": "Function", "lineno": 62}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_nonexistent_csv_file", "type": "Function", "lineno": 90}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_dataframes", "type": "Function", "lineno": 98}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_csv_files", "type": "Function", "lineno": 127}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_generate_summary_report", "type": "Function", "lineno": 153}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_error_handling", "type": "Function", "lineno": 186}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_parallel_execution", "type": "Function", "lineno": 205}]}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/pii_detection", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/pii_detection/test_detector.py", "type": "Module"}, {"nodeid": "tests/data_privacy_officer/pii_detection/test_scanner.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_initialization", "type": "Function", "lineno": 18}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_query", "type": "Function", "lineno": 46}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_field_access", "type": "Function", "lineno": 164}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_combination", "type": "Function", "lineno": 225}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_source_access", "type": "Function", "lineno": 316}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_categorize_fields", "type": "Function", "lineno": 393}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_field_category", "type": "Function", "lineno": 459}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_policy", "type": "Function", "lineno": 484}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_load_policies", "type": "Function", "lineno": 504}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_type_enum", "type": "Function", "lineno": 14}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_action_enum", "type": "Function", "lineno": 26}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_category_enum", "type": "Function", "lineno": 36}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_combination_validation", "type": "Function", "lineno": 52}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_creation", "type": "Function", "lineno": 75}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_to_dict", "type": "Function", "lineno": 129}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_from_dict", "type": "Function", "lineno": 155}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_creation", "type": "Function", "lineno": 180}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_to_dict", "type": "Function", "lineno": 229}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_from_dict", "type": "Function", "lineno": 258}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_add_remove", "type": "Function", "lineno": 286}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_get_by_type", "type": "Function", "lineno": 351}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/policy_enforcement", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/policy_enforcement/test_enforcer.py", "type": "Module"}, {"nodeid": "tests/data_privacy_officer/policy_enforcement/test_policy.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_initialization", "type": "Function", "lineno": 19}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_simple_query", "type": "Function", "lineno": 55}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_join", "type": "Function", "lineno": 95}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_policy_enforcement", "type": "Function", "lineno": 129}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_minimization", "type": "Function", "lineno": 176}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_anonymization", "type": "Function", "lineno": 212}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_privacy_functions", "type": "Function", "lineno": 277}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_query_with_logging", "type": "Function", "lineno": 317}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_error_handling", "type": "Function", "lineno": 352}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_add_remove_data_source", "type": "Function", "lineno": 384}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_get_query_history", "type": "Function", "lineno": 419}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_initialization", "type": "Function", "lineno": 12}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_privacy_function_enum", "type": "Function", "lineno": 17}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_simple_query", "type": "Function", "lineno": 33}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_join", "type": "Function", "lineno": 56}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_privacy_functions", "type": "Function", "lineno": 83}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_various_clauses", "type": "Function", "lineno": 123}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_has_privacy_functions", "type": "Function", "lineno": 163}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_extract_table_relationships", "type": "Function", "lineno": 175}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_select_star", "type": "Function", "lineno": 193}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_subqueries", "type": "Function", "lineno": 205}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_different_join_types", "type": "Function", "lineno": 230}]}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser", "type": "Class"}]}, {"nodeid": "tests/data_privacy_officer/query_engine", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/query_engine/test_engine.py", "type": "Module"}, {"nodeid": "tests/data_privacy_officer/query_engine/test_parser.py", "type": "Module"}]}, {"nodeid": "tests/data_privacy_officer", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer/access_logging", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/anonymization", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/data_minimization", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/integration", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/pii_detection", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/policy_enforcement", "type": "Package"}, {"nodeid": "tests/data_privacy_officer/query_engine", "type": "Package"}]}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyzer_initialization", "type": "Function", "lineno": 98}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_email_address", "type": "Function", "lineno": 105}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_participant_string", "type": "Function", "lineno": 120}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_email_document", "type": "Function", "lineno": 149}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_messages_from_collection", "type": "Function", "lineno": 183}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_communications", "type": "Function", "lineno": 209}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyze_communication", "type": "Function", "lineno": 251}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_key_participants", "type": "Function", "lineno": 299}]}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_participant_info", "type": "Function", "lineno": 18}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_participant", "type": "Function", "lineno": 35}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message", "type": "Function", "lineno": 51}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_sender", "type": "Function", "lineno": 88}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_recipients", "type": "Function", "lineno": 114}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_thread", "type": "Function", "lineno": 162}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_graph", "type": "Function", "lineno": 250}]}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_communication_analysis/test_models.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_metadata_creation", "type": "Function", "lineno": 12}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_creation", "type": "Function", "lineno": 28}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_get_content_preview", "type": "Function", "lineno": 47}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_email_document_creation", "type": "Function", "lineno": 76}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py::test_document_collection", "type": "Function", "lineno": 105}]}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/tests/legal_discovery_specialist/test_core/test_interpreter.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../../.pyenv/versions/3.10.11/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n../query_language_interpreter_legal_discovery_specialist/tests/test_core/test_interpreter.py:25: in <module>\n    from legal_discovery_interpreter.core.interpreter import (\nE   ImportError: cannot import name 'QueryExecutionContext' from 'legal_discovery_interpreter.core.interpreter' (/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/core/interpreter.py)"}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/tests/legal_discovery_specialist/test_core/test_query.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../../.pyenv/versions/3.10.11/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n../query_language_interpreter_legal_discovery_specialist/tests/test_core/test_query.py:6: in <module>\n    from legal_discovery_interpreter.core.query import (\nE   ImportError: cannot import name 'QueryResult' from 'legal_discovery_interpreter.core.query' (/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/core/query.py)"}, {"nodeid": "tests/legal_discovery_specialist/test_core", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_core/test_document.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_interpreter.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_core/test_query.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_document_analyzer_initialization", "type": "Function", "lineno": 90}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_document", "type": "Function", "lineno": 99}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_collection", "type": "Function", "lineno": 115}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search", "type": "Function", "lineno": 134}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_proximity", "type": "Function", "lineno": 153}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search_proximity", "type": "Function", "lineno": 170}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_similarity", "type": "Function", "lineno": 194}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_find_similar_documents", "type": "Function", "lineno": 216}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_extract_metadata", "type": "Function", "lineno": 232}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_classify_content", "type": "Function", "lineno": 247}]}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_tokenize_document", "type": "Function", "lineno": 28}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_word_positions", "type": "Function", "lineno": 52}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance", "type": "Function", "lineno": 66}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance_ordered", "type": "Function", "lineno": 84}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_positions_to_unit", "type": "Function", "lineno": 101}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_basic", "type": "Function", "lineno": 121}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_legal_terms", "type": "Function", "lineno": 143}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_find_proximity_matches", "type": "Function", "lineno": 167}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_highlight_proximity_matches", "type": "Function", "lineno": 191}]}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/tests/legal_discovery_specialist/test_integration/test_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../../.pyenv/versions/3.10.11/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n../query_language_interpreter_legal_discovery_specialist/tests/test_integration/test_integration.py:27: in <module>\n    from legal_discovery_interpreter.core.interpreter import QueryInterpreter\nE   ImportError: cannot import name 'QueryInterpreter' from 'legal_discovery_interpreter.core.interpreter' (/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/legal_discovery_interpreter/core/interpreter.py)"}, {"nodeid": "tests/legal_discovery_specialist/test_integration", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_integration/test_integration.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_term_relation", "type": "Function", "lineno": 12}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_term", "type": "Function", "lineno": 29}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_ontology", "type": "Function", "lineno": 58}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py::test_ontology_collection", "type": "Function", "lineno": 128}]}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_ontology_service_initialization", "type": "Function", "lineno": 67}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_create_simple_ontology", "type": "Function", "lineno": 74}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_load_ontology_from_file", "type": "Function", "lineno": 108}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_terms", "type": "Function", "lineno": 128}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_query", "type": "Function", "lineno": 165}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py::test_get_related_documents", "type": "Function", "lineno": 195}]}, {"nodeid": "tests/legal_discovery_specialist/test_ontology", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_ontology/test_models.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_ontology/test_service.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detector_initialization", "type": "Function", "lineno": 158}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_privilege_indicator", "type": "Function", "lineno": 166}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_attorney", "type": "Function", "lineno": 192}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_load_attorneys_from_file", "type": "Function", "lineno": 214}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_is_attorney", "type": "Function", "lineno": 232}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_indicators", "type": "Function", "lineno": 252}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_attorneys", "type": "Function", "lineno": 278}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_calculate_privilege_score", "type": "Function", "lineno": 310}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_determine_privilege_status", "type": "Function", "lineno": 355}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege", "type": "Function", "lineno": 363}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_in_collection", "type": "Function", "lineno": 399}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_generate_privilege_log", "type": "Function", "lineno": 430}]}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_indicator", "type": "Function", "lineno": 14}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_attorney", "type": "Function", "lineno": 39}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_detection_result", "type": "Function", "lineno": 62}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_log", "type": "Function", "lineno": 90}]}, {"nodeid": "tests/legal_discovery_specialist/test_privilege", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_privilege/test_detector.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_privilege/test_models.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_temporal_manager_initialization", "type": "Function", "lineno": 96}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_date", "type": "Function", "lineno": 111}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_dates_in_document", "type": "Function", "lineno": 148}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_load_timeframes_from_file", "type": "Function", "lineno": 174}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_resolve_timeframe", "type": "Function", "lineno": 198}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_custom_timeframe", "type": "Function", "lineno": 231}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_date", "type": "Function", "lineno": 253}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_timeframe", "type": "Function", "lineno": 300}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_timeline", "type": "Function", "lineno": 322}]}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_time_period", "type": "Function", "lineno": 14}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe", "type": "Function", "lineno": 41}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe_calculate_dates", "type": "Function", "lineno": 83}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_timeframe_catalog", "type": "Function", "lineno": 123}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py::test_date_normalization_format", "type": "Function", "lineno": 181}]}, {"nodeid": "tests/legal_discovery_specialist/test_temporal", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_temporal/test_manager.py", "type": "Module"}, {"nodeid": "tests/legal_discovery_specialist/test_temporal/test_models.py", "type": "Module"}]}, {"nodeid": "tests/legal_discovery_specialist", "outcome": "passed", "result": [{"nodeid": "tests/legal_discovery_specialist/test_communication_analysis", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_core", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_document_analysis", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_integration", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_ontology", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_privilege", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist/test_temporal", "type": "Package"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/data_privacy_officer", "type": "Package"}, {"nodeid": "tests/legal_discovery_specialist", "type": "Package"}]}], "tests": [], "warnings": [{"message": "Pydantic V1 style `@root_validator` validators are deprecated. You should migrate to Pydantic V2 style `@model_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/policy_enforcement/policy.py", "lineno": 60}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/query_language_interpreter/unified/privacy_query_interpreter/policy_enforcement/policy.py", "lineno": 112}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/.pyenv/versions/3.10.11/lib/python3.10/site-packages/pydantic/_internal/_config.py", "lineno": 323}]}