{"created": 1747193010.4238186, "duration": 9.594327926635742, "exitcode": 1, "root": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer", "environment": {}, "summary": {"passed": 72, "failed": 6, "total": 78, "collected": 78}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/test_client.py", "outcome": "passed", "result": [{"nodeid": "tests/test_client.py::test_editor_initialization", "type": "Function", "lineno": 28}, {"nodeid": "tests/test_client.py::test_document_operations", "type": "Function", "lineno": 42}, {"nodeid": "tests/test_client.py::test_focus_mode_operations", "type": "Function", "lineno": 61}, {"nodeid": "tests/test_client.py::test_statistics_operations", "type": "Function", "lineno": 101}, {"nodeid": "tests/test_client.py::test_narrative_operations", "type": "Function", "lineno": 132}, {"nodeid": "tests/test_client.py::test_navigation_operations", "type": "Function", "lineno": 158}, {"nodeid": "tests/test_client.py::test_revision_operations", "type": "Function", "lineno": 192}]}, {"nodeid": "tests/test_document.py", "outcome": "passed", "result": [{"nodeid": "tests/test_document.py::test_text_segment", "type": "Function", "lineno": 7}, {"nodeid": "tests/test_document.py::test_section", "type": "Function", "lineno": 19}, {"nodeid": "tests/test_document.py::test_document", "type": "Function", "lineno": 61}]}, {"nodeid": "tests/test_focus.py", "outcome": "passed", "result": [{"nodeid": "tests/test_focus.py::test_focus_mode_initialization", "type": "Function", "lineno": 31}, {"nodeid": "tests/test_focus.py::test_enter_focus", "type": "Function", "lineno": 41}, {"nodeid": "tests/test_focus.py::test_enter_focus_invalid_indices", "type": "Function", "lineno": 61}, {"nodeid": "tests/test_focus.py::test_exit_focus", "type": "Function", "lineno": 86}, {"nodeid": "tests/test_focus.py::test_move_focus_within_section", "type": "Function", "lineno": 112}, {"nodeid": "tests/test_focus.py::test_move_focus_between_sections", "type": "Function", "lineno": 145}, {"nodeid": "tests/test_focus.py::test_move_focus_edge_cases", "type": "Function", "lineno": 171}, {"nodeid": "tests/test_focus.py::test_change_focus_level", "type": "Function", "lineno": 200}, {"nodeid": "tests/test_focus.py::test_edit_focused_content", "type": "Function", "lineno": 226}, {"nodeid": "tests/test_focus.py::test_edit_focused_content_not_active", "type": "Function", "lineno": 246}, {"nodeid": "tests/test_focus.py::test_get_focus_time", "type": "Function", "lineno": 256}, {"nodeid": "tests/test_focus.py::test_get_surrounding_context", "type": "Function", "lineno": 274}, {"nodeid": "tests/test_focus.py::test_get_surrounding_context_edge_cases", "type": "Function", "lineno": 302}]}, {"nodeid": "tests/test_narrative.py", "outcome": "passed", "result": [{"nodeid": "tests/test_narrative.py::test_narrative_tracker_initialization", "type": "Function", "lineno": 91}, {"nodeid": "tests/test_narrative.py::test_track_element", "type": "Function", "lineno": 99}, {"nodeid": "tests/test_narrative.py::test_find_element_occurrences", "type": "Function", "lineno": 118}, {"nodeid": "tests/test_narrative.py::test_detect_elements", "type": "Function", "lineno": 135}, {"nodeid": "tests/test_narrative.py::test_update_element_relationships", "type": "Function", "lineno": 150}, {"nodeid": "tests/test_narrative.py::test_check_consistency", "type": "Function", "lineno": 170}, {"nodeid": "tests/test_narrative.py::test_get_element_appearances", "type": "Function", "lineno": 204}, {"nodeid": "tests/test_narrative.py::test_get_element_timeline", "type": "Function", "lineno": 226}, {"nodeid": "tests/test_narrative.py::test_resolve_consistency_issue", "type": "Function", "lineno": 251}]}, {"nodeid": "tests/test_navigation.py", "outcome": "passed", "result": [{"nodeid": "tests/test_navigation.py::test_navigator_initialization", "type": "Function", "lineno": 120}, {"nodeid": "tests/test_navigation.py::test_create_character_view", "type": "Function", "lineno": 139}, {"nodeid": "tests/test_navigation.py::test_create_plot_view", "type": "Function", "lineno": 160}, {"nodeid": "tests/test_navigation.py::test_create_timeline_view", "type": "Function", "lineno": 169}, {"nodeid": "tests/test_navigation.py::test_create_custom_view", "type": "Function", "lineno": 193}, {"nodeid": "tests/test_navigation.py::test_create_tag", "type": "Function", "lineno": 203}, {"nodeid": "tests/test_navigation.py::test_add_tag_to_element", "type": "Function", "lineno": 212}, {"nodeid": "tests/test_navigation.py::test_create_link", "type": "Function", "lineno": 232}, {"nodeid": "tests/test_navigation.py::test_add_element_to_view", "type": "Function", "lineno": 254}, {"nodeid": "tests/test_navigation.py::test_get_current_element", "type": "Function", "lineno": 284}, {"nodeid": "tests/test_navigation.py::test_get_element_content", "type": "Function", "lineno": 296}, {"nodeid": "tests/test_navigation.py::test_navigate_to", "type": "Function", "lineno": 332}, {"nodeid": "tests/test_navigation.py::test_navigate_to_related", "type": "Function", "lineno": 350}, {"nodeid": "tests/test_navigation.py::test_navigate_parent", "type": "Function", "lineno": 386}, {"nodeid": "tests/test_navigation.py::test_navigate_next", "type": "Function", "lineno": 413}, {"nodeid": "tests/test_navigation.py::test_navigate_previous", "type": "Function", "lineno": 441}, {"nodeid": "tests/test_navigation.py::test_navigate_children", "type": "Function", "lineno": 469}, {"nodeid": "tests/test_navigation.py::test_find_elements_by_tag", "type": "Function", "lineno": 497}, {"nodeid": "tests/test_navigation.py::test_find_elements_by_name", "type": "Function", "lineno": 520}, {"nodeid": "tests/test_navigation.py::test_get_path_to_element", "type": "Function", "lineno": 537}]}, {"nodeid": "tests/test_revision.py", "outcome": "passed", "result": [{"nodeid": "tests/test_revision.py::test_initialization", "type": "Function", "lineno": 36}, {"nodeid": "tests/test_revision.py::test_create_revision", "type": "Function", "lineno": 42}, {"nodeid": "tests/test_revision.py::test_compare_revisions_identical", "type": "Function", "lineno": 60}, {"nodeid": "tests/test_revision.py::test_compare_revisions_with_changes", "type": "Function", "lineno": 80}, {"nodeid": "tests/test_revision.py::test_compare_revisions_with_added_section", "type": "Function", "lineno": 140}, {"nodeid": "tests/test_revision.py::test_compare_revisions_with_removed_section", "type": "Function", "lineno": 171}, {"nodeid": "tests/test_revision.py::test_compare_nonexistent_revisions", "type": "Function", "lineno": 199}, {"nodeid": "tests/test_revision.py::test_html_diff_generation", "type": "Function", "lineno": 207}, {"nodeid": "tests/test_revision.py::test_unified_diff_generation", "type": "Function", "lineno": 221}, {"nodeid": "tests/test_revision.py::test_detailed_segment_diff", "type": "Function", "lineno": 234}, {"nodeid": "tests/test_revision.py::test_apply_diff", "type": "Function", "lineno": 253}, {"nodeid": "tests/test_revision.py::test_merge_revisions", "type": "Function", "lineno": 292}, {"nodeid": "tests/test_revision.py::test_export_revision_history", "type": "Function", "lineno": 322}, {"nodeid": "tests/test_revision.py::test_get_revision_by_timestamp", "type": "Function", "lineno": 348}]}, {"nodeid": "tests/test_statistics.py", "outcome": "passed", "result": [{"nodeid": "tests/test_statistics.py::test_statistics_initialization", "type": "Function", "lineno": 39}, {"nodeid": "tests/test_statistics.py::test_calculate_stats", "type": "Function", "lineno": 49}, {"nodeid": "tests/test_statistics.py::test_calculate_writing_pace", "type": "Function", "lineno": 78}, {"nodeid": "tests/test_statistics.py::test_set_progress_goal", "type": "Function", "lineno": 102}, {"nodeid": "tests/test_statistics.py::test_update_progress", "type": "Function", "lineno": 122}, {"nodeid": "tests/test_statistics.py::test_get_progress_report", "type": "Function", "lineno": 151}, {"nodeid": "tests/test_statistics.py::test_get_trend_analysis_insufficient_data", "type": "Function", "lineno": 176}, {"nodeid": "tests/test_statistics.py::test_get_trend_analysis", "type": "Function", "lineno": 184}, {"nodeid": "tests/test_statistics.py::test_count_sentences", "type": "Function", "lineno": 215}, {"nodeid": "tests/test_statistics.py::test_identify_sentence_type", "type": "Function", "lineno": 223}, {"nodeid": "tests/test_statistics.py::test_is_complex_sentence", "type": "Function", "lineno": 232}, {"nodeid": "tests/test_statistics.py::test_calculate_vocabulary_richness", "type": "Function", "lineno": 239}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/test_client.py", "type": "Module"}, {"nodeid": "tests/test_document.py", "type": "Module"}, {"nodeid": "tests/test_focus.py", "type": "Module"}, {"nodeid": "tests/test_narrative.py", "type": "Module"}, {"nodeid": "tests/test_navigation.py", "type": "Module"}, {"nodeid": "tests/test_revision.py", "type": "Module"}, {"nodeid": "tests/test_statistics.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/test_client.py::test_editor_initialization", "lineno": 28, "outcome": "passed", "keywords": ["test_editor_initialization", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0024697399931028485, "outcome": "passed"}, "call": {"duration": 1.0014770820271224, "outcome": "passed"}, "teardown": {"duration": 0.00022735202219337225, "outcome": "passed"}}, {"nodeid": "tests/test_client.py::test_document_operations", "lineno": 42, "outcome": "passed", "keywords": ["test_document_operations", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003317181020975113, "outcome": "passed"}, "call": {"duration": 0.0001991690369322896, "outcome": "passed"}, "teardown": {"duration": 0.9996481579728425, "outcome": "passed"}}, {"nodeid": "tests/test_client.py::test_focus_mode_operations", "lineno": 61, "outcome": "passed", "keywords": ["test_focus_mode_operations", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0028335279785096645, "outcome": "passed"}, "call": {"duration": 0.0001999880187213421, "outcome": "passed"}, "teardown": {"duration": 0.9997120350599289, "outcome": "passed"}}, {"nodeid": "tests/test_client.py::test_statistics_operations", "lineno": 101, "outcome": "passed", "keywords": ["test_statistics_operations", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003934673964977264, "outcome": "passed"}, "call": {"duration": 0.0012726630084216595, "outcome": "passed"}, "teardown": {"duration": 0.9986260869773105, "outcome": "passed"}}, {"nodeid": "tests/test_client.py::test_narrative_operations", "lineno": 132, "outcome": "failed", "keywords": ["test_narrative_operations", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0028717879904434085, "outcome": "passed"}, "call": {"duration": 0.0003566569648683071, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/tests/test_client.py", "lineno": 147, "message": "assert False"}, "traceback": [{"path": "tests/test_client.py", "lineno": 147, "message": "AssertionError"}], "longrepr": "editor = <writer_text_editor.client.WriterTextEditor object at 0x7fdbf5b4be30>\n\n    def test_narrative_operations(editor):\n        \"\"\"Test narrative element operations.\"\"\"\n        # Detect characters\n        characters = editor.detect_characters()\n    \n        # Elena should be detected as a character\n        elena_found = False\n        elena_id = None\n        for character in characters:\n            if character[\"name\"] == \"Elena\":\n                elena_found = True\n                elena_id = character[\"id\"]\n                break\n    \n>       assert elena_found\nE       assert False\n\ntests/test_client.py:147: AssertionError"}, "teardown": {"duration": 0.9400544000091031, "outcome": "passed"}}, {"nodeid": "tests/test_client.py::test_navigation_operations", "lineno": 158, "outcome": "failed", "keywords": ["test_navigation_operations", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0031928729731589556, "outcome": "passed"}, "call": {"duration": 0.00025353499222546816, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/tests/test_client.py", "lineno": 173, "message": "KeyError: 'element_id'"}, "traceback": [{"path": "tests/test_client.py", "lineno": 173, "message": "KeyError"}], "longrepr": "editor = <writer_text_editor.client.WriterTextEditor object at 0x7fdbf55c0890>\n\n    def test_navigation_operations(editor):\n        \"\"\"Test navigation operations.\"\"\"\n        # Create navigation views\n        character_view_id = editor.create_navigation_view(\"Character View\", NavigationViewType.CHARACTER.value)\n        assert character_view_id is not None\n    \n        timeline_view_id = editor.create_navigation_view(\"Timeline View\", NavigationViewType.TIMELINE.value)\n        assert timeline_view_id is not None\n    \n        # Get the current location\n        location = editor.get_current_location()\n        assert location is not None\n    \n        # Navigate next and previous\n>       current_id = location[\"element_id\"]\nE       KeyError: 'element_id'\n\ntests/test_client.py:173: KeyError"}, "teardown": {"duration": 0.9958959820214659, "outcome": "passed"}}, {"nodeid": "tests/test_client.py::test_revision_operations", "lineno": 192, "outcome": "passed", "keywords": ["test_revision_operations", "test_client.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0037380600115284324, "outcome": "passed"}, "call": {"duration": 0.0006876739207655191, "outcome": "passed"}, "teardown": {"duration": 0.9991719359531999, "outcome": "passed"}}, {"nodeid": "tests/test_document.py::test_text_segment", "lineno": 7, "outcome": "passed", "keywords": ["test_text_segment", "test_document.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0024087110068649054, "outcome": "passed"}, "call": {"duration": 0.00019415095448493958, "outcome": "passed"}, "teardown": {"duration": 0.00014007592108100653, "outcome": "passed"}}, {"nodeid": "tests/test_document.py::test_section", "lineno": 19, "outcome": "failed", "keywords": ["test_section", "test_document.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0019633970223367214, "outcome": "passed"}, "call": {"duration": 0.00044086703564971685, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/tests/test_document.py", "lineno": 40, "message": "AssertionError: assert 7 == 8\n +  where 7 = get_word_count()\n +    where get_word_count = Section(id='44271f11-4d64-4e99-917f-cdf4aff64488', title='Test Section', segments=[TextSegment(id='1110a0a1-edf2-4d07-...ae87-e630-4b3c-bc3c-ab98f324e03c', content='Second paragraph with more words.', position=1, metadata={})], metadata={}).get_word_count"}, "traceback": [{"path": "tests/test_document.py", "lineno": 40, "message": "AssertionError"}], "longrepr": "def test_section():\n        \"\"\"Test the Section class.\"\"\"\n        section = Section(title=\"Test Section\")\n    \n        assert section.title == \"Test Section\"\n        assert section.segments == []\n        assert section.id is not None\n    \n        # Add segments\n        segment1 = section.add_segment(\"First paragraph.\")\n        segment2 = section.add_segment(\"Second paragraph with more words.\")\n    \n        assert len(section.segments) == 2\n        assert segment1.position == 0\n        assert segment2.position == 1\n    \n        # Test get_content\n        assert section.get_content() == \"First paragraph.\\nSecond paragraph with more words.\"\n    \n        # Test get_word_count\n>       assert section.get_word_count() == 8  # 2 + 6\nE       AssertionError: assert 7 == 8\nE        +  where 7 = get_word_count()\nE        +    where get_word_count = Section(id='44271f11-4d64-4e99-917f-cdf4aff64488', title='Test Section', segments=[TextSegment(id='1110a0a1-edf2-4d07-...ae87-e630-4b3c-bc3c-ab98f324e03c', content='Second paragraph with more words.', position=1, metadata={})], metadata={}).get_word_count\n\ntests/test_document.py:40: AssertionError"}, "teardown": {"duration": 0.0001759800361469388, "outcome": "passed"}}, {"nodeid": "tests/test_document.py::test_document", "lineno": 61, "outcome": "passed", "keywords": ["test_document", "test_document.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.00197545497212559, "outcome": "passed"}, "call": {"duration": 0.0004455049056559801, "outcome": "passed"}, "teardown": {"duration": 0.00014834804460406303, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_focus_mode_initialization", "lineno": 31, "outcome": "passed", "keywords": ["test_focus_mode_initialization", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002128073014318943, "outcome": "passed"}, "call": {"duration": 0.000131789012812078, "outcome": "passed"}, "teardown": {"duration": 0.0002014070050790906, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_enter_focus", "lineno": 41, "outcome": "passed", "keywords": ["test_enter_focus", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0031902410555630922, "outcome": "passed"}, "call": {"duration": 0.0001530880108475685, "outcome": "passed"}, "teardown": {"duration": 0.00013383501209318638, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_enter_focus_invalid_indices", "lineno": 61, "outcome": "passed", "keywords": ["test_enter_focus_invalid_indices", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020870540756732225, "outcome": "passed"}, "call": {"duration": 0.00012230302672833204, "outcome": "passed"}, "teardown": {"duration": 0.00013431801926344633, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_exit_focus", "lineno": 86, "outcome": "passed", "keywords": ["test_exit_focus", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020919779781252146, "outcome": "passed"}, "call": {"duration": 0.00012933893594890833, "outcome": "passed"}, "teardown": {"duration": 0.0001311450032517314, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_move_focus_within_section", "lineno": 112, "outcome": "passed", "keywords": ["test_move_focus_within_section", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002067970926873386, "outcome": "passed"}, "call": {"duration": 0.00017147604376077652, "outcome": "passed"}, "teardown": {"duration": 0.00013202300760895014, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_move_focus_between_sections", "lineno": 145, "outcome": "passed", "keywords": ["test_move_focus_between_sections", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003015102935023606, "outcome": "passed"}, "call": {"duration": 0.0001634389627724886, "outcome": "passed"}, "teardown": {"duration": 0.00015550898388028145, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_move_focus_edge_cases", "lineno": 171, "outcome": "passed", "keywords": ["test_move_focus_edge_cases", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020356810418888927, "outcome": "passed"}, "call": {"duration": 0.00014366896357387304, "outcome": "passed"}, "teardown": {"duration": 0.00014383799862116575, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_change_focus_level", "lineno": 200, "outcome": "passed", "keywords": ["test_change_focus_level", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002046187990345061, "outcome": "passed"}, "call": {"duration": 0.0001505980035290122, "outcome": "passed"}, "teardown": {"duration": 0.0001336769200861454, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_edit_focused_content", "lineno": 226, "outcome": "passed", "keywords": ["test_edit_focused_content", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002074748044833541, "outcome": "passed"}, "call": {"duration": 0.00013315200340002775, "outcome": "passed"}, "teardown": {"duration": 0.000135142938233912, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_edit_focused_content_not_active", "lineno": 246, "outcome": "passed", "keywords": ["test_edit_focused_content_not_active", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003044513985514641, "outcome": "passed"}, "call": {"duration": 0.00011746201198548079, "outcome": "passed"}, "teardown": {"duration": 0.00012933695688843727, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_get_focus_time", "lineno": 256, "outcome": "passed", "keywords": ["test_get_focus_time", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020912840263918042, "outcome": "passed"}, "call": {"duration": 0.00013116898480802774, "outcome": "passed"}, "teardown": {"duration": 0.00013035989832133055, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_get_surrounding_context", "lineno": 274, "outcome": "passed", "keywords": ["test_get_surrounding_context", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020905289566144347, "outcome": "passed"}, "call": {"duration": 0.0001644819276407361, "outcome": "passed"}, "teardown": {"duration": 0.00013535493053495884, "outcome": "passed"}}, {"nodeid": "tests/test_focus.py::test_get_surrounding_context_edge_cases", "lineno": 302, "outcome": "passed", "keywords": ["test_get_surrounding_context_edge_cases", "test_focus.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020955250365659595, "outcome": "passed"}, "call": {"duration": 0.00013661500997841358, "outcome": "passed"}, "teardown": {"duration": 0.00013646006118506193, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_narrative_tracker_initialization", "lineno": 91, "outcome": "passed", "keywords": ["test_narrative_tracker_initialization", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.004013805999420583, "outcome": "passed"}, "call": {"duration": 0.00012691901065409184, "outcome": "passed"}, "teardown": {"duration": 0.00014411401934921741, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_track_element", "lineno": 99, "outcome": "passed", "keywords": ["test_track_element", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003001781995408237, "outcome": "passed"}, "call": {"duration": 0.0003389290068298578, "outcome": "passed"}, "teardown": {"duration": 0.00014524301514029503, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_find_element_occurrences", "lineno": 118, "outcome": "passed", "keywords": ["test_find_element_occurrences", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003076093038544059, "outcome": "passed"}, "call": {"duration": 0.00025314302183687687, "outcome": "passed"}, "teardown": {"duration": 0.0001475310418754816, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_detect_elements", "lineno": 135, "outcome": "passed", "keywords": ["test_detect_elements", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.004047609050758183, "outcome": "passed"}, "call": {"duration": 0.001348604098893702, "outcome": "passed"}, "teardown": {"duration": 0.00015166692901402712, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_update_element_relationships", "lineno": 150, "outcome": "passed", "keywords": ["test_update_element_relationships", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0030131220119073987, "outcome": "passed"}, "call": {"duration": 0.00028037000447511673, "outcome": "passed"}, "teardown": {"duration": 0.00014578108675777912, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_check_consistency", "lineno": 170, "outcome": "passed", "keywords": ["test_check_consistency", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0039529240457341075, "outcome": "passed"}, "call": {"duration": 0.0003761060070246458, "outcome": "passed"}, "teardown": {"duration": 0.00015767605509608984, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_get_element_appearances", "lineno": 204, "outcome": "passed", "keywords": ["test_get_element_appearances", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002994987997226417, "outcome": "passed"}, "call": {"duration": 0.00020684604533016682, "outcome": "passed"}, "teardown": {"duration": 0.00014814699534326792, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_get_element_timeline", "lineno": 226, "outcome": "passed", "keywords": ["test_get_element_timeline", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0031377399573102593, "outcome": "passed"}, "call": {"duration": 0.00021674996241927147, "outcome": "passed"}, "teardown": {"duration": 0.0001541969832032919, "outcome": "passed"}}, {"nodeid": "tests/test_narrative.py::test_resolve_consistency_issue", "lineno": 251, "outcome": "passed", "keywords": ["test_resolve_consistency_issue", "test_narrative.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.004030226031318307, "outcome": "passed"}, "call": {"duration": 0.00016383000183850527, "outcome": "passed"}, "teardown": {"duration": 0.00014046300202608109, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigator_initialization", "lineno": 120, "outcome": "passed", "keywords": ["test_navigator_initialization", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0030153910629451275, "outcome": "passed"}, "call": {"duration": 0.0001424469519406557, "outcome": "passed"}, "teardown": {"duration": 0.00015495403204113245, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_create_character_view", "lineno": 139, "outcome": "failed", "keywords": ["test_create_character_view", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0029020169749855995, "outcome": "passed"}, "call": {"duration": 0.0004454550798982382, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/src/writer_text_editor/navigation.py", "lineno": 170, "message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for NavigationElement\nname\n  Input should be a valid string [type=string_type, input_value=<MagicMock name='Sarah.name' id='140582688990000'>, input_type=MagicMock]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"}, "traceback": [{"path": "tests/test_navigation.py", "lineno": 142, "message": ""}, {"path": "src/writer_text_editor/navigation.py", "lineno": 543, "message": "in create_view"}, {"path": "src/writer_text_editor/navigation.py", "lineno": 170, "message": "ValidationError"}], "longrepr": "navigator = <writer_text_editor.navigation.DocumentNavigator object at 0x7fdbf53c1520>\nmock_narrative_tracker = <MagicMock spec='NarrativeTracker' id='140582688921200'>\n\n    def test_create_character_view(navigator, mock_narrative_tracker):\n        \"\"\"Test creating a view organized by characters.\"\"\"\n>       character_view_id = navigator.create_view(\"Character View\", NavigationViewType.CHARACTER)\n\ntests/test_navigation.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/writer_text_editor/navigation.py:543: in create_view\n    return self._create_character_view()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <writer_text_editor.navigation.DocumentNavigator object at 0x7fdbf53c1520>\n\n    def _create_character_view(self) -> str:\n        \"\"\"Create a view organized by characters.\"\"\"\n        if not self.narrative_tracker:\n            return \"\"\n    \n        # Create view\n        view_id = \"view_character\"\n        view = NavigationView(\n            id=view_id,\n            name=\"Character View\",\n            view_type=NavigationViewType.CHARACTER\n        )\n    \n        # Get character elements from the narrative tracker\n        character_elements = [\n            element for element in self.narrative_tracker.elements.values()\n            if element.element_type == ElementType.CHARACTER\n        ]\n    \n        # Create elements for each character\n        root_elements = []\n    \n        for character in character_elements:\n            # Create element for the character\n            character_element_id = f\"element_character_{character.id}\"\n>           character_element = NavigationElement(\n                id=character_element_id,\n                element_type=\"character\",\n                name=character.name,\n                original_id=character.id,\n                metadata={\"description\": character.description}\n            )\nE           pydantic_core._pydantic_core.ValidationError: 1 validation error for NavigationElement\nE           name\nE             Input should be a valid string [type=string_type, input_value=<MagicMock name='Sarah.name' id='140582688990000'>, input_type=MagicMock]\nE               For further information visit https://errors.pydantic.dev/2.11/v/string_type\n\nsrc/writer_text_editor/navigation.py:170: ValidationError"}, "teardown": {"duration": 0.0001956279156729579, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_create_plot_view", "lineno": 160, "outcome": "passed", "keywords": ["test_create_plot_view", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.029826899990439415, "outcome": "passed"}, "call": {"duration": 0.0001528359716758132, "outcome": "passed"}, "teardown": {"duration": 0.00015156110748648643, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_create_timeline_view", "lineno": 169, "outcome": "passed", "keywords": ["test_create_timeline_view", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002970599918626249, "outcome": "passed"}, "call": {"duration": 0.00018868106417357922, "outcome": "passed"}, "teardown": {"duration": 0.000154844019562006, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_create_custom_view", "lineno": 193, "outcome": "passed", "keywords": ["test_create_custom_view", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0029105249559506774, "outcome": "passed"}, "call": {"duration": 0.00013085594400763512, "outcome": "passed"}, "teardown": {"duration": 0.000150814070366323, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_create_tag", "lineno": 203, "outcome": "passed", "keywords": ["test_create_tag", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0037116670282557607, "outcome": "passed"}, "call": {"duration": 0.00013920606579631567, "outcome": "passed"}, "teardown": {"duration": 0.0001517740311101079, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_add_tag_to_element", "lineno": 212, "outcome": "passed", "keywords": ["test_add_tag_to_element", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002950084046460688, "outcome": "passed"}, "call": {"duration": 0.0001340300077572465, "outcome": "passed"}, "teardown": {"duration": 0.0001532660098746419, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_create_link", "lineno": 232, "outcome": "passed", "keywords": ["test_create_link", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002838985063135624, "outcome": "passed"}, "call": {"duration": 0.0001364629715681076, "outcome": "passed"}, "teardown": {"duration": 0.00015187798999249935, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_add_element_to_view", "lineno": 254, "outcome": "passed", "keywords": ["test_add_element_to_view", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003771150019019842, "outcome": "passed"}, "call": {"duration": 0.00013719103299081326, "outcome": "passed"}, "teardown": {"duration": 0.00014987203758209944, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_get_current_element", "lineno": 284, "outcome": "passed", "keywords": ["test_get_current_element", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0028649639571085572, "outcome": "passed"}, "call": {"duration": 0.0001324140466749668, "outcome": "passed"}, "teardown": {"duration": 0.00015094398986548185, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_get_element_content", "lineno": 296, "outcome": "passed", "keywords": ["test_get_element_content", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0028479989850893617, "outcome": "passed"}, "call": {"duration": 0.00013860291801393032, "outcome": "passed"}, "teardown": {"duration": 0.00016004894860088825, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigate_to", "lineno": 332, "outcome": "passed", "keywords": ["test_navigate_to", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002903164946474135, "outcome": "passed"}, "call": {"duration": 0.0001303328899666667, "outcome": "passed"}, "teardown": {"duration": 0.0001528009306639433, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigate_to_related", "lineno": 350, "outcome": "passed", "keywords": ["test_navigate_to_related", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0038982799742370844, "outcome": "passed"}, "call": {"duration": 0.00015844707377254963, "outcome": "passed"}, "teardown": {"duration": 0.00015757407527416945, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigate_parent", "lineno": 386, "outcome": "passed", "keywords": ["test_navigate_parent", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0028531759744510055, "outcome": "passed"}, "call": {"duration": 0.0001368899829685688, "outcome": "passed"}, "teardown": {"duration": 0.00015207799151539803, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigate_next", "lineno": 413, "outcome": "passed", "keywords": ["test_navigate_next", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.00289083702955395, "outcome": "passed"}, "call": {"duration": 0.00014333706349134445, "outcome": "passed"}, "teardown": {"duration": 0.00016004603821784258, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigate_previous", "lineno": 441, "outcome": "passed", "keywords": ["test_navigate_previous", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003779278020374477, "outcome": "passed"}, "call": {"duration": 0.00014474301133304834, "outcome": "passed"}, "teardown": {"duration": 0.00015127495862543583, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_navigate_children", "lineno": 469, "outcome": "passed", "keywords": ["test_navigate_children", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0029395190067589283, "outcome": "passed"}, "call": {"duration": 0.00013717298861593008, "outcome": "passed"}, "teardown": {"duration": 0.00016246899031102657, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_find_elements_by_tag", "lineno": 497, "outcome": "passed", "keywords": ["test_find_elements_by_tag", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0028882318874821067, "outcome": "passed"}, "call": {"duration": 0.00014005694538354874, "outcome": "passed"}, "teardown": {"duration": 0.00015357194934040308, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_find_elements_by_name", "lineno": 520, "outcome": "passed", "keywords": ["test_find_elements_by_name", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003818897996097803, "outcome": "passed"}, "call": {"duration": 0.0001303959870710969, "outcome": "passed"}, "teardown": {"duration": 0.0001583419507369399, "outcome": "passed"}}, {"nodeid": "tests/test_navigation.py::test_get_path_to_element", "lineno": 537, "outcome": "passed", "keywords": ["test_get_path_to_element", "test_navigation.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.00289709004573524, "outcome": "passed"}, "call": {"duration": 0.0001328958896920085, "outcome": "passed"}, "teardown": {"duration": 0.0001521119847893715, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_initialization", "lineno": 36, "outcome": "passed", "keywords": ["test_initialization", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020740029867738485, "outcome": "passed"}, "call": {"duration": 0.00012431701179593801, "outcome": "passed"}, "teardown": {"duration": 0.00014260201714932919, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_create_revision", "lineno": 42, "outcome": "passed", "keywords": ["test_create_revision", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020803860388696194, "outcome": "passed"}, "call": {"duration": 0.00040890194941312075, "outcome": "passed"}, "teardown": {"duration": 0.00016443408094346523, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_compare_revisions_identical", "lineno": 60, "outcome": "passed", "keywords": ["test_compare_revisions_identical", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003092602943070233, "outcome": "passed"}, "call": {"duration": 0.0002666809596121311, "outcome": "passed"}, "teardown": {"duration": 0.00014275405555963516, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_compare_revisions_with_changes", "lineno": 80, "outcome": "passed", "keywords": ["test_compare_revisions_with_changes", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002128154970705509, "outcome": "passed"}, "call": {"duration": 0.00028154999017715454, "outcome": "passed"}, "teardown": {"duration": 0.00014691997785121202, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_compare_revisions_with_added_section", "lineno": 140, "outcome": "passed", "keywords": ["test_compare_revisions_with_added_section", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0021217070752754807, "outcome": "passed"}, "call": {"duration": 0.000285689951851964, "outcome": "passed"}, "teardown": {"duration": 0.00014633696991950274, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_compare_revisions_with_removed_section", "lineno": 171, "outcome": "passed", "keywords": ["test_compare_revisions_with_removed_section", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002115590963512659, "outcome": "passed"}, "call": {"duration": 0.0002508959732949734, "outcome": "passed"}, "teardown": {"duration": 0.00015161698684096336, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_compare_nonexistent_revisions", "lineno": 199, "outcome": "passed", "keywords": ["test_compare_nonexistent_revisions", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0031016359571367502, "outcome": "passed"}, "call": {"duration": 0.00011947902385145426, "outcome": "passed"}, "teardown": {"duration": 0.0001403039786964655, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_html_diff_generation", "lineno": 207, "outcome": "failed", "keywords": ["test_html_diff_generation", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002084168023429811, "outcome": "passed"}, "call": {"duration": 0.0006150710396468639, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/tests/test_revision.py", "lineno": 217, "message": "assert 'original' in '\\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\\n          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-t...                     <tr><td>(t)op</td> </tr>\\n                  </table></td> </tr>\\n    </table>\\n</body>\\n\\n</html>'"}, "traceback": [{"path": "tests/test_revision.py", "lineno": 217, "message": "AssertionError"}], "longrepr": "revision_manager = <writer_text_editor.revision.RevisionManager object at 0x7fdbf5712b40>\n\n    def test_html_diff_generation(revision_manager):\n        \"\"\"Test generating an HTML diff of two texts.\"\"\"\n        old_text = \"This is the original text.\"\n        new_text = \"This is the modified text.\"\n    \n        html_diff = revision_manager.get_html_diff(old_text, new_text)\n    \n        assert html_diff is not None\n        assert isinstance(html_diff, str)\n>       assert \"original\" in html_diff\nE       assert 'original' in '\\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\\n          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-t...                     <tr><td>(t)op</td> </tr>\\n                  </table></td> </tr>\\n    </table>\\n</body>\\n\\n</html>'\n\ntests/test_revision.py:217: AssertionError"}, "teardown": {"duration": 0.00018268893472850323, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_unified_diff_generation", "lineno": 221, "outcome": "passed", "keywords": ["test_unified_diff_generation", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0023348249960690737, "outcome": "passed"}, "call": {"duration": 0.00018919899594038725, "outcome": "passed"}, "teardown": {"duration": 0.00014611997175961733, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_detailed_segment_diff", "lineno": 234, "outcome": "passed", "keywords": ["test_detailed_segment_diff", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002094581024721265, "outcome": "passed"}, "call": {"duration": 0.0001781960017979145, "outcome": "passed"}, "teardown": {"duration": 0.000147065962664783, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_apply_diff", "lineno": 253, "outcome": "passed", "keywords": ["test_apply_diff", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0030808299779891968, "outcome": "passed"}, "call": {"duration": 0.0003677729982882738, "outcome": "passed"}, "teardown": {"duration": 0.00015167798846960068, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_merge_revisions", "lineno": 292, "outcome": "passed", "keywords": ["test_merge_revisions", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0021192559506744146, "outcome": "passed"}, "call": {"duration": 0.00041094899643212557, "outcome": "passed"}, "teardown": {"duration": 0.00015376892406493425, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_export_revision_history", "lineno": 322, "outcome": "passed", "keywords": ["test_export_revision_history", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020954239880666137, "outcome": "passed"}, "call": {"duration": 0.0003313729539513588, "outcome": "passed"}, "teardown": {"duration": 0.00014981406275182962, "outcome": "passed"}}, {"nodeid": "tests/test_revision.py::test_get_revision_by_timestamp", "lineno": 348, "outcome": "passed", "keywords": ["test_get_revision_by_timestamp", "test_revision.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020734299905598164, "outcome": "passed"}, "call": {"duration": 0.0002887019654735923, "outcome": "passed"}, "teardown": {"duration": 0.0001464090310037136, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_statistics_initialization", "lineno": 39, "outcome": "passed", "keywords": ["test_statistics_initialization", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003009896958246827, "outcome": "passed"}, "call": {"duration": 0.0001222479622811079, "outcome": "passed"}, "teardown": {"duration": 0.00013810896780341864, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_calculate_stats", "lineno": 49, "outcome": "passed", "keywords": ["test_calculate_stats", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002034013974480331, "outcome": "passed"}, "call": {"duration": 0.0006133679999038577, "outcome": "passed"}, "teardown": {"duration": 0.0001510850852355361, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_calculate_writing_pace", "lineno": 78, "outcome": "passed", "keywords": ["test_calculate_writing_pace", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0021033500088378787, "outcome": "passed"}, "call": {"duration": 0.00026959297247231007, "outcome": "passed"}, "teardown": {"duration": 0.00014418899081647396, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_set_progress_goal", "lineno": 102, "outcome": "passed", "keywords": ["test_set_progress_goal", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020841771038249135, "outcome": "passed"}, "call": {"duration": 0.00014390505384653807, "outcome": "passed"}, "teardown": {"duration": 0.000141914002597332, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_update_progress", "lineno": 122, "outcome": "passed", "keywords": ["test_update_progress", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002966158092021942, "outcome": "passed"}, "call": {"duration": 0.0005624720361083746, "outcome": "passed"}, "teardown": {"duration": 0.00014458491932600737, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_get_progress_report", "lineno": 151, "outcome": "passed", "keywords": ["test_get_progress_report", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002034623990766704, "outcome": "passed"}, "call": {"duration": 0.0009585120715200901, "outcome": "passed"}, "teardown": {"duration": 0.00015621096827089787, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_get_trend_analysis_insufficient_data", "lineno": 176, "outcome": "passed", "keywords": ["test_get_trend_analysis_insufficient_data", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002030065981671214, "outcome": "passed"}, "call": {"duration": 0.0001245179446414113, "outcome": "passed"}, "teardown": {"duration": 0.00019647809676826, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_get_trend_analysis", "lineno": 184, "outcome": "passed", "keywords": ["test_get_trend_analysis", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.002114372095093131, "outcome": "passed"}, "call": {"duration": 0.0014317920431494713, "outcome": "passed"}, "teardown": {"duration": 0.0001514260657131672, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_count_sentences", "lineno": 215, "outcome": "passed", "keywords": ["test_count_sentences", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.003086462034843862, "outcome": "passed"}, "call": {"duration": 0.00012283993419259787, "outcome": "passed"}, "teardown": {"duration": 0.0001386810326948762, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_identify_sentence_type", "lineno": 223, "outcome": "passed", "keywords": ["test_identify_sentence_type", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.022933954023756087, "outcome": "passed"}, "call": {"duration": 0.00012381304986774921, "outcome": "passed"}, "teardown": {"duration": 0.0001412470592185855, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_is_complex_sentence", "lineno": 232, "outcome": "failed", "keywords": ["test_is_complex_sentence", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020556829404085875, "outcome": "passed"}, "call": {"duration": 0.00022489193361252546, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/tests/test_statistics.py", "lineno": 237, "message": "AssertionError: assert False is True\n +  where False = _is_complex_sentence('When she arrived, the party had already started.')\n +    where _is_complex_sentence = <writer_text_editor.statistics.WritingStatistics object at 0x7fdbf558d400>._is_complex_sentence"}, "traceback": [{"path": "tests/test_statistics.py", "lineno": 237, "message": "AssertionError"}], "longrepr": "statistics = <writer_text_editor.statistics.WritingStatistics object at 0x7fdbf558d400>\n\n    def test_is_complex_sentence(statistics):\n        \"\"\"Test the complex sentence detection method.\"\"\"\n        assert statistics._is_complex_sentence(\"This is a simple sentence.\") is False\n        assert statistics._is_complex_sentence(\"This is a sentence, but it has a conjunction.\") is True\n>       assert statistics._is_complex_sentence(\"When she arrived, the party had already started.\") is True\nE       AssertionError: assert False is True\nE        +  where False = _is_complex_sentence('When she arrived, the party had already started.')\nE        +    where _is_complex_sentence = <writer_text_editor.statistics.WritingStatistics object at 0x7fdbf558d400>._is_complex_sentence\n\ntests/test_statistics.py:237: AssertionError"}, "teardown": {"duration": 0.00017361296340823174, "outcome": "passed"}}, {"nodeid": "tests/test_statistics.py::test_calculate_vocabulary_richness", "lineno": 239, "outcome": "passed", "keywords": ["test_calculate_vocabulary_richness", "test_statistics.py", "tests", "text_editor_writer", ""], "setup": {"duration": 0.0020673800026997924, "outcome": "passed"}, "call": {"duration": 0.0001814259449020028, "outcome": "passed"}, "teardown": {"duration": 0.00014143099542707205, "outcome": "passed"}}], "warnings": [{"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py", "lineno": 323}, {"message": "Importing 'parser.split_arg_string' is deprecated, it will only be available in 'shell_completion' in Click 9.0.", "category": "DeprecationWarning", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/.venv/lib/python3.12/site-packages/spacy/cli/_util.py", "lineno": 23}, {"message": "Importing 'parser.split_arg_string' is deprecated, it will only be available in 'shell_completion' in Click 9.0.", "category": "DeprecationWarning", "when": "collect", "filename": "/home/justinchiu_cohere_com/librarybench/projects/text_editor/text_editor_writer/.venv/lib/python3.12/site-packages/weasel/util/config.py", "lineno": 8}]}