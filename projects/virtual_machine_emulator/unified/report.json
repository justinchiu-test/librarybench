{"created": 1747352785.5308902, "duration": 0.550971269607544, "exitcode": 1, "root": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified", "environment": {}, "summary": {"passed": 111, "failed": 14, "total": 125, "collected": 125}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_initialization", "type": "Function", "lineno": 10}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_memory_access_recording", "type": "Function", "lineno": 21}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_sync_operation_recording", "type": "Function", "lineno": 65}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_read_write_race_detection", "type": "Function", "lineno": 106}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_write_write_race_detection", "type": "Function", "lineno": 138}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_lock_protection", "type": "Function", "lineno": 170}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_happens_before_relation", "type": "Function", "lineno": 226}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_atomicity_violation", "type": "Function", "lineno": 277}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_deadlock_detection", "type": "Function", "lineno": 316}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_order_violation", "type": "Function", "lineno": 338}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_filtering_results", "type": "Function", "lineno": 380}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_statistics", "type": "Function", "lineno": 443}]}, {"nodeid": "tests/parallel_researcher/core/test_race.py", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector", "type": "Class"}]}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_initialization", "type": "Function", "lineno": 13}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_memory_system", "type": "Function", "lineno": 30}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_program_loading", "type": "Function", "lineno": 60}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_thread_creation", "type": "Function", "lineno": 91}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_execution_single_thread", "type": "Function", "lineno": 122}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_execution_multiple_threads", "type": "Function", "lineno": 155}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_parallel_execution", "type": "Function", "lineno": 204}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_deterministic_execution", "type": "Function", "lineno": 289}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_step_execution", "type": "Function", "lineno": 337}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_context_switching", "type": "Function", "lineno": 416}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_thread_synchronization", "type": "Function", "lineno": 490}]}, {"nodeid": "tests/parallel_researcher/core/test_vm.py", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine", "type": "Class"}]}, {"nodeid": "tests/parallel_researcher/core", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/core/test_race.py", "type": "Module"}, {"nodeid": "tests/parallel_researcher/core/test_vm.py", "type": "Module"}]}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_initialization", "type": "Function", "lineno": 16}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_read_miss", "type": "Function", "lineno": 32}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_read_hit", "type": "Function", "lineno": 44}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_write", "type": "Function", "lineno": 60}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_eviction", "type": "Function", "lineno": 79}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_statistics", "type": "Function", "lineno": 117}]}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_initialization", "type": "Function", "lineno": 147}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_read_exclusive", "type": "Function", "lineno": 159}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_read_shared", "type": "Function", "lineno": 183}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_read_modified", "type": "Function", "lineno": 201}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_write_exclusive", "type": "Function", "lineno": 219}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_write_shared", "type": "Function", "lineno": 240}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_write_miss", "type": "Function", "lineno": 261}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_bus_read_handling", "type": "Function", "lineno": 270}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_bus_read_exclusive_handling", "type": "Function", "lineno": 318}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_bus_invalidate_handling", "type": "Function", "lineno": 366}]}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_initialization", "type": "Function", "lineno": 430}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_read_shared_request", "type": "Function", "lineno": 439}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_read_exclusive_request", "type": "Function", "lineno": 472}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_write_back_request", "type": "Function", "lineno": 500}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_invalidate_request", "type": "Function", "lineno": 528}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_coherence_protocol", "type": "Function", "lineno": 559}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_statistics", "type": "Function", "lineno": 639}]}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_initialization", "type": "Function", "lineno": 716}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_cache_creation", "type": "Function", "lineno": 726}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_memory_read", "type": "Function", "lineno": 740}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_memory_write", "type": "Function", "lineno": 780}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_flush_caches", "type": "Function", "lineno": 830}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_access_history", "type": "Function", "lineno": 858}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_statistics", "type": "Function", "lineno": 894}]}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache", "type": "Class"}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache", "type": "Class"}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus", "type": "Class"}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem", "type": "Class"}]}, {"nodeid": "tests/parallel_researcher/memory", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/memory/test_coherence.py", "type": "Module"}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_initialization", "type": "Function", "lineno": 22}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_execute", "type": "Function", "lineno": 41}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_instruction_generation", "type": "Function", "lineno": 68}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_map_reduce_simple", "type": "Function", "lineno": 109}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer::test_initialization", "type": "Function", "lineno": 146}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer::test_execute", "type": "Function", "lineno": 158}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer::test_instruction_generation", "type": "Function", "lineno": 183}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestTaskFarm", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestTaskFarm::test_initialization", "type": "Function", "lineno": 214}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestTaskFarm::test_execute", "type": "Function", "lineno": 224}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestDivideConquer", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestDivideConquer::test_initialization", "type": "Function", "lineno": 249}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestDivideConquer::test_execute", "type": "Function", "lineno": 259}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPipeline", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPipeline::test_initialization", "type": "Function", "lineno": 320}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPipeline::test_execute", "type": "Function", "lineno": 337}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_map_reduce", "type": "Function", "lineno": 369}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_producer_consumer", "type": "Function", "lineno": 385}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_task_farm", "type": "Function", "lineno": 399}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_divide_conquer", "type": "Function", "lineno": 411}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_pipeline", "type": "Function", "lineno": 423}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_invalid_pattern", "type": "Function", "lineno": 440}]}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce", "type": "Class"}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer", "type": "Class"}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestTaskFarm", "type": "Class"}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestDivideConquer", "type": "Class"}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPipeline", "type": "Class"}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory", "type": "Class"}]}, {"nodeid": "tests/parallel_researcher/patterns", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py", "type": "Module"}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_initialization", "type": "Function", "lineno": 43}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_select_thread", "type": "Function", "lineno": 51}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_should_preempt", "type": "Function", "lineno": 71}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_schedule", "type": "Function", "lineno": 88}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_statistics", "type": "Function", "lineno": 120}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_initialization", "type": "Function", "lineno": 149}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_select_thread_by_priority", "type": "Function", "lineno": 160}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_preemptive_scheduling", "type": "Function", "lineno": 185}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_non_preemptive_scheduling", "type": "Function", "lineno": 210}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler::test_initialization", "type": "Function", "lineno": 233}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler::test_select_thread_by_runtime", "type": "Function", "lineno": 243}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler::test_update_estimated_runtime", "type": "Function", "lineno": 272}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_initialization", "type": "Function", "lineno": 288}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_queue_assignment", "type": "Function", "lineno": 299}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_queue_demotion", "type": "Function", "lineno": 318}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_queue_priority", "type": "Function", "lineno": 343}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_priority_boost", "type": "Function", "lineno": 370}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_initialization", "type": "Function", "lineno": 397}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_thread_affinity", "type": "Function", "lineno": 407}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_select_thread_with_affinity", "type": "Function", "lineno": 426}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_no_affinity_selection", "type": "Function", "lineno": 460}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_initialization", "type": "Function", "lineno": 483}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_deterministic_selection", "type": "Function", "lineno": 495}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_record_decisions", "type": "Function", "lineno": 527}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_execution_trace", "type": "Function", "lineno": 552}]}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler", "type": "Class"}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler", "type": "Class"}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler", "type": "Class"}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler", "type": "Class"}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler", "type": "Class"}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler", "type": "Class"}]}, {"nodeid": "tests/parallel_researcher/scheduling", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py", "type": "Module"}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_initialization", "type": "Function", "lineno": 13}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_acquire", "type": "Function", "lineno": 24}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_release", "type": "Function", "lineno": 43}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_contention_and_queuing", "type": "Function", "lineno": 60}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_statistics", "type": "Function", "lineno": 90}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_initialization", "type": "Function", "lineno": 117}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_reentrant_acquisition", "type": "Function", "lineno": 126}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_reentrant_release", "type": "Function", "lineno": 148}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_statistics", "type": "Function", "lineno": 180}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_initialization", "type": "Function", "lineno": 200}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_read_acquisition", "type": "Function", "lineno": 209}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_write_acquisition", "type": "Function", "lineno": 228}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_read_release", "type": "Function", "lineno": 244}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_write_release", "type": "Function", "lineno": 265}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_writer_priority", "type": "Function", "lineno": 285}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_statistics", "type": "Function", "lineno": 305}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_initialization", "type": "Function", "lineno": 330}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_acquisition", "type": "Function", "lineno": 339}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_release", "type": "Function", "lineno": 356}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_statistics", "type": "Function", "lineno": 382}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_initialization", "type": "Function", "lineno": 406}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_arrival", "type": "Function", "lineno": 416}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_reset", "type": "Function", "lineno": 436}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_statistics", "type": "Function", "lineno": 455}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_initialization", "type": "Function", "lineno": 476}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_count_down", "type": "Function", "lineno": 485}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_await", "type": "Function", "lineno": 501}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_statistics", "type": "Function", "lineno": 527}]}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock", "type": "Class"}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock", "type": "Class"}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock", "type": "Class"}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore", "type": "Class"}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier", "type": "Class"}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch", "type": "Class"}]}, {"nodeid": "tests/parallel_researcher/synchronization", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py", "type": "Module"}]}, {"nodeid": "tests/parallel_researcher", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher/core", "type": "Package"}, {"nodeid": "tests/parallel_researcher/memory", "type": "Package"}, {"nodeid": "tests/parallel_researcher/patterns", "type": "Package"}, {"nodeid": "tests/parallel_researcher/scheduling", "type": "Package"}, {"nodeid": "tests/parallel_researcher/synchronization", "type": "Package"}]}, {"nodeid": "tests/security_researcher", "outcome": "failed", "result": [], "longrepr": "../../../../.pyenv/versions/3.10.11/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../../../.pyenv/versions/3.10.11/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/security_researcher/conftest.py:10: in <module>\n    from secure_vm.emulator import VirtualMachine\nsecure_vm/emulator.py:22: in <module>\n    from secure_vm.memory import (\nE   ImportError: cannot import name 'MemoryProtection' from 'secure_vm.memory' (/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/secure_vm/memory.py)"}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/parallel_researcher", "type": "Package"}, {"nodeid": "tests/security_researcher", "type": "Package"}]}], "tests": [{"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_initialization", "lineno": 10, "outcome": "passed", "keywords": ["test_initialization", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0005677349399775267, "outcome": "passed"}, "call": {"duration": 0.0001581630203872919, "outcome": "passed"}, "teardown": {"duration": 0.00011660694144666195, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_memory_access_recording", "lineno": 21, "outcome": "passed", "keywords": ["test_memory_access_recording", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011551706120371819, "outcome": "passed"}, "call": {"duration": 0.00013903295621275902, "outcome": "passed"}, "teardown": {"duration": 0.00010833493433892727, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_sync_operation_recording", "lineno": 65, "outcome": "passed", "keywords": ["test_sync_operation_recording", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010658008977770805, "outcome": "passed"}, "call": {"duration": 0.00013680593110620975, "outcome": "passed"}, "teardown": {"duration": 0.00010131695307791233, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_read_write_race_detection", "lineno": 106, "outcome": "passed", "keywords": ["test_read_write_race_detection", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010469998233020306, "outcome": "passed"}, "call": {"duration": 0.00013436190783977509, "outcome": "passed"}, "teardown": {"duration": 0.0001078941859304905, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_write_write_race_detection", "lineno": 138, "outcome": "passed", "keywords": ["test_write_write_race_detection", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001070220023393631, "outcome": "passed"}, "call": {"duration": 0.00013016886077821255, "outcome": "passed"}, "teardown": {"duration": 9.986897930502892e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_lock_protection", "lineno": 170, "outcome": "passed", "keywords": ["test_lock_protection", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001042329240590334, "outcome": "passed"}, "call": {"duration": 0.00013563898392021656, "outcome": "passed"}, "teardown": {"duration": 0.00010480498895049095, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_happens_before_relation", "lineno": 226, "outcome": "passed", "keywords": ["test_happens_before_relation", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010446598753333092, "outcome": "passed"}, "call": {"duration": 0.00013404409401118755, "outcome": "passed"}, "teardown": {"duration": 9.972695261240005e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_atomicity_violation", "lineno": 277, "outcome": "passed", "keywords": ["test_atomicity_violation", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001018238253891468, "outcome": "passed"}, "call": {"duration": 0.00013166293501853943, "outcome": "passed"}, "teardown": {"duration": 9.781820699572563e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_deadlock_detection", "lineno": 316, "outcome": "passed", "keywords": ["test_deadlock_detection", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010943179950118065, "outcome": "passed"}, "call": {"duration": 0.00013342895545065403, "outcome": "passed"}, "teardown": {"duration": 9.731785394251347e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_order_violation", "lineno": 338, "outcome": "passed", "keywords": ["test_order_violation", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010000006295740604, "outcome": "passed"}, "call": {"duration": 0.00014336593449115753, "outcome": "passed"}, "teardown": {"duration": 9.856885299086571e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_filtering_results", "lineno": 380, "outcome": "passed", "keywords": ["test_filtering_results", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010191393084824085, "outcome": "passed"}, "call": {"duration": 0.00014250189997255802, "outcome": "passed"}, "teardown": {"duration": 9.90170519798994e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_race.py::TestRaceDetector::test_statistics", "lineno": 443, "outcome": "passed", "keywords": ["test_statistics", "TestRaceDetector", "test_race.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010456983000040054, "outcome": "passed"}, "call": {"duration": 0.00015263794921338558, "outcome": "passed"}, "teardown": {"duration": 0.00010296190157532692, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_initialization", "lineno": 13, "outcome": "failed", "keywords": ["test_initialization", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001240679994225502, "outcome": "passed"}, "call": {"duration": 0.00013562897220253944, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 16, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e8c0>\n\n    def test_initialization(self):\n        \"\"\"Test VM initialization.\"\"\"\n>       vm = VirtualMachine(num_processors=4, memory_size=1024, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f419907e1d0>\nmemory_size = 1024\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.0001567609142512083, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_memory_system", "lineno": 30, "outcome": "failed", "keywords": ["test_memory_system", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011658179573714733, "outcome": "passed"}, "call": {"duration": 0.000138936098664999, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 33, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e740>\n\n    def test_memory_system(self):\n        \"\"\"Test VM memory system.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4198e4f0d0>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.00014908285811543465, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_program_loading", "lineno": 60, "outcome": "failed", "keywords": ["test_program_loading", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011831498704850674, "outcome": "passed"}, "call": {"duration": 0.0001464681699872017, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 63, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e5c0>\n\n    def test_program_loading(self):\n        \"\"\"Test loading programs into the VM.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4199078e50>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.000147620914503932, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_thread_creation", "lineno": 91, "outcome": "failed", "keywords": ["test_thread_creation", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00012920890003442764, "outcome": "passed"}, "call": {"duration": 0.00013874098658561707, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 94, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e440>\n\n    def test_thread_creation(self):\n        \"\"\"Test creating threads to execute programs.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4199021840>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.0001468921545892954, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_execution_single_thread", "lineno": 122, "outcome": "failed", "keywords": ["test_execution_single_thread", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00012897304259240627, "outcome": "passed"}, "call": {"duration": 0.0001403170172125101, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 125, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e290>\n\n    def test_execution_single_thread(self):\n        \"\"\"Test executing a single thread program.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4198e4e2f0>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.00015243003144860268, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_execution_multiple_threads", "lineno": 155, "outcome": "failed", "keywords": ["test_execution_multiple_threads", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011780508793890476, "outcome": "passed"}, "call": {"duration": 0.0001398921012878418, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 158, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e110>\n\n    def test_execution_multiple_threads(self):\n        \"\"\"Test executing multiple threads.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4199276680>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.0001475331373512745, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_parallel_execution", "lineno": 204, "outcome": "failed", "keywords": ["test_parallel_execution", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011720415204763412, "outcome": "passed"}, "call": {"duration": 0.00013668090105056763, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 207, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902dff0>\n\n    def test_parallel_execution(self):\n        \"\"\"Test parallel execution across multiple processors.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:207: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4199034b80>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.00014808494597673416, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_deterministic_execution", "lineno": 289, "outcome": "failed", "keywords": ["test_deterministic_execution", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011870195157825947, "outcome": "passed"}, "call": {"duration": 0.00013708695769309998, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 293, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902dfc0>\n\n    def test_deterministic_execution(self):\n        \"\"\"Test that execution is deterministic with a fixed seed.\"\"\"\n        # Create two identical VMs with the same seed\n>       vm1 = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:293: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4198d10fa0>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.0001574230846017599, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_step_execution", "lineno": 337, "outcome": "failed", "keywords": ["test_step_execution", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001169559545814991, "outcome": "passed"}, "call": {"duration": 0.00014059199020266533, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 340, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e590>\n\n    def test_step_execution(self):\n        \"\"\"Test step-by-step execution.\"\"\"\n>       vm = VirtualMachine(num_processors=1, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f4198e4d180>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.00015364913269877434, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_context_switching", "lineno": 416, "outcome": "failed", "keywords": ["test_context_switching", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011790101416409016, "outcome": "passed"}, "call": {"duration": 0.0001389840617775917, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 420, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902e8f0>\n\n    def test_context_switching(self):\n        \"\"\"Test that context switching works correctly.\"\"\"\n        # Create a VM with only one processor to force context switching\n>       vm = VirtualMachine(num_processors=1, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:420: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f419907f520>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.00014770193956792355, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/core/test_vm.py::TestVirtualMachine::test_thread_synchronization", "lineno": 490, "outcome": "failed", "keywords": ["test_thread_synchronization", "TestVirtualMachine", "test_vm.py", "core", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011532381176948547, "outcome": "passed"}, "call": {"duration": 0.00013688788749277592, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py", "lineno": 493, "message": ""}, {"path": "vm_emulator/core/vm.py", "lineno": 56, "message": "in __init__"}, {"path": "common/core/vm.py", "lineno": 143, "message": "in __init__"}, {"path": "vm_emulator/core/vm.py", "lineno": 94, "message": "AttributeError"}], "longrepr": "self = <tests.parallel_researcher.core.test_vm.TestVirtualMachine object at 0x7f419902dd80>\n\n    def test_thread_synchronization(self):\n        \"\"\"Test thread synchronization using locks.\"\"\"\n>       vm = VirtualMachine(num_processors=2, memory_size=100, random_seed=42)\n\n../virtual_machine_emulator_parallel_researcher/tests/core/test_vm.py:493: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvm_emulator/core/vm.py:56: in __init__\n    super().__init__(\ncommon/core/vm.py:143: in __init__\n    self.memory: MemorySystem = self._create_memory_system(memory_size)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.core.vm.VirtualMachine object at 0x7f41990262f0>\nmemory_size = 100\n\n    def _create_memory_system(self, memory_size: int) -> BaseMemorySystem:\n        \"\"\"\n        Create the memory system for this VM.\n    \n        Args:\n            memory_size: Size of memory in words\n    \n        Returns:\n            The memory system instance\n        \"\"\"\n>       if self.enable_cache_coherence:\nE       AttributeError: 'VirtualMachine' object has no attribute 'enable_cache_coherence'\n\nvm_emulator/core/vm.py:94: AttributeError"}, "teardown": {"duration": 0.00015011406503617764, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_initialization", "lineno": 16, "outcome": "passed", "keywords": ["test_initialization", "TestCache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0003137011080980301, "outcome": "passed"}, "call": {"duration": 0.0001586859580129385, "outcome": "passed"}, "teardown": {"duration": 0.00010458705946803093, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_read_miss", "lineno": 32, "outcome": "passed", "keywords": ["test_read_miss", "TestCache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010493607260286808, "outcome": "passed"}, "call": {"duration": 0.00015006307512521744, "outcome": "passed"}, "teardown": {"duration": 0.00011222390457987785, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_read_hit", "lineno": 44, "outcome": "passed", "keywords": ["test_read_hit", "TestCache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010383594781160355, "outcome": "passed"}, "call": {"duration": 0.00015166215598583221, "outcome": "passed"}, "teardown": {"duration": 0.00010796007700264454, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_write", "lineno": 60, "outcome": "passed", "keywords": ["test_write", "TestCache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010469206608831882, "outcome": "passed"}, "call": {"duration": 0.00014936504885554314, "outcome": "passed"}, "teardown": {"duration": 9.8411925137043e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_eviction", "lineno": 79, "outcome": "passed", "keywords": ["test_eviction", "TestCache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011117290705442429, "outcome": "passed"}, "call": {"duration": 0.00014938600361347198, "outcome": "passed"}, "teardown": {"duration": 9.752297773957253e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCache::test_statistics", "lineno": 117, "outcome": "passed", "keywords": ["test_statistics", "TestCache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010107690468430519, "outcome": "passed"}, "call": {"duration": 0.00015151710249483585, "outcome": "passed"}, "teardown": {"duration": 9.947712533175945e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_initialization", "lineno": 147, "outcome": "passed", "keywords": ["test_initialization", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010121497325599194, "outcome": "passed"}, "call": {"duration": 0.00015481282025575638, "outcome": "passed"}, "teardown": {"duration": 9.94198489934206e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_read_exclusive", "lineno": 159, "outcome": "passed", "keywords": ["test_read_exclusive", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010427297092974186, "outcome": "passed"}, "call": {"duration": 0.00017822999507188797, "outcome": "passed"}, "teardown": {"duration": 9.821099229156971e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_read_shared", "lineno": 183, "outcome": "passed", "keywords": ["test_read_shared", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010294700041413307, "outcome": "passed"}, "call": {"duration": 0.00016566994599997997, "outcome": "passed"}, "teardown": {"duration": 9.774486534297466e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_read_modified", "lineno": 201, "outcome": "passed", "keywords": ["test_read_modified", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011329818516969681, "outcome": "passed"}, "call": {"duration": 0.0001559699885547161, "outcome": "passed"}, "teardown": {"duration": 0.00010216818191111088, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_write_exclusive", "lineno": 219, "outcome": "passed", "keywords": ["test_write_exclusive", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010114000178873539, "outcome": "passed"}, "call": {"duration": 0.0001596792135387659, "outcome": "passed"}, "teardown": {"duration": 9.806384332478046e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_write_shared", "lineno": 240, "outcome": "passed", "keywords": ["test_write_shared", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010108994320034981, "outcome": "passed"}, "call": {"duration": 0.00016339682042598724, "outcome": "passed"}, "teardown": {"duration": 9.622587822377682e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_write_miss", "lineno": 261, "outcome": "passed", "keywords": ["test_write_miss", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010103010572493076, "outcome": "passed"}, "call": {"duration": 0.00014488096348941326, "outcome": "passed"}, "teardown": {"duration": 9.891693480312824e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_bus_read_handling", "lineno": 270, "outcome": "passed", "keywords": ["test_bus_read_handling", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010523805394768715, "outcome": "passed"}, "call": {"duration": 0.00018019787967205048, "outcome": "passed"}, "teardown": {"duration": 9.787781164050102e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_bus_read_exclusive_handling", "lineno": 318, "outcome": "passed", "keywords": ["test_bus_read_exclusive_handling", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010371999815106392, "outcome": "passed"}, "call": {"duration": 0.00018090195953845978, "outcome": "passed"}, "teardown": {"duration": 9.788107126951218e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMESICache::test_bus_invalidate_handling", "lineno": 366, "outcome": "passed", "keywords": ["test_bus_invalidate_handling", "TestMESICache", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.99639742076397e-05, "outcome": "passed"}, "call": {"duration": 0.0001842179335653782, "outcome": "passed"}, "teardown": {"duration": 9.93991270661354e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_initialization", "lineno": 430, "outcome": "passed", "keywords": ["test_initialization", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0002337528858333826, "outcome": "passed"}, "call": {"duration": 0.00011431216262280941, "outcome": "passed"}, "teardown": {"duration": 0.00012157997116446495, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_read_shared_request", "lineno": 439, "outcome": "passed", "keywords": ["test_read_shared_request", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00021218485198915005, "outcome": "passed"}, "call": {"duration": 0.00014392216689884663, "outcome": "passed"}, "teardown": {"duration": 0.00011522904969751835, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_read_exclusive_request", "lineno": 472, "outcome": "passed", "keywords": ["test_read_exclusive_request", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00029641203582286835, "outcome": "passed"}, "call": {"duration": 0.00014388514682650566, "outcome": "passed"}, "teardown": {"duration": 0.00011839903891086578, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_write_back_request", "lineno": 500, "outcome": "passed", "keywords": ["test_write_back_request", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00021428498439490795, "outcome": "passed"}, "call": {"duration": 0.00013791397213935852, "outcome": "passed"}, "teardown": {"duration": 0.00011476012878119946, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_invalidate_request", "lineno": 528, "outcome": "passed", "keywords": ["test_invalidate_request", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00021403096616268158, "outcome": "passed"}, "call": {"duration": 0.0001548530999571085, "outcome": "passed"}, "teardown": {"duration": 0.0001158849336206913, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_coherence_protocol", "lineno": 559, "outcome": "passed", "keywords": ["test_coherence_protocol", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00020131003111600876, "outcome": "passed"}, "call": {"duration": 0.0001983758993446827, "outcome": "passed"}, "teardown": {"duration": 0.0001172719057649374, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestMemoryBus::test_statistics", "lineno": 639, "outcome": "passed", "keywords": ["test_statistics", "TestMemoryBus", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00020870892331004143, "outcome": "passed"}, "call": {"duration": 0.00017755408771336079, "outcome": "passed"}, "teardown": {"duration": 0.00012939190492033958, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_initialization", "lineno": 716, "outcome": "passed", "keywords": ["test_initialization", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00018898607231676579, "outcome": "passed"}, "call": {"duration": 0.0001184570137411356, "outcome": "passed"}, "teardown": {"duration": 0.00011538504622876644, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_cache_creation", "lineno": 726, "outcome": "passed", "keywords": ["test_cache_creation", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00017977692186832428, "outcome": "passed"}, "call": {"duration": 0.00023249909281730652, "outcome": "passed"}, "teardown": {"duration": 0.0001271690707653761, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_memory_read", "lineno": 740, "outcome": "passed", "keywords": ["test_memory_read", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00018524820916354656, "outcome": "passed"}, "call": {"duration": 0.00022159796208143234, "outcome": "passed"}, "teardown": {"duration": 0.00011709192767739296, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_memory_write", "lineno": 780, "outcome": "passed", "keywords": ["test_memory_write", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00018227798864245415, "outcome": "passed"}, "call": {"duration": 0.0002456270158290863, "outcome": "passed"}, "teardown": {"duration": 0.0001152530312538147, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_flush_caches", "lineno": 830, "outcome": "passed", "keywords": ["test_flush_caches", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00019281194545328617, "outcome": "passed"}, "call": {"duration": 0.0002510340418666601, "outcome": "passed"}, "teardown": {"duration": 0.00011846097186207771, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_access_history", "lineno": 858, "outcome": "passed", "keywords": ["test_access_history", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00018667406402528286, "outcome": "passed"}, "call": {"duration": 0.00018388894386589527, "outcome": "passed"}, "teardown": {"duration": 0.000116321025416255, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/memory/test_coherence.py::TestCoherentMemorySystem::test_statistics", "lineno": 894, "outcome": "passed", "keywords": ["test_statistics", "TestCoherentMemorySystem", "test_coherence.py", "memory", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00018226215615868568, "outcome": "passed"}, "call": {"duration": 0.0003052221145480871, "outcome": "passed"}, "teardown": {"duration": 0.00012398208491504192, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_initialization", "lineno": 22, "outcome": "passed", "keywords": ["test_initialization", "TestMapReduce", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0002997200936079025, "outcome": "passed"}, "call": {"duration": 0.00012962589971721172, "outcome": "passed"}, "teardown": {"duration": 0.00010249298065900803, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_execute", "lineno": 41, "outcome": "passed", "keywords": ["test_execute", "TestMapReduce", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010460708290338516, "outcome": "passed"}, "call": {"duration": 0.00013266201131045818, "outcome": "passed"}, "teardown": {"duration": 0.00010799895972013474, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_instruction_generation", "lineno": 68, "outcome": "failed", "keywords": ["test_instruction_generation", "TestMapReduce", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001067540142685175, "outcome": "passed"}, "call": {"duration": 0.00013561896048486233, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/patterns/algorithms.py", "lineno": 95, "message": "TypeError: InstructionSet.create_instruction() missing 1 required positional argument: 'operands'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/patterns/test_algorithms.py", "lineno": 85, "message": ""}, {"path": "vm_emulator/patterns/algorithms.py", "lineno": 95, "message": "TypeError"}], "longrepr": "self = <tests.parallel_researcher.patterns.test_algorithms.TestMapReduce object at 0x7f41990820b0>\n\n    def test_instruction_generation(self):\n        \"\"\"Test the generation of VM instructions for MapReduce.\"\"\"\n        # Define simple map and reduce functions\n        def map_func(x):\n            return x * 2\n    \n        def reduce_func(x, y):\n            return x + y\n    \n        map_reduce = MapReduce(\n            map_function=map_func,\n            reduce_function=reduce_func,\n            num_threads=4,\n        )\n    \n        # Generate instructions\n>       instructions = map_reduce.generate_instructions(\n            input_data_addr=100,\n            input_size=10,\n            output_addr=200,\n            map_func_addr=300,\n            reduce_func_addr=400,\n            register_alloc={},  # Use default registers\n            labels={},\n        )\n\n../virtual_machine_emulator_parallel_researcher/tests/patterns/test_algorithms.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.patterns.algorithms.MapReduce object at 0x7f4199034250>\ninput_data_addr = 100, input_size = 10, output_addr = 200, map_func_addr = 300\nreduce_func_addr = 400, register_alloc = {}, labels = {}\n\n    def generate_instructions(\n        self,\n        input_data_addr: int,\n        input_size: int,\n        output_addr: int,\n        map_func_addr: int,\n        reduce_func_addr: int,\n        register_alloc: Dict[str, str],\n        labels: Dict[str, int] = None,\n    ) -> List[Instruction]:\n        \"\"\"\n        Generate VM instructions for the MapReduce pattern.\n    \n        Args:\n            input_data_addr: Address of input data array\n            input_size: Size of input data\n            output_addr: Address for output result\n            map_func_addr: Address of map function\n            reduce_func_addr: Address of reduce function\n            register_alloc: Register allocation for variables\n            labels: Optional label addresses\n    \n        Returns:\n            List of VM instructions\n        \"\"\"\n        if labels is None:\n            labels = {}\n    \n        instructions = []\n    \n        # Registers to use\n        input_addr_reg = register_alloc.get(\"input_addr\", \"R0\")\n        size_reg = register_alloc.get(\"size\", \"R1\")\n        num_threads_reg = register_alloc.get(\"num_threads\", \"R2\")\n        thread_id_reg = register_alloc.get(\"thread_id\", \"R3\")\n        chunk_size_reg = register_alloc.get(\"chunk_size\", \"R4\")\n        start_idx_reg = register_alloc.get(\"start_idx\", \"R5\")\n        end_idx_reg = register_alloc.get(\"end_idx\", \"R6\")\n        i_reg = register_alloc.get(\"i\", \"R7\")\n        elem_addr_reg = register_alloc.get(\"elem_addr\", \"R8\")\n        elem_val_reg = register_alloc.get(\"elem_val\", \"R9\")\n        map_result_reg = register_alloc.get(\"map_result\", \"R10\")\n        reduction_reg = register_alloc.get(\"reduction\", \"R11\")\n    \n        # Initialize registers\n>       instructions.append(InstructionSet.create_instruction(\n            \"LOAD\", [input_addr_reg, input_data_addr]\n        ))\nE       TypeError: InstructionSet.create_instruction() missing 1 required positional argument: 'operands'\n\nvm_emulator/patterns/algorithms.py:95: TypeError"}, "teardown": {"duration": 0.0001610091421753168, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestMapReduce::test_map_reduce_simple", "lineno": 109, "outcome": "failed", "keywords": ["test_map_reduce_simple", "TestMapReduce", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011955387890338898, "outcome": "passed"}, "call": {"duration": 0.0001447000540792942, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/patterns/algorithms.py", "lineno": 95, "message": "TypeError: InstructionSet.create_instruction() missing 1 required positional argument: 'operands'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/patterns/test_algorithms.py", "lineno": 123, "message": ""}, {"path": "vm_emulator/patterns/algorithms.py", "lineno": 95, "message": "TypeError"}], "longrepr": "self = <tests.parallel_researcher.patterns.test_algorithms.TestMapReduce object at 0x7f4199081f30>\n\n    def test_map_reduce_simple(self):\n        \"\"\"Test a simplified MapReduce execution without VM.\"\"\"\n        # Simplified test without VM execution\n        map_func = lambda x: x * 2\n        reduce_func = lambda x, y: x + y\n    \n        map_reduce = MapReduce(\n            map_function=map_func,\n            reduce_function=reduce_func,\n            num_threads=4,\n        )\n    \n        # Check that the instruction generation function works without errors\n>       instructions = map_reduce.generate_instructions(\n            input_data_addr=100,\n            input_size=5,\n            output_addr=200,\n            map_func_addr=300,\n            reduce_func_addr=400,\n            register_alloc={\n                # Specify non-zero values for registers used in division\n                \"num_threads\": \"R2\",\n                \"chunk_size\": \"R4\"\n            }\n        )\n\n../virtual_machine_emulator_parallel_researcher/tests/patterns/test_algorithms.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.patterns.algorithms.MapReduce object at 0x7f4198d3b460>\ninput_data_addr = 100, input_size = 5, output_addr = 200, map_func_addr = 300\nreduce_func_addr = 400\nregister_alloc = {'chunk_size': 'R4', 'num_threads': 'R2'}, labels = {}\n\n    def generate_instructions(\n        self,\n        input_data_addr: int,\n        input_size: int,\n        output_addr: int,\n        map_func_addr: int,\n        reduce_func_addr: int,\n        register_alloc: Dict[str, str],\n        labels: Dict[str, int] = None,\n    ) -> List[Instruction]:\n        \"\"\"\n        Generate VM instructions for the MapReduce pattern.\n    \n        Args:\n            input_data_addr: Address of input data array\n            input_size: Size of input data\n            output_addr: Address for output result\n            map_func_addr: Address of map function\n            reduce_func_addr: Address of reduce function\n            register_alloc: Register allocation for variables\n            labels: Optional label addresses\n    \n        Returns:\n            List of VM instructions\n        \"\"\"\n        if labels is None:\n            labels = {}\n    \n        instructions = []\n    \n        # Registers to use\n        input_addr_reg = register_alloc.get(\"input_addr\", \"R0\")\n        size_reg = register_alloc.get(\"size\", \"R1\")\n        num_threads_reg = register_alloc.get(\"num_threads\", \"R2\")\n        thread_id_reg = register_alloc.get(\"thread_id\", \"R3\")\n        chunk_size_reg = register_alloc.get(\"chunk_size\", \"R4\")\n        start_idx_reg = register_alloc.get(\"start_idx\", \"R5\")\n        end_idx_reg = register_alloc.get(\"end_idx\", \"R6\")\n        i_reg = register_alloc.get(\"i\", \"R7\")\n        elem_addr_reg = register_alloc.get(\"elem_addr\", \"R8\")\n        elem_val_reg = register_alloc.get(\"elem_val\", \"R9\")\n        map_result_reg = register_alloc.get(\"map_result\", \"R10\")\n        reduction_reg = register_alloc.get(\"reduction\", \"R11\")\n    \n        # Initialize registers\n>       instructions.append(InstructionSet.create_instruction(\n            \"LOAD\", [input_addr_reg, input_data_addr]\n        ))\nE       TypeError: InstructionSet.create_instruction() missing 1 required positional argument: 'operands'\n\nvm_emulator/patterns/algorithms.py:95: TypeError"}, "teardown": {"duration": 0.00015091802924871445, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer::test_initialization", "lineno": 146, "outcome": "passed", "keywords": ["test_initialization", "TestProducerConsumer", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011767982505261898, "outcome": "passed"}, "call": {"duration": 0.00013382290489971638, "outcome": "passed"}, "teardown": {"duration": 0.0001040229108184576, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer::test_execute", "lineno": 158, "outcome": "passed", "keywords": ["test_execute", "TestProducerConsumer", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011400505900382996, "outcome": "passed"}, "call": {"duration": 0.00012523704208433628, "outcome": "passed"}, "teardown": {"duration": 9.893905371427536e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestProducerConsumer::test_instruction_generation", "lineno": 183, "outcome": "failed", "keywords": ["test_instruction_generation", "TestProducerConsumer", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010375911369919777, "outcome": "passed"}, "call": {"duration": 0.0001342538744211197, "outcome": "failed", "crash": {"path": "/home/justinchiu_cohere_com/librarybench/projects/virtual_machine_emulator/unified/vm_emulator/patterns/algorithms.py", "lineno": 408, "message": "TypeError: InstructionSet.create_instruction() missing 1 required positional argument: 'operands'"}, "traceback": [{"path": "../virtual_machine_emulator_parallel_researcher/tests/patterns/test_algorithms.py", "lineno": 193, "message": ""}, {"path": "vm_emulator/patterns/algorithms.py", "lineno": 408, "message": "TypeError"}], "longrepr": "self = <tests.parallel_researcher.patterns.test_algorithms.TestProducerConsumer object at 0x7f41990819c0>\n\n    def test_instruction_generation(self):\n        \"\"\"Test the generation of VM instructions for ProducerConsumer.\"\"\"\n        producer_consumer = ProducerConsumer(\n            num_producers=2,\n            num_consumers=3,\n            buffer_size=8,\n        )\n    \n        # Generate instructions\n>       instructions = producer_consumer.generate_instructions(\n            producer_func_addr=100,\n            consumer_func_addr=200,\n            buffer_addr=300,\n            num_items=10,\n            register_alloc={},\n        )\n\n../virtual_machine_emulator_parallel_researcher/tests/patterns/test_algorithms.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <vm_emulator.patterns.algorithms.ProducerConsumer object at 0x7f419908bdf0>\nproducer_func_addr = 100, consumer_func_addr = 200, buffer_addr = 300\nnum_items = 10, register_alloc = {}, labels = {}\n\n    def generate_instructions(\n        self,\n        producer_func_addr: int,\n        consumer_func_addr: int,\n        buffer_addr: int,\n        num_items: int,\n        register_alloc: Dict[str, str],\n        labels: Dict[str, int] = None,\n    ) -> List[Instruction]:\n        \"\"\"\n        Generate VM instructions for the Producer-Consumer pattern.\n    \n        Args:\n            producer_func_addr: Address of producer function\n            consumer_func_addr: Address of consumer function\n            buffer_addr: Address of shared buffer\n            num_items: Total number of items to produce\n            register_alloc: Register allocation for variables\n            labels: Optional label addresses\n    \n        Returns:\n            List of VM instructions\n        \"\"\"\n        if labels is None:\n            labels = {}\n    \n        instructions = []\n    \n        # Registers to use\n        buffer_addr_reg = register_alloc.get(\"buffer_addr\", \"R0\")\n        buffer_size_reg = register_alloc.get(\"buffer_size\", \"R1\")\n        num_producers_reg = register_alloc.get(\"num_producers\", \"R2\")\n        num_consumers_reg = register_alloc.get(\"num_consumers\", \"R3\")\n        num_items_reg = register_alloc.get(\"num_items\", \"R4\")\n        producer_id_reg = register_alloc.get(\"producer_id\", \"R5\")\n        consumer_id_reg = register_alloc.get(\"consumer_id\", \"R6\")\n    \n        # Initialize variables\n>       instructions.append(InstructionSet.create_instruction(\n            \"LOAD\", [buffer_addr_reg, buffer_addr]\n        ))\nE       TypeError: InstructionSet.create_instruction() missing 1 required positional argument: 'operands'\n\nvm_emulator/patterns/algorithms.py:408: TypeError"}, "teardown": {"duration": 0.00015744310803711414, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestTaskFarm::test_initialization", "lineno": 214, "outcome": "passed", "keywords": ["test_initialization", "TestTaskFarm", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011880905367434025, "outcome": "passed"}, "call": {"duration": 0.0001270619686692953, "outcome": "passed"}, "teardown": {"duration": 0.00010268902406096458, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestTaskFarm::test_execute", "lineno": 224, "outcome": "passed", "keywords": ["test_execute", "TestTaskFarm", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010800594463944435, "outcome": "passed"}, "call": {"duration": 0.00012097298167645931, "outcome": "passed"}, "teardown": {"duration": 0.00010554888285696507, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestDivideConquer::test_initialization", "lineno": 249, "outcome": "passed", "keywords": ["test_initialization", "TestDivideConquer", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010591698810458183, "outcome": "passed"}, "call": {"duration": 0.00012613600119948387, "outcome": "passed"}, "teardown": {"duration": 0.0001072839368134737, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestDivideConquer::test_execute", "lineno": 259, "outcome": "passed", "keywords": ["test_execute", "TestDivideConquer", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010663503780961037, "outcome": "passed"}, "call": {"duration": 0.00014114892110228539, "outcome": "passed"}, "teardown": {"duration": 9.729200974106789e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPipeline::test_initialization", "lineno": 320, "outcome": "passed", "keywords": ["test_initialization", "TestParallelPipeline", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010552606545388699, "outcome": "passed"}, "call": {"duration": 0.0001199671532958746, "outcome": "passed"}, "teardown": {"duration": 9.712204337120056e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPipeline::test_execute", "lineno": 337, "outcome": "passed", "keywords": ["test_execute", "TestParallelPipeline", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.975419379770756e-05, "outcome": "passed"}, "call": {"duration": 0.00013244803994894028, "outcome": "passed"}, "teardown": {"duration": 9.854300878942013e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_map_reduce", "lineno": 369, "outcome": "passed", "keywords": ["test_factory_create_map_reduce", "TestParallelPatternFactory", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010108086280524731, "outcome": "passed"}, "call": {"duration": 0.00012150290422141552, "outcome": "passed"}, "teardown": {"duration": 9.530014358460903e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_producer_consumer", "lineno": 385, "outcome": "passed", "keywords": ["test_factory_create_producer_consumer", "TestParallelPatternFactory", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001009420957416296, "outcome": "passed"}, "call": {"duration": 0.00011586584150791168, "outcome": "passed"}, "teardown": {"duration": 9.543122723698616e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_task_farm", "lineno": 399, "outcome": "passed", "keywords": ["test_factory_create_task_farm", "TestParallelPatternFactory", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.896489791572094e-05, "outcome": "passed"}, "call": {"duration": 0.0001240130513906479, "outcome": "passed"}, "teardown": {"duration": 0.00010746996849775314, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_divide_conquer", "lineno": 411, "outcome": "passed", "keywords": ["test_factory_create_divide_conquer", "TestParallelPatternFactory", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010169600136578083, "outcome": "passed"}, "call": {"duration": 0.00011500902473926544, "outcome": "passed"}, "teardown": {"duration": 9.74670983850956e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_create_pipeline", "lineno": 423, "outcome": "passed", "keywords": ["test_factory_create_pipeline", "TestParallelPatternFactory", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010196398943662643, "outcome": "passed"}, "call": {"duration": 0.00011740392073988914, "outcome": "passed"}, "teardown": {"duration": 9.726104326546192e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/patterns/test_algorithms.py::TestParallelPatternFactory::test_factory_invalid_pattern", "lineno": 440, "outcome": "passed", "keywords": ["test_factory_invalid_pattern", "TestParallelPatternFactory", "test_algorithms.py", "patterns", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010027294047176838, "outcome": "passed"}, "call": {"duration": 0.00020411890000104904, "outcome": "passed"}, "teardown": {"duration": 0.000107618048787117, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_initialization", "lineno": 43, "outcome": "passed", "keywords": ["test_initialization", "TestRoundRobinScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0002916839439421892, "outcome": "passed"}, "call": {"duration": 0.00014361180365085602, "outcome": "passed"}, "teardown": {"duration": 9.997095912694931e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_select_thread", "lineno": 51, "outcome": "passed", "keywords": ["test_select_thread", "TestRoundRobinScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010227714665234089, "outcome": "passed"}, "call": {"duration": 0.00015373784117400646, "outcome": "passed"}, "teardown": {"duration": 0.00010834098793566227, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_should_preempt", "lineno": 71, "outcome": "passed", "keywords": ["test_should_preempt", "TestRoundRobinScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011888495646417141, "outcome": "passed"}, "call": {"duration": 0.00013680104166269302, "outcome": "passed"}, "teardown": {"duration": 9.791692718863487e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_schedule", "lineno": 88, "outcome": "passed", "keywords": ["test_schedule", "TestRoundRobinScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001112399622797966, "outcome": "passed"}, "call": {"duration": 0.00015946291387081146, "outcome": "passed"}, "teardown": {"duration": 0.00010066595859825611, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestRoundRobinScheduler::test_statistics", "lineno": 120, "outcome": "passed", "keywords": ["test_statistics", "TestRoundRobinScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010101287625730038, "outcome": "passed"}, "call": {"duration": 0.00015421700663864613, "outcome": "passed"}, "teardown": {"duration": 0.00010098004713654518, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_initialization", "lineno": 149, "outcome": "passed", "keywords": ["test_initialization", "TestPriorityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010149599984288216, "outcome": "passed"}, "call": {"duration": 0.00013122288510203362, "outcome": "passed"}, "teardown": {"duration": 9.725918062031269e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_select_thread_by_priority", "lineno": 160, "outcome": "passed", "keywords": ["test_select_thread_by_priority", "TestPriorityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010445481166243553, "outcome": "passed"}, "call": {"duration": 0.0001568689476698637, "outcome": "passed"}, "teardown": {"duration": 9.737187065184116e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_preemptive_scheduling", "lineno": 185, "outcome": "passed", "keywords": ["test_preemptive_scheduling", "TestPriorityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010076700709760189, "outcome": "passed"}, "call": {"duration": 0.00016356795094907284, "outcome": "passed"}, "teardown": {"duration": 0.0001078250352293253, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestPriorityScheduler::test_non_preemptive_scheduling", "lineno": 210, "outcome": "passed", "keywords": ["test_non_preemptive_scheduling", "TestPriorityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001011828426271677, "outcome": "passed"}, "call": {"duration": 0.0001378939487040043, "outcome": "passed"}, "teardown": {"duration": 9.94410365819931e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler::test_initialization", "lineno": 233, "outcome": "passed", "keywords": ["test_initialization", "TestShortestJobFirstScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010266806930303574, "outcome": "passed"}, "call": {"duration": 0.00012168497778475285, "outcome": "passed"}, "teardown": {"duration": 9.58070158958435e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler::test_select_thread_by_runtime", "lineno": 243, "outcome": "passed", "keywords": ["test_select_thread_by_runtime", "TestShortestJobFirstScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.996793232858181e-05, "outcome": "passed"}, "call": {"duration": 0.00016214302740991116, "outcome": "passed"}, "teardown": {"duration": 9.689014405012131e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestShortestJobFirstScheduler::test_update_estimated_runtime", "lineno": 272, "outcome": "passed", "keywords": ["test_update_estimated_runtime", "TestShortestJobFirstScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001005479134619236, "outcome": "passed"}, "call": {"duration": 0.00011680787429213524, "outcome": "passed"}, "teardown": {"duration": 0.0001031770370900631, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_initialization", "lineno": 288, "outcome": "passed", "keywords": ["test_initialization", "TestMultiLevelFeedbackQueueScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010387110523879528, "outcome": "passed"}, "call": {"duration": 0.00012243888340890408, "outcome": "passed"}, "teardown": {"duration": 9.502982720732689e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_queue_assignment", "lineno": 299, "outcome": "passed", "keywords": ["test_queue_assignment", "TestMultiLevelFeedbackQueueScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.8781893029809e-05, "outcome": "passed"}, "call": {"duration": 0.0002199290320277214, "outcome": "passed"}, "teardown": {"duration": 0.00010760198347270489, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_queue_demotion", "lineno": 318, "outcome": "passed", "keywords": ["test_queue_demotion", "TestMultiLevelFeedbackQueueScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010432396084070206, "outcome": "passed"}, "call": {"duration": 0.00013801991008222103, "outcome": "passed"}, "teardown": {"duration": 9.942497126758099e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_queue_priority", "lineno": 343, "outcome": "passed", "keywords": ["test_queue_priority", "TestMultiLevelFeedbackQueueScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010038912296295166, "outcome": "passed"}, "call": {"duration": 0.00016263010911643505, "outcome": "passed"}, "teardown": {"duration": 9.865011088550091e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestMultiLevelFeedbackQueueScheduler::test_priority_boost", "lineno": 370, "outcome": "passed", "keywords": ["test_priority_boost", "TestMultiLevelFeedbackQueueScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010368297807872295, "outcome": "passed"}, "call": {"duration": 0.00012629409320652485, "outcome": "passed"}, "teardown": {"duration": 0.0001001961063593626, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_initialization", "lineno": 397, "outcome": "passed", "keywords": ["test_initialization", "TestAffinityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010170089080929756, "outcome": "passed"}, "call": {"duration": 0.00012853089720010757, "outcome": "passed"}, "teardown": {"duration": 9.715184569358826e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_thread_affinity", "lineno": 407, "outcome": "passed", "keywords": ["test_thread_affinity", "TestAffinityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.000100770965218544, "outcome": "passed"}, "call": {"duration": 0.00014110817573964596, "outcome": "passed"}, "teardown": {"duration": 9.500212036073208e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_select_thread_with_affinity", "lineno": 426, "outcome": "passed", "keywords": ["test_select_thread_with_affinity", "TestAffinityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010406598448753357, "outcome": "passed"}, "call": {"duration": 0.00017363205552101135, "outcome": "passed"}, "teardown": {"duration": 9.877700358629227e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestAffinityScheduler::test_no_affinity_selection", "lineno": 460, "outcome": "passed", "keywords": ["test_no_affinity_selection", "TestAffinityScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010451790876686573, "outcome": "passed"}, "call": {"duration": 0.00014563999138772488, "outcome": "passed"}, "teardown": {"duration": 9.810714982450008e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_initialization", "lineno": 483, "outcome": "passed", "keywords": ["test_initialization", "TestDeterministicScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010217400267720222, "outcome": "passed"}, "call": {"duration": 0.00014171097427606583, "outcome": "passed"}, "teardown": {"duration": 9.63930506259203e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_deterministic_selection", "lineno": 495, "outcome": "passed", "keywords": ["test_deterministic_selection", "TestDeterministicScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010164990089833736, "outcome": "passed"}, "call": {"duration": 0.0001748900394886732, "outcome": "passed"}, "teardown": {"duration": 9.685102850198746e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_record_decisions", "lineno": 527, "outcome": "passed", "keywords": ["test_record_decisions", "TestDeterministicScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.864103049039841e-05, "outcome": "passed"}, "call": {"duration": 0.00015685101971030235, "outcome": "passed"}, "teardown": {"duration": 9.704986587166786e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/scheduling/test_scheduler.py::TestDeterministicScheduler::test_execution_trace", "lineno": 552, "outcome": "passed", "keywords": ["test_execution_trace", "TestDeterministicScheduler", "test_scheduler.py", "scheduling", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010031205601990223, "outcome": "passed"}, "call": {"duration": 0.00015637604519724846, "outcome": "passed"}, "teardown": {"duration": 0.00010819104500114918, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_initialization", "lineno": 13, "outcome": "passed", "keywords": ["test_initialization", "TestLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00029469002038240433, "outcome": "passed"}, "call": {"duration": 0.00013210205361247063, "outcome": "passed"}, "teardown": {"duration": 0.00010916008614003658, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_acquire", "lineno": 24, "outcome": "passed", "keywords": ["test_acquire", "TestLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010559498332440853, "outcome": "passed"}, "call": {"duration": 0.0001233129296451807, "outcome": "passed"}, "teardown": {"duration": 9.805592708289623e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_release", "lineno": 43, "outcome": "passed", "keywords": ["test_release", "TestLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010999618098139763, "outcome": "passed"}, "call": {"duration": 0.00013731908984482288, "outcome": "passed"}, "teardown": {"duration": 9.744684211909771e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_contention_and_queuing", "lineno": 60, "outcome": "passed", "keywords": ["test_contention_and_queuing", "TestLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001009299885481596, "outcome": "passed"}, "call": {"duration": 0.0001255599781870842, "outcome": "passed"}, "teardown": {"duration": 9.783799760043621e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestLock::test_statistics", "lineno": 90, "outcome": "passed", "keywords": ["test_statistics", "TestLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010113208554685116, "outcome": "passed"}, "call": {"duration": 0.0001279821153730154, "outcome": "passed"}, "teardown": {"duration": 9.954697452485561e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_initialization", "lineno": 117, "outcome": "passed", "keywords": ["test_initialization", "TestReentrantLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00011229608207941055, "outcome": "passed"}, "call": {"duration": 0.0001199459657073021, "outcome": "passed"}, "teardown": {"duration": 0.00010170484893023968, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_reentrant_acquisition", "lineno": 126, "outcome": "passed", "keywords": ["test_reentrant_acquisition", "TestReentrantLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010068900883197784, "outcome": "passed"}, "call": {"duration": 0.00012508919462561607, "outcome": "passed"}, "teardown": {"duration": 9.820912964642048e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_reentrant_release", "lineno": 148, "outcome": "passed", "keywords": ["test_reentrant_release", "TestReentrantLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.978609159588814e-05, "outcome": "passed"}, "call": {"duration": 0.00013206410221755505, "outcome": "passed"}, "teardown": {"duration": 9.59569588303566e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReentrantLock::test_statistics", "lineno": 180, "outcome": "passed", "keywords": ["test_statistics", "TestReentrantLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010995008051395416, "outcome": "passed"}, "call": {"duration": 0.0001280719880014658, "outcome": "passed"}, "teardown": {"duration": 9.795604273676872e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_initialization", "lineno": 200, "outcome": "passed", "keywords": ["test_initialization", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010039517655968666, "outcome": "passed"}, "call": {"duration": 0.00011623697355389595, "outcome": "passed"}, "teardown": {"duration": 9.733997285366058e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_read_acquisition", "lineno": 209, "outcome": "passed", "keywords": ["test_read_acquisition", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.91129782050848e-05, "outcome": "passed"}, "call": {"duration": 0.00011948496103286743, "outcome": "passed"}, "teardown": {"duration": 9.740004315972328e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_write_acquisition", "lineno": 228, "outcome": "passed", "keywords": ["test_write_acquisition", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.000110984081402421, "outcome": "passed"}, "call": {"duration": 0.00011891010217368603, "outcome": "passed"}, "teardown": {"duration": 9.833602234721184e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_read_release", "lineno": 244, "outcome": "passed", "keywords": ["test_read_release", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001009032130241394, "outcome": "passed"}, "call": {"duration": 0.00012302398681640625, "outcome": "passed"}, "teardown": {"duration": 9.696907363831997e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_write_release", "lineno": 265, "outcome": "passed", "keywords": ["test_write_release", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010266900062561035, "outcome": "passed"}, "call": {"duration": 0.00012302398681640625, "outcome": "passed"}, "teardown": {"duration": 9.637814946472645e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_writer_priority", "lineno": 285, "outcome": "passed", "keywords": ["test_writer_priority", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010791397653520107, "outcome": "passed"}, "call": {"duration": 0.00012036995030939579, "outcome": "passed"}, "teardown": {"duration": 9.41939651966095e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestReadWriteLock::test_statistics", "lineno": 305, "outcome": "passed", "keywords": ["test_statistics", "TestReadWriteLock", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.90200787782669e-05, "outcome": "passed"}, "call": {"duration": 0.00017833407036960125, "outcome": "passed"}, "teardown": {"duration": 0.00010063895024359226, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_initialization", "lineno": 330, "outcome": "passed", "keywords": ["test_initialization", "TestSemaphore", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010178494267165661, "outcome": "passed"}, "call": {"duration": 0.00011557596735656261, "outcome": "passed"}, "teardown": {"duration": 9.509781375527382e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_acquisition", "lineno": 339, "outcome": "passed", "keywords": ["test_acquisition", "TestSemaphore", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010628090240061283, "outcome": "passed"}, "call": {"duration": 0.00012500700540840626, "outcome": "passed"}, "teardown": {"duration": 9.806687012314796e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_release", "lineno": 356, "outcome": "passed", "keywords": ["test_release", "TestSemaphore", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.900401346385479e-05, "outcome": "passed"}, "call": {"duration": 0.000130373053252697, "outcome": "passed"}, "teardown": {"duration": 9.698513895273209e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestSemaphore::test_statistics", "lineno": 382, "outcome": "passed", "keywords": ["test_statistics", "TestSemaphore", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.892997331917286e-05, "outcome": "passed"}, "call": {"duration": 0.00014016591012477875, "outcome": "passed"}, "teardown": {"duration": 9.835395030677319e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_initialization", "lineno": 406, "outcome": "passed", "keywords": ["test_initialization", "TestBarrier", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010582292452454567, "outcome": "passed"}, "call": {"duration": 0.00011697784066200256, "outcome": "passed"}, "teardown": {"duration": 9.387405589222908e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_arrival", "lineno": 416, "outcome": "passed", "keywords": ["test_arrival", "TestBarrier", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.840005077421665e-05, "outcome": "passed"}, "call": {"duration": 0.0001191040500998497, "outcome": "passed"}, "teardown": {"duration": 0.00010023219510912895, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_reset", "lineno": 436, "outcome": "passed", "keywords": ["test_reset", "TestBarrier", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010090298019349575, "outcome": "passed"}, "call": {"duration": 0.00012444006279110909, "outcome": "passed"}, "teardown": {"duration": 9.591598063707352e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestBarrier::test_statistics", "lineno": 455, "outcome": "passed", "keywords": ["test_statistics", "TestBarrier", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.780214168131351e-05, "outcome": "passed"}, "call": {"duration": 0.00012097414582967758, "outcome": "passed"}, "teardown": {"duration": 0.00011053099296987057, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_initialization", "lineno": 476, "outcome": "passed", "keywords": ["test_initialization", "TestCountDownLatch", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.00010035489685833454, "outcome": "passed"}, "call": {"duration": 0.00011335290037095547, "outcome": "passed"}, "teardown": {"duration": 9.475089609622955e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_count_down", "lineno": 485, "outcome": "passed", "keywords": ["test_count_down", "TestCountDownLatch", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.986781515181065e-05, "outcome": "passed"}, "call": {"duration": 0.00011769193224608898, "outcome": "passed"}, "teardown": {"duration": 9.52710397541523e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_await", "lineno": 501, "outcome": "passed", "keywords": ["test_await", "TestCountDownLatch", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 0.0001013029832392931, "outcome": "passed"}, "call": {"duration": 0.00012770015746355057, "outcome": "passed"}, "teardown": {"duration": 9.602098725736141e-05, "outcome": "passed"}}, {"nodeid": "tests/parallel_researcher/synchronization/test_primitives.py::TestCountDownLatch::test_statistics", "lineno": 527, "outcome": "passed", "keywords": ["test_statistics", "TestCountDownLatch", "test_primitives.py", "synchronization", "parallel_researcher", "tests", "unified", ""], "setup": {"duration": 9.817210957407951e-05, "outcome": "passed"}, "call": {"duration": 0.00011605396866798401, "outcome": "passed"}, "teardown": {"duration": 9.903893806040287e-05, "outcome": "passed"}}]}