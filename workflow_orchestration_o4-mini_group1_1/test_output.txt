======================================== test session starts ========================================
platform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/celine/Research/librarybench
configfile: pyproject.toml
plugins: anyio-4.9.0, json-report-1.5.0, metadata-3.1.1
collected 21 items

SoftwareDeveloper/test_task_success.py .                                                      [  4%]
SoftwareDeveloper/test_backoff_strategy.py .                                                  [  9%]
SoftwareDeveloper/test_timeout.py F                                                           [ 14%]
SoftwareDeveloper/test_metadata_and_alerting.py .                                             [ 19%]
SoftwareDeveloper/test_task_retry.py .F                                                       [ 28%]
SoftwareDeveloper/test_dynamic_task_creation.py .                                             [ 33%]
DataScientist/test_retry_and_backoff.py F.                                                    [ 42%]
DataScientist/test_alerting_and_error_handling.py .                                           [ 47%]
DataScientist/test_timeout.py F                                                               [ 52%]
DataScientist/test_metadata_storage.py .                                                      [ 57%]
DataScientist/test_dynamic_task_creation.py .                                                 [ 61%]
DataScientist/test_task_states.py .                                                           [ 66%]
ProjectManager/tests/test_basic.py FF                                                         [ 76%]
ProjectManager/tests/test_retry_and_backoff.py FF                                             [ 85%]
ProjectManager/tests/test_timeout.py F                                                        [ 90%]
ProjectManager/tests/test_inputs_outputs.py F                                                 [ 95%]
ProjectManager/tests/test_dynamic.py F                                                        [100%]

============================================= FAILURES ==============================================
______________________________________ test_timeout_and_retry _______________________________________

    def test_timeout_and_retry():
        # sleep beyond timeout
        def sleeper(ctx):
            time.sleep(0.05)
            return {"done": True}
    
        # no retries, timeout=0.01
        executor = TaskExecutor()
        t = Task(name="slow",
                 func=sleeper,
                 input_keys=[],
                 output_keys=['done'],
                 max_retries=0,
                 retry_delay_seconds=0,
                 timeout=0.01)
        executor.register_task(t)
    
        with pytest.raises(TaskExecutionError) as ei:
            executor.execute("slow")
        # original exception is FutureTimeoutError
>       assert "timeout" in str(ei.value.original_exception).lower()
E       assert 'timeout' in ''
E        +  where '' = <built-in method lower of str object at 0x10520bd58>()
E        +    where <built-in method lower of str object at 0x10520bd58> = ''.lower
E        +      where '' = str(TimeoutError())
E        +        where TimeoutError() = TaskExecutionError("Task 'slow' failed after retries: ").original_exception
E        +          where TaskExecutionError("Task 'slow' failed after retries: ") = <ExceptionInfo TaskExecutionError("Task 'slow' failed after retries: ") tblen=2>.value

SoftwareDeveloper/test_timeout.py:26: AssertionError
____________________________________ test_always_fail_and_alert _____________________________________

    def test_always_fail_and_alert():
        def always_fail(ctx):
            raise RuntimeError("bad")
    
>       from tasks.alerting import AlertingService
E       ModuleNotFoundError: No module named 'tasks'

SoftwareDeveloper/test_task_retry.py:42: ModuleNotFoundError
________________________________________ test_retry_success _________________________________________

    def test_retry_success():
        task = IntermittentTask("it1", fails_before_success=2, max_retries=3, retry_delay_seconds=0.1, backoff_factor=2)
        p = Pipeline()
        p.add_task(task)
        ctx = p.run()
        assert task.state == 'success'
>       assert task.attempt == 3
E       assert 0 == 3
E        +  where 0 = <DataScientist.test_retry_and_backoff.IntermittentTask object at 0x106ec0440>.attempt

DataScientist/test_retry_and_backoff.py:25: AssertionError
_________________________________________ test_task_timeout _________________________________________

    def test_task_timeout():
        task = SlowTask("slow1", sleep_time=0.2, timeout_seconds=0.1)
        p = Pipeline()
        p.add_task(task)
        ctx = p.run()
        # should have recorded failure state
        assert task.state == 'failure'
        # alert was sent
        assert len(p.alerting.notifications) == 1
>       assert "timed out" in p.alerting.notifications[0]
E       AssertionError: assert 'timed out' in 'Task slow1 failed: None'

DataScientist/test_timeout.py:24: AssertionError
________________________________________ test_simple_success ________________________________________

    def test_simple_success():
>       runner = TaskRunner()

ProjectManager/tests/test_basic.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x106ec0050>, sleep_fn = None

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
_______________________________________ test_failure_no_retry _______________________________________

    def test_failure_no_retry():
>       runner = TaskRunner()

ProjectManager/tests/test_basic.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x10683bd90>, sleep_fn = None

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
________________________________________ test_retry_backoff _________________________________________

    def test_retry_backoff():
        sleeper = Sleeper()
>       runner = TaskRunner(sleep_fn=sleeper)

ProjectManager/tests/test_retry_and_backoff.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x10683bb10>
sleep_fn = <ProjectManager.tests.test_retry_and_backoff.Sleeper object at 0x106ec01a0>

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
____________________________________ test_retry_without_backoff _____________________________________

    def test_retry_without_backoff():
        sleeper = Sleeper()
>       runner = TaskRunner(sleep_fn=sleeper)

ProjectManager/tests/test_retry_and_backoff.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x106943360>
sleep_fn = <ProjectManager.tests.test_retry_and_backoff.Sleeper object at 0x10683bc50>

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
_________________________________________ test_task_timeout _________________________________________

    def test_task_timeout():
        # real sleep will block test, override sleep_fn for runner, but timeout enforced on future
        def long_task(ctx):
            time.sleep(0.2)
            return "done"
>       runner = TaskRunner()

ProjectManager/tests/test_timeout.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x106942ea0>, sleep_fn = None

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
_____________________________________ test_inputs_outputs_chain _____________________________________

    def test_inputs_outputs_chain():
>       runner = TaskRunner()

ProjectManager/tests/test_inputs_outputs.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x1069f7890>, sleep_fn = None

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
____________________________________ test_dynamic_task_creation _____________________________________

    def test_dynamic_task_creation():
>       runner = TaskRunner()

ProjectManager/tests/test_dynamic.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <ProjectManager.project_manager.runner.TaskRunner object at 0x106ed0af0>, sleep_fn = None

    def __init__(self, sleep_fn=None):
        self._tasks = []
        self.sleep_fn = sleep_fn
        self.executor = ExecutionContext()
>       self.metadata = __import__('project_manager.metadata', fromlist=['MetadataStorage']).MetadataStorage()
E       ModuleNotFoundError: No module named 'project_manager.metadata'

ProjectManager/project_manager/runner.py:8: ModuleNotFoundError
========================================= warnings summary ==========================================
workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_success
workflow_orchestration_o4-mini_group1_1/DataScientist/test_alerting_and_error_handling.py::test_alert_on_failure
workflow_orchestration_o4-mini_group1_1/DataScientist/test_timeout.py::test_task_timeout
workflow_orchestration_o4-mini_group1_1/DataScientist/test_metadata_storage.py::test_metadata_records
workflow_orchestration_o4-mini_group1_1/DataScientist/test_dynamic_task_creation.py::test_dynamic_creation
workflow_orchestration_o4-mini_group1_1/DataScientist/test_dynamic_task_creation.py::test_dynamic_creation
workflow_orchestration_o4-mini_group1_1/DataScientist/test_task_states.py::test_task_state_transitions
  /Users/celine/Research/librarybench/workflow_orchestration_o4-mini_group1_1/DataScientist/pipeline/pipeline.py:22: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    start = datetime.utcnow()

workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_success
workflow_orchestration_o4-mini_group1_1/DataScientist/test_alerting_and_error_handling.py::test_alert_on_failure
workflow_orchestration_o4-mini_group1_1/DataScientist/test_timeout.py::test_task_timeout
workflow_orchestration_o4-mini_group1_1/DataScientist/test_metadata_storage.py::test_metadata_records
workflow_orchestration_o4-mini_group1_1/DataScientist/test_dynamic_task_creation.py::test_dynamic_creation
workflow_orchestration_o4-mini_group1_1/DataScientist/test_dynamic_task_creation.py::test_dynamic_creation
workflow_orchestration_o4-mini_group1_1/DataScientist/test_task_states.py::test_task_state_transitions
  /Users/celine/Research/librarybench/workflow_orchestration_o4-mini_group1_1/DataScientist/pipeline/pipeline.py:46: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    end = datetime.utcnow()

workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_failure
workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_failure
workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_failure
  /Users/celine/Research/librarybench/workflow_orchestration_o4-mini_group1_1/DataScientist/pipeline/task.py:44: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    start = datetime.utcnow()

workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_failure
workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_failure
workflow_orchestration_o4-mini_group1_1/DataScientist/test_retry_and_backoff.py::test_retry_failure
  /Users/celine/Research/librarybench/workflow_orchestration_o4-mini_group1_1/DataScientist/pipeline/task.py:61: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
    end = datetime.utcnow()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
-------------------------------------------- JSON report --------------------------------------------
report saved to: report.json
====================================== short test summary info ======================================
FAILED SoftwareDeveloper/test_timeout.py::test_timeout_and_retry - assert 'timeout' in ''
FAILED SoftwareDeveloper/test_task_retry.py::test_always_fail_and_alert - ModuleNotFoundError: No ...
FAILED DataScientist/test_retry_and_backoff.py::test_retry_success - assert 0 == 3
FAILED DataScientist/test_timeout.py::test_task_timeout - AssertionError: assert 'timed out' in 'T...
FAILED ProjectManager/tests/test_basic.py::test_simple_success - ModuleNotFoundError: No module na...
FAILED ProjectManager/tests/test_basic.py::test_failure_no_retry - ModuleNotFoundError: No module ...
FAILED ProjectManager/tests/test_retry_and_backoff.py::test_retry_backoff - ModuleNotFoundError: N...
FAILED ProjectManager/tests/test_retry_and_backoff.py::test_retry_without_backoff - ModuleNotFound...
FAILED ProjectManager/tests/test_timeout.py::test_task_timeout - ModuleNotFoundError: No module na...
FAILED ProjectManager/tests/test_inputs_outputs.py::test_inputs_outputs_chain - ModuleNotFoundErro...
FAILED ProjectManager/tests/test_dynamic.py::test_dynamic_task_creation - ModuleNotFoundError: No ...
============================ 11 failed, 10 passed, 20 warnings in 0.44s =============================
