========================================= test session starts ==========================================
platform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/celine/Research/librarybench
configfile: pyproject.toml
plugins: anyio-4.9.0, json-report-1.5.0, metadata-3.1.1
collected 7 items

test_backoff_strategy.py .                                                                       [ 14%]
test_dynamic_task_creation.py .                                                                  [ 28%]
test_metadata_and_alerting.py .                                                                  [ 42%]
test_task_retry.py ..                                                                            [ 71%]
test_task_success.py .                                                                           [ 85%]
test_timeout.py F                                                                                [100%]

=============================================== FAILURES ===============================================
________________________________________ test_timeout_and_retry ________________________________________

    def test_timeout_and_retry():
        # sleep beyond timeout
        def sleeper(ctx):
            time.sleep(0.05)
            return {"done": True}
    
        # no retries, timeout=0.01
        executor = TaskExecutor()
        t = Task(name="slow",
                 func=sleeper,
                 input_keys=[],
                 output_keys=['done'],
                 max_retries=0,
                 retry_delay_seconds=0,
                 timeout=0.01)
        executor.register_task(t)
    
        with pytest.raises(TaskExecutionError) as ei:
            executor.execute("slow")
        # original exception is FutureTimeoutError
>       assert "timeout" in str(ei.value.original_exception).lower()
E       assert 'timeout' in ''
E        +  where '' = <built-in method lower of str object at 0x100bb7d58>()
E        +    where <built-in method lower of str object at 0x100bb7d58> = ''.lower
E        +      where '' = str(TimeoutError())
E        +        where TimeoutError() = TaskExecutionError("Task 'slow' failed after retries: ").original_exception
E        +          where TaskExecutionError("Task 'slow' failed after retries: ") = <ExceptionInfo TaskExecutionError("Task 'slow' failed after retries: ") tblen=2>.value

test_timeout.py:26: AssertionError
--------------------------------------------- JSON report ----------------------------------------------
report saved to: report.json
======================================= short test summary info ========================================
FAILED test_timeout.py::test_timeout_and_retry - assert 'timeout' in ''
===================================== 1 failed, 6 passed in 0.07s ======================================
