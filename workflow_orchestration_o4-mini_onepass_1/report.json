{"created": 1745476066.103698, "duration": 0.8616878986358643, "exitcode": 1, "root": "/Users/celine/Research/librarybench", "environment": {}, "summary": {"passed": 14, "failed": 1, "total": 15, "collected": 15}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py", "type": "Module"}]}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py", "outcome": "passed", "result": [{"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_creation", "type": "Function", "lineno": 12}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_creation", "type": "Function", "lineno": 26}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_dag_validation", "type": "Function", "lineno": 44}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_execution", "type": "Function", "lineno": 76}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_execution", "type": "Function", "lineno": 95}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_retry", "type": "Function", "lineno": 118}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_failure_propagation", "type": "Function", "lineno": 150}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_parallel_execution", "type": "Function", "lineno": 182}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_partial_execution", "type": "Function", "lineno": 221}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_timeout", "type": "Function", "lineno": 244}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_retry_with_backoff", "type": "Function", "lineno": 263}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_context_passing", "type": "Function", "lineno": 296}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_logging", "type": "Function", "lineno": 336}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_scheduling", "type": "Function", "lineno": 380}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_execution_history", "type": "Function", "lineno": 419}]}], "tests": [{"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_creation", "lineno": 12, "outcome": "passed", "keywords": ["test_task_creation", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.002667708962690085, "outcome": "passed"}, "call": {"duration": 0.00018874998204410076, "outcome": "passed"}, "teardown": {"duration": 0.00012770900502800941, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_creation", "lineno": 26, "outcome": "passed", "keywords": ["test_workflow_creation", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.0001164170098491013, "outcome": "passed"}, "call": {"duration": 0.00013354199472814798, "outcome": "passed"}, "teardown": {"duration": 0.00011054199421778321, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_dag_validation", "lineno": 44, "outcome": "passed", "keywords": ["test_dag_validation", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00010175001807510853, "outcome": "passed"}, "call": {"duration": 0.00035275000846013427, "outcome": "passed"}, "teardown": {"duration": 0.00010016601299867034, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_execution", "lineno": 76, "outcome": "passed", "keywords": ["test_task_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00010266597382724285, "outcome": "passed"}, "call": {"duration": 0.00019883399363607168, "outcome": "passed"}, "teardown": {"duration": 9.662500815466046e-05, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_execution", "lineno": 95, "outcome": "passed", "keywords": ["test_workflow_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00010012497659772635, "outcome": "passed"}, "call": {"duration": 0.0006748329615220428, "outcome": "passed"}, "teardown": {"duration": 0.00012912502279505134, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_retry", "lineno": 118, "outcome": "passed", "keywords": ["test_task_retry", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00011466699652373791, "outcome": "passed"}, "call": {"duration": 0.0006285840063355863, "outcome": "passed"}, "teardown": {"duration": 0.00015041697770357132, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_failure_propagation", "lineno": 150, "outcome": "passed", "keywords": ["test_failure_propagation", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00012437498662620783, "outcome": "passed"}, "call": {"duration": 0.0007363330223597586, "outcome": "passed"}, "teardown": {"duration": 0.00010970799485221505, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_parallel_execution", "lineno": 182, "outcome": "passed", "keywords": ["test_parallel_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00010891701094806194, "outcome": "passed"}, "call": {"duration": 0.2061437499942258, "outcome": "passed"}, "teardown": {"duration": 0.00021374999778345227, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_partial_execution", "lineno": 221, "outcome": "passed", "keywords": ["test_workflow_partial_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00018875004025176167, "outcome": "passed"}, "call": {"duration": 0.00046212499728426337, "outcome": "passed"}, "teardown": {"duration": 0.0001623330172151327, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_timeout", "lineno": 244, "outcome": "failed", "keywords": ["test_task_timeout", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00016549997963011265, "outcome": "passed"}, "call": {"duration": 0.5039639160386287, "outcome": "failed", "crash": {"path": "/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_1/tests.py", "lineno": 257, "message": "AssertionError: Regex pattern did not match.\n Regex: 'timed out'\n Input: 'Task timeout_task failed'"}, "traceback": [{"path": "tests.py", "lineno": 257, "message": "AssertionError"}], "longrepr": "def test_task_timeout():\n        \"\"\"Test task timeout functionality.\"\"\"\n    \n        def slow_task():\n            time.sleep(0.5)\n            return \"slow result\"\n    \n        task = Task(name=\"timeout_task\", func=slow_task, timeout=0.1)\n    \n        workflow = Workflow()\n        workflow.add_task(task)\n    \n        with pytest.raises(TaskFailedError, match=\"timed out\"):\n>           workflow.run()\n\ntests.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <workflow.Workflow object at 0x10274cd10>\n\n    def run(self):\n        self.validate()\n        wf_start = datetime.datetime.now()\n        status = \"success\"\n        # Results map\n        results = {}\n        # scheduling waves\n        remaining = set(self.tasks.keys())\n        # propagate pre-existing successes into results\n        for name, task in self.tasks.items():\n            if task.state == TaskState.SUCCESS:\n                results[name] = task.result\n        try:\n            while remaining:\n                # check for dependency failures\n                for name in list(remaining):\n                    task = self.tasks[name]\n                    # if any dep failed, mark failure\n                    if any(self.tasks[d].state == TaskState.FAILURE for d in task.dependencies):\n                        task.state = TaskState.FAILURE\n                        task.error = TaskFailedError(f\"Task {name} failed due to dependency failure\")\n                        remaining.remove(name)\n                # find ready tasks\n                ready = []\n                for name in remaining:\n                    task = self.tasks[name]\n                    if task.state == TaskState.PENDING and all(self.tasks[d].state == TaskState.SUCCESS for d in task.dependencies):\n                        ready.append(task)\n                if not ready:\n                    break\n                # execute in parallel\n                with ThreadPoolExecutor(max_workers=len(ready)) as executor:\n                    futures = {executor.submit(self._run_task, task): task for task in ready}\n                    for future in as_completed(futures):\n                        task = futures[future]\n                        # collect result\n                        if task.state == TaskState.SUCCESS:\n                            results[task.name] = task.result\n                # remove done\n                for task in ready:\n                    if task.state in (TaskState.SUCCESS, TaskState.FAILURE):\n                        remaining.discard(task.name)\n            # after loop, check failures\n            for task in self.tasks.values():\n                if task.state == TaskState.FAILURE:\n                    status = \"failure\"\n>                   raise TaskFailedError(f\"Task {task.name} failed\")\nE                   workflow.TaskFailedError: Task timeout_task failed\n\nworkflow.py:208: TaskFailedError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_task_timeout():\n        \"\"\"Test task timeout functionality.\"\"\"\n    \n        def slow_task():\n            time.sleep(0.5)\n            return \"slow result\"\n    \n        task = Task(name=\"timeout_task\", func=slow_task, timeout=0.1)\n    \n        workflow = Workflow()\n        workflow.add_task(task)\n    \n>       with pytest.raises(TaskFailedError, match=\"timed out\"):\nE       AssertionError: Regex pattern did not match.\nE        Regex: 'timed out'\nE        Input: 'Task timeout_task failed'\n\ntests.py:257: AssertionError"}, "teardown": {"duration": 0.0001907499972730875, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_retry_with_backoff", "lineno": 263, "outcome": "passed", "keywords": ["test_task_retry_with_backoff", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00011020898818969727, "outcome": "passed"}, "call": {"duration": 0.0005278330063447356, "outcome": "passed"}, "teardown": {"duration": 9.941699681803584e-05, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_context_passing", "lineno": 296, "outcome": "passed", "keywords": ["test_task_context_passing", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 9.241700172424316e-05, "outcome": "passed"}, "call": {"duration": 0.0010948750423267484, "outcome": "passed"}, "teardown": {"duration": 0.00011570798233151436, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_task_logging", "lineno": 336, "outcome": "passed", "keywords": ["test_task_logging", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.00010083301458507776, "outcome": "passed"}, "call": {"duration": 0.0005476669757626951, "outcome": "passed", "log": [{"name": "test_logger", "msg": "Task started", "args": null, "levelname": "INFO", "levelno": 20, "pathname": "/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_1/tests.py", "filename": "tests.py", "module": "tests", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 353, "funcName": "logging_task", "created": 1745476066.101119, "msecs": 101.0, "relativeCreated": 1056.527, "thread": 6184005632, "threadName": "ThreadPoolExecutor-11_0", "processName": "MainProcess", "process": 86671, "taskName": null}, {"name": "test_logger", "msg": "This is a warning", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_1/tests.py", "filename": "tests.py", "module": "tests", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 354, "funcName": "logging_task", "created": 1745476066.1012192, "msecs": 101.0, "relativeCreated": 1056.627, "thread": 6184005632, "threadName": "ThreadPoolExecutor-11_0", "processName": "MainProcess", "process": 86671, "taskName": null}, {"name": "test_logger", "msg": "This is an error", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_1/tests.py", "filename": "tests.py", "module": "tests", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 355, "funcName": "logging_task", "created": 1745476066.101259, "msecs": 101.0, "relativeCreated": 1056.667, "thread": 6184005632, "threadName": "ThreadPoolExecutor-11_0", "processName": "MainProcess", "process": 86671, "taskName": null}]}, "teardown": {"duration": 0.00011512503260746598, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_scheduling", "lineno": 380, "outcome": "passed", "keywords": ["test_workflow_scheduling", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 0.0001009589759632945, "outcome": "passed"}, "call": {"duration": 0.0001361659960821271, "outcome": "passed"}, "teardown": {"duration": 8.395803160965443e-05, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_1/tests.py::test_workflow_execution_history", "lineno": 419, "outcome": "passed", "keywords": ["test_workflow_execution_history", "tests.py", "workflow_orchestration_o4-mini_onepass_1", "librarybench", ""], "setup": {"duration": 8.900003740563989e-05, "outcome": "passed"}, "call": {"duration": 0.0008980000275187194, "outcome": "passed"}, "teardown": {"duration": 9.583303472027183e-05, "outcome": "passed"}}]}