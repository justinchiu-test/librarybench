{"created": 1745476141.556322, "duration": 1.6801950931549072, "exitcode": 1, "root": "/Users/celine/Research/librarybench", "environment": {}, "summary": {"error": 15, "total": 15, "collected": 15}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py", "type": "Module"}]}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py", "outcome": "passed", "result": [{"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_creation", "type": "Function", "lineno": 12}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_creation", "type": "Function", "lineno": 26}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_dag_validation", "type": "Function", "lineno": 44}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_execution", "type": "Function", "lineno": 76}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_execution", "type": "Function", "lineno": 95}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_retry", "type": "Function", "lineno": 118}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_failure_propagation", "type": "Function", "lineno": 150}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_parallel_execution", "type": "Function", "lineno": 182}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_partial_execution", "type": "Function", "lineno": 221}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_timeout", "type": "Function", "lineno": 244}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_retry_with_backoff", "type": "Function", "lineno": 263}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_context_passing", "type": "Function", "lineno": 296}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_logging", "type": "Function", "lineno": 336}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_scheduling", "type": "Function", "lineno": 380}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_execution_history", "type": "Function", "lineno": 419}]}], "tests": [{"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_creation", "lineno": 12, "outcome": "error", "keywords": ["test_task_creation", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.026857124990783632, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adca40>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.0002448330051265657, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_creation", "lineno": 26, "outcome": "error", "keywords": ["test_workflow_creation", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00014291697880253196, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104add580>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.0004795420099981129, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_dag_validation", "lineno": 44, "outcome": "error", "keywords": ["test_dag_validation", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.0001651250058785081, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adcae0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.0002341660438105464, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_execution", "lineno": 76, "outcome": "error", "keywords": ["test_task_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.0001414169673807919, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adda80>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00024758296785876155, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_execution", "lineno": 95, "outcome": "error", "keywords": ["test_workflow_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00013983302051201463, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104addbc0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00025116599863395095, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_retry", "lineno": 118, "outcome": "error", "keywords": ["test_task_retry", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00015199999324977398, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104addda0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.0002488750033080578, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_failure_propagation", "lineno": 150, "outcome": "error", "keywords": ["test_failure_propagation", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.0001590839819982648, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adde40>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.0002477079979144037, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_parallel_execution", "lineno": 182, "outcome": "error", "keywords": ["test_parallel_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00015662499936297536, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104ade0c0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00022149999858811498, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_partial_execution", "lineno": 221, "outcome": "error", "keywords": ["test_workflow_partial_execution", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00013441703049466014, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104ade340>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00020308297825977206, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_timeout", "lineno": 244, "outcome": "error", "keywords": ["test_task_timeout", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.0001336670247837901, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104addbc0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00026254099793732166, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_retry_with_backoff", "lineno": 263, "outcome": "error", "keywords": ["test_task_retry_with_backoff", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00013579102233052254, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104438040>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00022250000620260835, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_context_passing", "lineno": 296, "outcome": "error", "keywords": ["test_task_context_passing", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00013741699513047934, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adf1a0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00021179200848564506, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_task_logging", "lineno": 336, "outcome": "error", "keywords": ["test_task_logging", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00013212498743087053, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adf240>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00027795799542218447, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_scheduling", "lineno": 380, "outcome": "error", "keywords": ["test_workflow_scheduling", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00018708297284319997, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adeca0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.00024129200028255582, "outcome": "passed"}}, {"nodeid": "workflow_orchestration_o4-mini_onepass_2/tests.py::test_workflow_execution_history", "lineno": 419, "outcome": "error", "keywords": ["test_workflow_execution_history", "tests.py", "workflow_orchestration_o4-mini_onepass_2", "librarybench", ""], "setup": {"duration": 0.00015716697089374065, "outcome": "failed", "crash": {"path": "/Users/celine/miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "_pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n__init__.py:2: in <module>\n    from .workflow import (\nE   ImportError: attempted relative import with no known parent package"}, "traceback": [{"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 341, "message": ""}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 242, "message": "in <lambda>"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py", "lineno": 513, "message": "in __call__"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py", "lineno": 120, "message": "in _hookexec"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 90, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py", "lineno": 70, "message": "in unraisable_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 840, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py", "lineno": 829, "message": "in _runtest_for"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py", "lineno": 893, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 87, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py", "lineno": 68, "message": "in thread_exception_runtest_hook"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 160, "message": "in pytest_runtest_setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 507, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py", "lineno": 514, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 663, "message": "in setup"}, {"path": "../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py", "lineno": 523, "message": "CollectError"}], "longrepr": "name = '__init__', package = None\n\n    def import_module(name, package=None):\n        \"\"\"Import a module.\n    \n        The 'package' argument is required when performing a relative import. It\n        specifies the package to use as the anchor point from which to resolve the\n        relative import to an absolute import.\n    \n        \"\"\"\n        level = 0\n        if name.startswith('.'):\n            if not package:\n                raise TypeError(\"the 'package' argument is required to perform a \"\n                                f\"relative import for {name!r}\")\n            for character in name:\n                if character != '.':\n                    break\n                level += 1\n>       return _bootstrap._gcd_import(name[level:], package, level)\n\n../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    # package init, re-export main classes\n>   from .workflow import (\n        Task,\n        TaskState,\n        Workflow,\n        TaskFailedError,\n        Schedule,\n        ScheduleType,\n    )\nE   ImportError: attempted relative import with no known parent package\n\n__init__.py:2: ImportError\n\nThe above exception was the direct cause of the following exception:\n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_and_report.<locals>.<lambda> at 0x104adea20>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: Callable[[], TResult],\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\n        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,\n    ) -> CallInfo[TResult]:\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :type func: Callable[[], _pytest.runner.TResult]\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: TResult | None = func()\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:242: in <lambda>\n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_setup\n    yield from unraisable_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/unraisableexception.py:70: in unraisable_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:840: in pytest_runtest_setup\n    yield from self._runtest_for(item, \"setup\")\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/logging.py:829: in _runtest_for\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/capture.py:893: in pytest_runtest_setup\n    return (yield)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:87: in pytest_runtest_setup\n    yield from thread_exception_runtest_hook()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/threadexception.py:68: in thread_exception_runtest_hook\n    yield\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:160: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:507: in setup\n    raise exc[0].with_traceback(exc[1])\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/runner.py:514: in setup\n    col.setup()\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:663: in setup\n    init_mod = importtestmodule(self.path / \"__init__.py\", self.config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = PosixPath('/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py')\nconfig = <_pytest.config.Config object at 0x103ce2510>\n\n    def importtestmodule(\n        path: Path,\n        config: Config,\n    ):\n        # We assume we are only called once per module.\n        importmode = config.getoption(\"--import-mode\")\n        try:\n            mod = import_path(\n                path,\n                mode=importmode,\n                root=config.rootpath,\n                consider_namespace_packages=config.getini(\"consider_namespace_packages\"),\n            )\n        except SyntaxError as e:\n            raise nodes.Collector.CollectError(\n                ExceptionInfo.from_current().getrepr(style=\"short\")\n            ) from e\n        except ImportPathMismatchError as e:\n            raise nodes.Collector.CollectError(\n                \"import file mismatch:\\n\"\n                \"imported module {!r} has this __file__ attribute:\\n\"\n                \"  {}\\n\"\n                \"which is not the same as the test file we want to collect:\\n\"\n                \"  {}\\n\"\n                \"HINT: remove __pycache__ / .pyc files and/or use a \"\n                \"unique basename for your test file modules\".format(*e.args)\n            ) from e\n        except ImportError as e:\n            exc_info = ExceptionInfo.from_current()\n            if config.get_verbosity() < 2:\n                exc_info.traceback = exc_info.traceback.filter(filter_traceback)\n            exc_repr = (\n                exc_info.getrepr(style=\"short\")\n                if exc_info.traceback\n                else exc_info.exconly()\n            )\n            formatted_tb = str(exc_repr)\n>           raise nodes.Collector.CollectError(\n                f\"ImportError while importing test module '{path}'.\\n\"\n                \"Hint: make sure your test modules/packages have valid Python names.\\n\"\n                \"Traceback:\\n\"\n                f\"{formatted_tb}\"\n            ) from e\nE           _pytest.nodes.Collector.CollectError: ImportError while importing test module '/Users/celine/Research/librarybench/workflow_orchestration_o4-mini_onepass_2/__init__.py'.\nE           Hint: make sure your test modules/packages have valid Python names.\nE           Traceback:\nE           ../../../miniconda3/envs/library/lib/python3.13/importlib/__init__.py:88: in import_module\nE               return _bootstrap._gcd_import(name[level:], package, level)\nE           __init__.py:2: in <module>\nE               from .workflow import (\nE           E   ImportError: attempted relative import with no known parent package\n\n../../../miniconda3/envs/library/lib/python3.13/site-packages/_pytest/python.py:523: CollectError"}, "teardown": {"duration": 0.0002549579949118197, "outcome": "passed"}}]}